;  ASM code generated by mikroVirtualMachine for PIC - V. 8.2.0.0
;  Date/Time: 30/09/2020 21:30:58
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2AB2			GOTO	_main
$0738	$	_Delay_1us:
;delays.c,7 :: 		void Delay_1us() {
;delays.c,9 :: 		}
$0738	$0008			RETURN
$0DEC	$	_Delay_5500us:
;delays.c,31 :: 		void Delay_5500us() {
;delays.c,32 :: 		Delay_us(5500);
$0DEC	$3002			MOVLW	2
$0DED	$1303			BCF	STATUS, RP1
$0DEE	$1283			BCF	STATUS, RP0
$0DEF	$00FB			MOVWF	STACK_11
$0DF0	$30FF			MOVLW	255
$0DF1	$00FA			MOVWF	STACK_10
$0DF2	$0BFB			DECFSZ	STACK_11, F
$0DF3	$2DF5			GOTO	$+2
$0DF4	$2DF8			GOTO	$+4
$0DF5	$0BFA			DECFSZ	STACK_10, F
$0DF6	$2DF5			GOTO	$-1
$0DF7	$2DF2			GOTO	$-5
$0DF8	$30C7			MOVLW	199
$0DF9	$00FA			MOVWF	STACK_10
$0DFA	$0BFA			DECFSZ	STACK_10, F
$0DFB	$2DFA			GOTO	$-1
;delays.c,33 :: 		}
$0DFC	$0008			RETURN
$0E37	$	_Delay_50us:
;delays.c,19 :: 		void Delay_50us() {
;delays.c,20 :: 		Delay_us(50);
$0E37	$3003			MOVLW	3
$0E38	$1303			BCF	STATUS, RP1
$0E39	$1283			BCF	STATUS, RP0
$0E3A	$00FA			MOVWF	STACK_10
$0E3B	$0BFA			DECFSZ	STACK_10, F
$0E3C	$2E3B			GOTO	$-1
$0E3D	$0000			NOP
$0E3E	$0000			NOP
;delays.c,21 :: 		}
$0E3F	$0008			RETURN
$0AED	$	_Lcd_Cmd:
$0AED	$1303			BCF	STATUS, RP1
$0AEE	$1283			BCF	STATUS, RP0
$0AEF	$0820			MOVF	LCD_port_address, 0
$0AF0	$0084			MOVWF	FSR
$0AF1	$1703			BSF	STATUS, RP1
$0AF2	$0814			MOVF	FARG_Lcd_Cmd+0, 0
$0AF3	$1903			BTFSC	STATUS, Z
$0AF4	$2AF5			GOTO	L_Lcd_Cmd_0
$0AF5	$	L_Lcd_Cmd_0:
$0AF5	$1180			BCF	INDF, ___ENABLE
$0AF6	$1100			BCF	INDF, ___RS
$0AF7	$1380			BCF	INDF, ___DB7
$0AF8	$1300			BCF	INDF, ___DB6
$0AF9	$1280			BCF	INDF, ___DB5
$0AFA	$1200			BCF	INDF, ___DB4
$0AFB	$1B94			BTFSC	FARG_Lcd_Cmd+0, 7
$0AFC	$1780			BSF	INDF, ___DB7
$0AFD	$1B14			BTFSC	FARG_Lcd_Cmd+0, 6
$0AFE	$1700			BSF	INDF, ___DB6
$0AFF	$1A94			BTFSC	FARG_Lcd_Cmd+0, 5
$0B00	$1680			BSF	INDF, ___DB5
$0B01	$1A14			BTFSC	FARG_Lcd_Cmd+0, 4
$0B02	$1600			BSF	INDF, ___DB4
$0B03	$1303			BCF	STATUS, RP1
$0B04	$0821			MOVF	LCD_cmd_status, 0
$0B05	$1903			BTFSC	STATUS, Z
$0B06	$2B09			GOTO	L_Lcd_Cmd_1
$0B07	$1100			BCF	INDF, ___RS
$0B08	$2B0A			GOTO	L_Lcd_Cmd_2
$0B09	$	L_Lcd_Cmd_1:
$0B09	$1500			BSF	INDF, ___RS
$0B0A	$	L_Lcd_Cmd_2:
$0B0A	$1580			BSF	INDF, ___ENABLE
$0B0B	$118A			BCF	PCLATH, 3
$0B0C	$2738			CALL	_Delay_1us
$0B0D	$158A			BSF	PCLATH, 3
$0B0E	$1703			BSF	STATUS, RP1
$0B0F	$0814			MOVF	FARG_Lcd_Cmd+0, 0
$0B10	$1903			BTFSC	STATUS, Z
$0B11	$2B12			GOTO	L_Lcd_Cmd_3
$0B12	$	L_Lcd_Cmd_3:
$0B12	$1180			BCF	INDF, ___ENABLE
$0B13	$1100			BCF	INDF, ___RS
$0B14	$1380			BCF	INDF, ___DB7
$0B15	$1300			BCF	INDF, ___DB6
$0B16	$1280			BCF	INDF, ___DB5
$0B17	$1200			BCF	INDF, ___DB4
$0B18	$1994			BTFSC	FARG_Lcd_Cmd+0, 3
$0B19	$1780			BSF	INDF, ___DB7
$0B1A	$1914			BTFSC	FARG_Lcd_Cmd+0, 2
$0B1B	$1700			BSF	INDF, ___DB6
$0B1C	$1894			BTFSC	FARG_Lcd_Cmd+0, 1
$0B1D	$1680			BSF	INDF, ___DB5
$0B1E	$1814			BTFSC	FARG_Lcd_Cmd+0, 0
$0B1F	$1600			BSF	INDF, ___DB4
$0B20	$1303			BCF	STATUS, RP1
$0B21	$0821			MOVF	LCD_cmd_status, 0
$0B22	$1903			BTFSC	STATUS, Z
$0B23	$2B26			GOTO	L_Lcd_Cmd_4
$0B24	$1100			BCF	INDF, ___RS
$0B25	$2B27			GOTO	L_Lcd_Cmd_5
$0B26	$	L_Lcd_Cmd_4:
$0B26	$1500			BSF	INDF, ___RS
$0B27	$	L_Lcd_Cmd_5:
$0B27	$1580			BSF	INDF, ___ENABLE
$0B28	$118A			BCF	PCLATH, 3
$0B29	$2738			CALL	_Delay_1us
$0B2A	$158A			BSF	PCLATH, 3
$0B2B	$1180			BCF	INDF, ___ENABLE
$0B2C	$0821			MOVF	LCD_cmd_status, 0
$0B2D	$1903			BTFSC	STATUS, Z
$0B2E	$2B31			GOTO	L_Lcd_Cmd_6
$0B2F	$25EC			CALL	_Delay_5500us
$0B30	$2B32			GOTO	L_Lcd_Cmd_7
$0B31	$	L_Lcd_Cmd_6:
$0B31	$2637			CALL	_Delay_50us
$0B32	$	L_Lcd_Cmd_7:
$0B32	$0008			RETURN
$0E2E	$	_Delay_22us:
;delays.c,15 :: 		void Delay_22us() {
;delays.c,16 :: 		Delay_us(22);
$0E2E	$3001			MOVLW	1
$0E2F	$1303			BCF	STATUS, RP1
$0E30	$1283			BCF	STATUS, RP0
$0E31	$00FA			MOVWF	STACK_10
$0E32	$0BFA			DECFSZ	STACK_10, F
$0E33	$2E32			GOTO	$-1
$0E34	$0000			NOP
$0E35	$0000			NOP
;delays.c,17 :: 		}
$0E36	$0008			RETURN
$0D7F	$	_EEprom_write:
$0D7F	$0000			NOP
$0D80	$	L_EEprom_write_0:
$0D80	$1703			BSF	STATUS, RP1
$0D81	$1683			BSF	STATUS, RP0
$0D82	$1C8C			BTFSS	EECON1, 1
$0D83	$2D86			GOTO	L_EEprom_write_1
$0D84	$0000			NOP
$0D85	$2D80			GOTO	L_EEprom_write_0
$0D86	$	L_EEprom_write_1:
$0D86	$1283			BCF	STATUS, RP0
$0D87	$0814			MOVF	FARG_EEprom_write+0, 0
$0D88	$008D			MOVWF	EEADR
$0D89	$0815			MOVF	FARG_EEprom_write+1, 0
$0D8A	$008C			MOVWF	EEDATA
$0D8B	$1683			BSF	STATUS, RP0
$0D8C	$138C			BCF	EECON1, 7
$0D8D	$150C			BSF	EECON1, 2
$0D8E	$138B			BCF	INTCON, 7
$0D8F	$3055			MOVLW	85
$0D90	$008D			MOVWF	EECON2
$0D91	$30AA			MOVLW	170
$0D92	$008D			MOVWF	EECON2
$0D93	$148C			BSF	EECON1, 1
$0D94	$178B			BSF	INTCON, 7
$0D95	$110C			BCF	EECON1, 2
$0D96	$0008			RETURN
$0E23	$	_EEprom_read:
$0E23	$1703			BSF	STATUS, RP1
$0E24	$1283			BCF	STATUS, RP0
$0E25	$0814			MOVF	FARG_EEprom_read+0, 0
$0E26	$008D			MOVWF	EEADR
$0E27	$1683			BSF	STATUS, RP0
$0E28	$138C			BCF	EECON1, 7
$0E29	$140C			BSF	EECON1, 0
$0E2A	$1283			BCF	STATUS, RP0
$0E2B	$080C			MOVF	EEDATA, 0
$0E2C	$00F0			MOVWF	STACK_0
$0E2D	$0008			RETURN
$0D4E	$	_Div_16x16_U:
$0D4E	$1303			BCF	STATUS, RP1
$0D4F	$1283			BCF	STATUS, RP0
$0D50	$01F8			CLRF	STACK_8
$0D51	$01F9			CLRF	STACK_9
$0D52	$3010			MOVLW	16
$0D53	$00FC			MOVWF	STACK_12
$0D54	$0D71			RLF	STACK_1, W
$0D55	$0DF8			RLF	STACK_8, F
$0D56	$0DF9			RLF	STACK_9, F
$0D57	$0874			MOVF	STACK_4, W
$0D58	$02F8			SUBWF	STACK_8, F
$0D59	$0875			MOVF	STACK_5, W
$0D5A	$1C03			BTFSS	STATUS, C
$0D5B	$0F75			INCFSZ	STACK_5, W
$0D5C	$02F9			SUBWF	STACK_9, F
$0D5D	$1803			BTFSC	STATUS, C
$0D5E	$2D66			GOTO	$+8
$0D5F	$0874			MOVF	STACK_4, W
$0D60	$07F8			ADDWF	STACK_8, F
$0D61	$0875			MOVF	STACK_5, W
$0D62	$1803			BTFSC	STATUS, C
$0D63	$0F75			INCFSZ	STACK_5, W
$0D64	$07F9			ADDWF	STACK_9, F
$0D65	$1003			BCF	STATUS, C
$0D66	$0DF0			RLF	STACK_0, F
$0D67	$0DF1			RLF	STACK_1, F
$0D68	$0BFC			DECFSZ	STACK_12, F
$0D69	$2D54			GOTO	$-21
$0D6A	$0008			RETURN
$0DFD	$	_Lcd_Chr_CP:
$0DFD	$1303			BCF	STATUS, RP1
$0DFE	$1283			BCF	STATUS, RP0
$0DFF	$01A1			CLRF	LCD_cmd_status, 1
$0E00	$1683			BSF	STATUS, RP0
$0E01	$086C			MOVF	FARG_Lcd_Chr_CP+0, 0
$0E02	$1703			BSF	STATUS, RP1
$0E03	$1283			BCF	STATUS, RP0
$0E04	$0094			MOVWF	FARG_Lcd_Cmd+0
$0E05	$22ED			CALL	_Lcd_Cmd
$0E06	$3001			MOVLW	1
$0E07	$00A1			MOVWF	LCD_cmd_status
$0E08	$0008			RETURN
$0E70	$	_____DoICP:
$0E70	$1303			BCF	STATUS, RP1
$0E71	$1283			BCF	STATUS, RP0
$0E72	$0823			MOVF	___DoICPHiAddr, 0
$0E73	$008A			MOVWF	PCLATH
$0E74	$0824			MOVF	___DoICPLoAddr, 0
$0E75	$0082			MOVWF	PCL
$0E76	$0008			RETURN
$0CAB	$	_Adc_Read:
$0CAB	$1303			BCF	STATUS, RP1
$0CAC	$1283			BCF	STATUS, RP0
$0CAD	$019F			CLRF	ADCON0, 1
$0CAE	$30C0			MOVLW	192
$0CAF	$049F			IORWF	ADCON0, 1
$0CB0	$1683			BSF	STATUS, RP0
$0CB1	$171F			BSF	ADCON1, 6
$0CB2	$179F			BSF	ADCON1, 7
$0CB3	$086C			MOVF	FARG_Adc_Read+0, 0
$0CB4	$00F0			MOVWF	STACK_0
$0CB5	$0DF0			RLF	STACK_0, 1
$0CB6	$1070			BCF	STACK_0, 0
$0CB7	$0DF0			RLF	STACK_0, 1
$0CB8	$1070			BCF	STACK_0, 0
$0CB9	$0DF0			RLF	STACK_0, 1
$0CBA	$1070			BCF	STACK_0, 0
$0CBB	$0870			MOVF	STACK_0, 0
$0CBC	$1283			BCF	STATUS, RP0
$0CBD	$049F			IORWF	ADCON0, 1
$0CBE	$141F			BSF	ADCON0, 0
$0CBF	$262E			CALL	_Delay_22us
$0CC0	$151F			BSF	ADCON0, 2
$0CC1	$	L_Adc_Read_0:
$0CC1	$1D1F			BTFSS	ADCON0, 2
$0CC2	$2CC5			GOTO	L_Adc_Read_1
$0CC3	$0000			NOP
$0CC4	$2CC1			GOTO	L_Adc_Read_0
$0CC5	$	L_Adc_Read_1:
$0CC5	$101F			BCF	ADCON0, 0
$0CC6	$3008			MOVLW	8
$0CC7	$00F2			MOVWF	STACK_2
$0CC8	$081E			MOVF	ADRESH, 0
$0CC9	$00F0			MOVWF	STACK_0
$0CCA	$01F1			CLRF	STACK_0+1
$0CCB	$0872			MOVF	STACK_2, 0
$0CCC	$	L_Adc_Read_2:
$0CCC	$1903			BTFSC	STATUS, Z
$0CCD	$2CD3			GOTO	L_Adc_Read_3
$0CCE	$0DF0			RLF	STACK_0, 1
$0CCF	$0DF1			RLF	STACK_0+1, 1
$0CD0	$1070			BCF	STACK_0, 0
$0CD1	$3FFF			ADDLW	255
$0CD2	$2CCC			GOTO	L_Adc_Read_2
$0CD3	$	L_Adc_Read_3:
$0CD3	$1683			BSF	STATUS, RP0
$0CD4	$081E			MOVF	ADRESL, 0
$0CD5	$04F0			IORWF	STACK_0, 1
$0CD6	$3000			MOVLW	0
$0CD7	$04F1			IORWF	STACK_0+1, 1
$0CD8	$0008			RETURN
$06D6	$	_decodifica_tasto:
;MonoBank.c,92 :: 		unsigned short decodifica_tasto(unsigned int adcValue) {
;MonoBank.c,95 :: 		unsigned short vo=0;
$06D6	$1703			BSF	STATUS, RP1
$06D7	$1283			BCF	STATUS, RP0
$06D8	$0193			CLRF	decodifica_tasto_vo_L0, 1
;MonoBank.c,97 :: 		for (  i = 0; i < 16; i++ ) {
$06D9	$0190			CLRF	decodifica_tasto_i_L0, 1
$06DA	$	L_decodifica_tasto_8:
$06DA	$3010			MOVLW	16
$06DB	$0210			SUBWF	decodifica_tasto_i_L0, 0
$06DC	$1803			BTFSC	STATUS, C
$06DD	$2F35			GOTO	L_decodifica_tasto_9
;MonoBank.c,98 :: 		min= keyPadConst[i][0] - 8;
$06DE	$3002			MOVLW	2
$06DF	$00F4			MOVWF	STACK_4
$06E0	$0810			MOVF	decodifica_tasto_i_L0, 0
$06E1	$00F0			MOVWF	STACK_0
$06E2	$0874			MOVF	STACK_4, 0
$06E3	$	L_decodifica_tasto_94:
$06E3	$1903			BTFSC	STATUS, Z
$06E4	$2EE9			GOTO	L_decodifica_tasto_95
$06E5	$0DF0			RLF	STACK_0, 1
$06E6	$1070			BCF	STACK_0, 0
$06E7	$3FFF			ADDLW	255
$06E8	$2EE3			GOTO	L_decodifica_tasto_94
$06E9	$	L_decodifica_tasto_95:
$06E9	$0870			MOVF	STACK_0, 0
$06EA	$3F25			ADDLW	_keyPadConst
$06EB	$00F4			MOVWF	STACK_4
$06EC	$0874			MOVF	STACK_4, 0
$06ED	$0084			MOVWF	FSR
$06EE	$0800			MOVF	INDF, 0
$06EF	$00F0			MOVWF	STACK_0
$06F0	$0A84			INCF	FSR, 1
$06F1	$0800			MOVF	INDF, 0
$06F2	$00F1			MOVWF	STACK_0+1
$06F3	$3008			MOVLW	8
$06F4	$0270			SUBWF	STACK_0, 0
$06F5	$00F2			MOVWF	STACK_2
$06F6	$3000			MOVLW	0
$06F7	$1C03			BTFSS	STATUS, C
$06F8	$3F01			ADDLW	1
$06F9	$0271			SUBWF	STACK_0+1, 0
$06FA	$00F3			MOVWF	STACK_2+1
;MonoBank.c,99 :: 		max= keyPadConst[i][0] + 8;
$06FB	$0874			MOVF	STACK_4, 0
$06FC	$0084			MOVWF	FSR
$06FD	$0800			MOVF	INDF, 0
$06FE	$0091			MOVWF	decodifica_tasto_max_L0
$06FF	$0A84			INCF	FSR, 1
$0700	$0800			MOVF	INDF, 0
$0701	$0092			MOVWF	decodifica_tasto_max_L0+1
$0702	$3008			MOVLW	8
$0703	$0791			ADDWF	decodifica_tasto_max_L0, 1
$0704	$1803			BTFSC	STATUS, C
$0705	$0A92			INCF	decodifica_tasto_max_L0+1, 1
;MonoBank.c,101 :: 		if (( adcValue>=min) && (adcValue<=max)) {
$0706	$0873			MOVF	STACK_2+1, 0
$0707	$1303			BCF	STATUS, RP1
$0708	$1683			BSF	STATUS, RP0
$0709	$026D			SUBWF	FARG_decodifica_tasto+1, 0
$070A	$1D03			BTFSS	STATUS, Z
$070B	$2F0E			GOTO	L_decodifica_tasto_96
$070C	$0872			MOVF	STACK_2, 0
$070D	$026C			SUBWF	FARG_decodifica_tasto+0, 0
$070E	$	L_decodifica_tasto_96:
$070E	$1C03			BTFSS	STATUS, C
$070F	$2F31			GOTO	L_decodifica_tasto_13
$0710	$086D			MOVF	FARG_decodifica_tasto+1, 0
$0711	$1703			BSF	STATUS, RP1
$0712	$1283			BCF	STATUS, RP0
$0713	$0212			SUBWF	decodifica_tasto_max_L0+1, 0
$0714	$1D03			BTFSS	STATUS, Z
$0715	$2F1C			GOTO	L_decodifica_tasto_97
$0716	$1303			BCF	STATUS, RP1
$0717	$1683			BSF	STATUS, RP0
$0718	$086C			MOVF	FARG_decodifica_tasto+0, 0
$0719	$1703			BSF	STATUS, RP1
$071A	$1283			BCF	STATUS, RP0
$071B	$0211			SUBWF	decodifica_tasto_max_L0, 0
$071C	$	L_decodifica_tasto_97:
$071C	$1C03			BTFSS	STATUS, C
$071D	$2F31			GOTO	L_decodifica_tasto_13
$071E	$	L66_ex_L_decodifica_tasto_13:
;MonoBank.c,102 :: 		vo=keyPadConst[i][1];
$071E	$3002			MOVLW	2
$071F	$00F4			MOVWF	STACK_4
$0720	$0810			MOVF	decodifica_tasto_i_L0, 0
$0721	$00F0			MOVWF	STACK_0
$0722	$0874			MOVF	STACK_4, 0
$0723	$	L_decodifica_tasto_98:
$0723	$1903			BTFSC	STATUS, Z
$0724	$2F29			GOTO	L_decodifica_tasto_99
$0725	$0DF0			RLF	STACK_0, 1
$0726	$1070			BCF	STACK_0, 0
$0727	$3FFF			ADDLW	255
$0728	$2F23			GOTO	L_decodifica_tasto_98
$0729	$	L_decodifica_tasto_99:
$0729	$3025			MOVLW	_keyPadConst
$072A	$07F0			ADDWF	STACK_0, 1
$072B	$3002			MOVLW	2
$072C	$0770			ADDWF	STACK_0, 0
$072D	$0084			MOVWF	FSR
$072E	$0800			MOVF	INDF, 0
$072F	$0093			MOVWF	decodifica_tasto_vo_L0
;MonoBank.c,104 :: 		break;
$0730	$2F35			GOTO	L_decodifica_tasto_9
;MonoBank.c,105 :: 		}
$0731	$	L_decodifica_tasto_13:
;MonoBank.c,107 :: 		}
$0731	$	L_decodifica_tasto_10:
;MonoBank.c,97 :: 		for (  i = 0; i < 16; i++ ) {
$0731	$1703			BSF	STATUS, RP1
$0732	$1283			BCF	STATUS, RP0
$0733	$0A90			INCF	decodifica_tasto_i_L0, 1
;MonoBank.c,107 :: 		}
$0734	$2EDA			GOTO	L_decodifica_tasto_8
$0735	$	L_decodifica_tasto_9:
;MonoBank.c,108 :: 		return vo;
$0735	$0813			MOVF	decodifica_tasto_vo_L0, 0
$0736	$00F0			MOVWF	STACK_0
;MonoBank.c,109 :: 		}
$0737	$0008			RETURN
$0D1B	$	_store_int:
;MonoBank.c,347 :: 		void store_int(unsigned int adres, unsigned int sayi){
;MonoBank.c,348 :: 		eeprom_write(adres,lo(sayi));
$0D1B	$1303			BCF	STATUS, RP1
$0D1C	$1683			BSF	STATUS, RP0
$0D1D	$086C			MOVF	FARG_store_int+0, 0
$0D1E	$1703			BSF	STATUS, RP1
$0D1F	$1283			BCF	STATUS, RP0
$0D20	$0094			MOVWF	FARG_EEprom_write+0
$0D21	$1303			BCF	STATUS, RP1
$0D22	$1683			BSF	STATUS, RP0
$0D23	$086E			MOVF	FARG_store_int+2, 0
$0D24	$1703			BSF	STATUS, RP1
$0D25	$1283			BCF	STATUS, RP0
$0D26	$0095			MOVWF	FARG_EEprom_write+1
$0D27	$257F			CALL	_EEprom_write
;MonoBank.c,349 :: 		eeprom_write(adres+1,hi(sayi));
$0D28	$1303			BCF	STATUS, RP1
$0D29	$0A6C			INCF	FARG_store_int+0, 0
$0D2A	$1703			BSF	STATUS, RP1
$0D2B	$1283			BCF	STATUS, RP0
$0D2C	$0094			MOVWF	FARG_EEprom_write+0
$0D2D	$1303			BCF	STATUS, RP1
$0D2E	$1683			BSF	STATUS, RP0
$0D2F	$086F			MOVF	FARG_store_int+3, 0
$0D30	$1703			BSF	STATUS, RP1
$0D31	$1283			BCF	STATUS, RP0
$0D32	$0095			MOVWF	FARG_EEprom_write+1
$0D33	$257F			CALL	_EEprom_write
;MonoBank.c,351 :: 		}
$0D34	$0008			RETURN
$0E09	$	_isdigit:
$0E09	$1303			BCF	STATUS, RP1
$0E0A	$1683			BSF	STATUS, RP0
$0E0B	$086C			MOVF	FARG_isdigit+0, 0
$0E0C	$3C39			SUBLW	57
$0E0D	$1C03			BTFSS	STATUS, C
$0E0E	$2E16			GOTO	L_isdigit_9
$0E0F	$3030			MOVLW	48
$0E10	$026C			SUBWF	FARG_isdigit+0, 0
$0E11	$1C03			BTFSS	STATUS, C
$0E12	$2E16			GOTO	L_isdigit_9
$0E13	$3001			MOVLW	1
$0E14	$00F0			MOVWF	STACK_0
$0E15	$2E17			GOTO	L_isdigit_8
$0E16	$	L_isdigit_9:
$0E16	$01F0			CLRF	STACK_0, 1
$0E17	$	L_isdigit_8:
$0E17	$0008			RETURN
$0BBF	$	_Mul_16x16_S:
$0BBF	$1303			BCF	STATUS, RP1
$0BC0	$1283			BCF	STATUS, RP0
$0BC1	$01FB			CLRF	STACK_11
$0BC2	$01FA			CLRF	STACK_10
$0BC3	$01F9			CLRF	STACK_9
$0BC4	$3080			MOVLW	128
$0BC5	$00F8			MOVWF	STACK_8
$0BC6	$01FD			CLRF	STACK_13
$0BC7	$1FF1			BTFSS	STACK_1, 7
$0BC8	$2BCF			GOTO	$+7
$0BC9	$09F1			COMF	STACK_1, F
$0BCA	$09F0			COMF	STACK_0, F
$0BCB	$0AF0			INCF	STACK_0, F
$0BCC	$1903			BTFSC	STATUS, Z
$0BCD	$0AF1			INCF	STACK_1, F
$0BCE	$0AFD			INCF	STACK_13, F
$0BCF	$1FF5			BTFSS	STACK_5, 7
$0BD0	$2BD7			GOTO	$+7
$0BD1	$09F5			COMF	STACK_5, F
$0BD2	$09F4			COMF	STACK_4, F
$0BD3	$0AF4			INCF	STACK_4, F
$0BD4	$1903			BTFSC	STATUS, Z
$0BD5	$0AF5			INCF	STACK_5, F
$0BD6	$0AFD			INCF	STACK_13, F
$0BD7	$0CF1			RRF	STACK_1, F
$0BD8	$0CF0			RRF	STACK_0, F
$0BD9	$1C03			BTFSS	STATUS, C
$0BDA	$2BE4			GOTO	$+10
$0BDB	$0874			MOVF	STACK_4, W
$0BDC	$07F9			ADDWF	STACK_9, F
$0BDD	$0875			MOVF	STACK_5, W
$0BDE	$1803			BTFSC	STATUS, C
$0BDF	$0F75			INCFSZ	STACK_5, W
$0BE0	$07FA			ADDWF	STACK_10, F
$0BE1	$1803			BTFSC	STATUS, C
$0BE2	$0AFB			INCF	STACK_11, F
$0BE3	$1003			BCF	STATUS, C
$0BE4	$1FF0			BTFSS	STACK_0, 7
$0BE5	$2BEC			GOTO	$+7
$0BE6	$0874			MOVF	STACK_4, W
$0BE7	$07FA			ADDWF	STACK_10, F
$0BE8	$1803			BTFSC	STATUS, C
$0BE9	$0AFB			INCF	STACK_11, F
$0BEA	$0875			MOVF	STACK_5, W
$0BEB	$07FB			ADDWF	STACK_11, F
$0BEC	$0CFB			RRF	STACK_11, F
$0BED	$0CFA			RRF	STACK_10, F
$0BEE	$0CF9			RRF	STACK_9, F
$0BEF	$0CF8			RRF	STACK_8, F
$0BF0	$1C03			BTFSS	STATUS, C
$0BF1	$2BD7			GOTO	$-26
$0BF2	$1C7D			BTFSS	STACK_13, 0
$0BF3	$2BFF			GOTO	$+12
$0BF4	$09FB			COMF	STACK_11, F
$0BF5	$09FA			COMF	STACK_10, F
$0BF6	$09F9			COMF	STACK_9, F
$0BF7	$09F8			COMF	STACK_8, F
$0BF8	$0AF8			INCF	STACK_8, F
$0BF9	$1903			BTFSC	STATUS, Z
$0BFA	$0AF9			INCF	STACK_9, F
$0BFB	$1903			BTFSC	STATUS, Z
$0BFC	$0AFA			INCF	STACK_10, F
$0BFD	$1903			BTFSC	STATUS, Z
$0BFE	$0AFB			INCF	STACK_11, F
$0BFF	$087B			MOVF	STACK_11, W
$0C00	$00F3			MOVWF	STACK_3
$0C01	$087A			MOVF	STACK_10, W
$0C02	$00F2			MOVWF	STACK_2
$0C03	$0879			MOVF	STACK_9, W
$0C04	$00F1			MOVWF	STACK_1
$0C05	$0878			MOVF	STACK_8, W
$0C06	$00F0			MOVWF	STACK_0
$0C07	$0000			NOP
$0C08	$0008			RETURN
$0D35	$	_read_int:
;MonoBank.c,366 :: 		unsigned int read_int(unsigned int adres){
;MonoBank.c,368 :: 		lo(th)=eeprom_read(adres);
$0D35	$1303			BCF	STATUS, RP1
$0D36	$1683			BSF	STATUS, RP0
$0D37	$086C			MOVF	FARG_read_int+0, 0
$0D38	$1703			BSF	STATUS, RP1
$0D39	$1283			BCF	STATUS, RP0
$0D3A	$0094			MOVWF	FARG_EEprom_read+0
$0D3B	$2623			CALL	_EEprom_read
$0D3C	$0870			MOVF	STACK_0, 0
$0D3D	$1303			BCF	STATUS, RP1
$0D3E	$1683			BSF	STATUS, RP0
$0D3F	$00EE			MOVWF	read_int_th_L0
;MonoBank.c,369 :: 		hi(th)=eeprom_read(adres+1);
$0D40	$0A6C			INCF	FARG_read_int+0, 0
$0D41	$1703			BSF	STATUS, RP1
$0D42	$1283			BCF	STATUS, RP0
$0D43	$0094			MOVWF	FARG_EEprom_read+0
$0D44	$2623			CALL	_EEprom_read
$0D45	$0870			MOVF	STACK_0, 0
$0D46	$1303			BCF	STATUS, RP1
$0D47	$1683			BSF	STATUS, RP0
$0D48	$00EF			MOVWF	read_int_th_L0+1
;MonoBank.c,371 :: 		return th;
$0D49	$086E			MOVF	read_int_th_L0, 0
$0D4A	$00F0			MOVWF	STACK_0
$0D4B	$086F			MOVF	read_int_th_L0+1, 0
$0D4C	$00F1			MOVWF	STACK_0+1
;MonoBank.c,372 :: 		}
$0D4D	$0008			RETURN
$098F	$	_WordToStr:
$098F	$1303			BCF	STATUS, RP1
$0990	$1683			BSF	STATUS, RP0
$0991	$086E			MOVF	FARG_WordToStr+2, 0
$0992	$0084			MOVWF	FSR
$0993	$3020			MOVLW	32
$0994	$0080			MOVWF	INDF
$0995	$0A6E			INCF	FARG_WordToStr+2, 0
$0996	$00F0			MOVWF	STACK_0
$0997	$0870			MOVF	STACK_0, 0
$0998	$0084			MOVWF	FSR
$0999	$3020			MOVLW	32
$099A	$0080			MOVWF	INDF
$099B	$3002			MOVLW	2
$099C	$076E			ADDWF	FARG_WordToStr+2, 0
$099D	$00F0			MOVWF	STACK_0
$099E	$0870			MOVF	STACK_0, 0
$099F	$0084			MOVWF	FSR
$09A0	$3020			MOVLW	32
$09A1	$0080			MOVWF	INDF
$09A2	$3003			MOVLW	3
$09A3	$076E			ADDWF	FARG_WordToStr+2, 0
$09A4	$00F0			MOVWF	STACK_0
$09A5	$0870			MOVF	STACK_0, 0
$09A6	$0084			MOVWF	FSR
$09A7	$3020			MOVLW	32
$09A8	$0080			MOVWF	INDF
$09A9	$3004			MOVLW	4
$09AA	$076E			ADDWF	FARG_WordToStr+2, 0
$09AB	$00F0			MOVWF	STACK_0
$09AC	$0870			MOVF	STACK_0, 0
$09AD	$0084			MOVWF	FSR
$09AE	$3030			MOVLW	48
$09AF	$0080			MOVWF	INDF
$09B0	$3005			MOVLW	5
$09B1	$076E			ADDWF	FARG_WordToStr+2, 0
$09B2	$00F0			MOVWF	STACK_0
$09B3	$0870			MOVF	STACK_0, 0
$09B4	$0084			MOVWF	FSR
$09B5	$0180			CLRF	INDF, 1
$09B6	$3004			MOVLW	4
$09B7	$1703			BSF	STATUS, RP1
$09B8	$1283			BCF	STATUS, RP0
$09B9	$0090			MOVWF	WordToStr_pos_L0
$09BA	$	L_WordToStr_4:
$09BA	$1303			BCF	STATUS, RP1
$09BB	$1683			BSF	STATUS, RP0
$09BC	$086D			MOVF	FARG_WordToStr+1, 0
$09BD	$3C00			SUBLW	0
$09BE	$1D03			BTFSS	STATUS, Z
$09BF	$29C2			GOTO	L_WordToStr_51
$09C0	$086C			MOVF	FARG_WordToStr+0, 0
$09C1	$3C00			SUBLW	0
$09C2	$	L_WordToStr_51:
$09C2	$1803			BTFSC	STATUS, C
$09C3	$29F5			GOTO	L_WordToStr_5
$09C4	$1703			BSF	STATUS, RP1
$09C5	$1283			BCF	STATUS, RP0
$09C6	$0810			MOVF	WordToStr_pos_L0, 0
$09C7	$1303			BCF	STATUS, RP1
$09C8	$1683			BSF	STATUS, RP0
$09C9	$076E			ADDWF	FARG_WordToStr+2, 0
$09CA	$1703			BSF	STATUS, RP1
$09CB	$1283			BCF	STATUS, RP0
$09CC	$0091			MOVWF	FLOC_WordToStr+1
$09CD	$300A			MOVLW	10
$09CE	$00F4			MOVWF	STACK_4
$09CF	$01F5			CLRF	STACK_4+1
$09D0	$1303			BCF	STATUS, RP1
$09D1	$1683			BSF	STATUS, RP0
$09D2	$086C			MOVF	FARG_WordToStr+0, 0
$09D3	$00F0			MOVWF	STACK_0
$09D4	$086D			MOVF	FARG_WordToStr+1, 0
$09D5	$00F1			MOVWF	STACK_0+1
$09D6	$254E			CALL	_div_16x16_u
$09D7	$0878			MOVF	STACK_8, 0
$09D8	$00F0			MOVWF	STACK_0
$09D9	$0879			MOVF	STACK_9, 0
$09DA	$00F1			MOVWF	STACK_1
$09DB	$3030			MOVLW	48
$09DC	$07F0			ADDWF	STACK_0, 1
$09DD	$1703			BSF	STATUS, RP1
$09DE	$0811			MOVF	FLOC_WordToStr+1, 0
$09DF	$0084			MOVWF	FSR
$09E0	$0870			MOVF	STACK_0, 0
$09E1	$0080			MOVWF	INDF
$09E2	$300A			MOVLW	10
$09E3	$00F4			MOVWF	STACK_4
$09E4	$01F5			CLRF	STACK_4+1
$09E5	$1303			BCF	STATUS, RP1
$09E6	$1683			BSF	STATUS, RP0
$09E7	$086C			MOVF	FARG_WordToStr+0, 0
$09E8	$00F0			MOVWF	STACK_0
$09E9	$086D			MOVF	FARG_WordToStr+1, 0
$09EA	$00F1			MOVWF	STACK_0+1
$09EB	$254E			CALL	_div_16x16_u
$09EC	$0870			MOVF	STACK_0, 0
$09ED	$1683			BSF	STATUS, RP0
$09EE	$00EC			MOVWF	FARG_WordToStr+0
$09EF	$0871			MOVF	STACK_0+1, 0
$09F0	$00ED			MOVWF	FARG_WordToStr+1
$09F1	$1703			BSF	STATUS, RP1
$09F2	$1283			BCF	STATUS, RP0
$09F3	$0390			DECF	WordToStr_pos_L0, 1
$09F4	$29BA			GOTO	L_WordToStr_4
$09F5	$	L_WordToStr_5:
$09F5	$1703			BSF	STATUS, RP1
$09F6	$1283			BCF	STATUS, RP0
$09F7	$0008			RETURN
$0940	$	_Lcd_Init:
$0940	$25EC			CALL	_Delay_5500us
$0941	$25EC			CALL	_Delay_5500us
$0942	$25EC			CALL	_Delay_5500us
$0943	$1683			BSF	STATUS, RP0
$0944	$0865			MOVF	FARG_Lcd_Init+0, 0
$0945	$1283			BCF	STATUS, RP0
$0946	$00A0			MOVWF	LCD_port_address
$0947	$1683			BSF	STATUS, RP0
$0948	$0865			MOVF	FARG_Lcd_Init+0, 0
$0949	$0084			MOVWF	FSR
$094A	$1784			BSF	FSR, 7
$094B	$1180			BCF	INDF, ___ENABLE
$094C	$1100			BCF	INDF, ___RS
$094D	$1000			BCF	INDF, ___RW
$094E	$1380			BCF	INDF, ___DB7
$094F	$1300			BCF	INDF, ___DB6
$0950	$1280			BCF	INDF, ___DB5
$0951	$1200			BCF	INDF, ___DB4
$0952	$1384			BCF	FSR, 7
$0953	$1180			BCF	INDF, ___ENABLE
$0954	$1100			BCF	INDF, ___RS
$0955	$1000			BCF	INDF, ___RW
$0956	$1380			BCF	INDF, ___DB7
$0957	$1300			BCF	INDF, ___DB6
$0958	$1280			BCF	INDF, ___DB5
$0959	$1200			BCF	INDF, ___DB4
$095A	$1680			BSF	INDF, ___DB5
$095B	$1600			BSF	INDF, ___DB4
$095C	$1580			BSF	INDF, ___ENABLE
$095D	$1180			BCF	INDF, ___ENABLE
$095E	$25EC			CALL	_Delay_5500us
$095F	$1580			BSF	INDF, ___ENABLE
$0960	$1180			BCF	INDF, ___ENABLE
$0961	$25EC			CALL	_Delay_5500us
$0962	$1580			BSF	INDF, ___ENABLE
$0963	$1180			BCF	INDF, ___ENABLE
$0964	$25EC			CALL	_Delay_5500us
$0965	$1680			BSF	INDF, ___DB5
$0966	$1200			BCF	INDF, ___DB4
$0967	$1580			BSF	INDF, ___ENABLE
$0968	$1180			BCF	INDF, ___ENABLE
$0969	$25EC			CALL	_Delay_5500us
$096A	$0180			CLRF	INDF
$096B	$1680			BSF	INDF, ___DB5
$096C	$1580			BSF	INDF, ___ENABLE
$096D	$1180			BCF	INDF, ___ENABLE
$096E	$0180			CLRF	INDF
$096F	$1780			BSF	INDF, ___DB7
$0970	$1580			BSF	INDF, ___ENABLE
$0971	$1180			BCF	INDF, ___ENABLE
$0972	$25EC			CALL	_Delay_5500us
$0973	$0180			CLRF	INDF
$0974	$1600			BSF	INDF, ___DB4
$0975	$1580			BSF	INDF, ___ENABLE
$0976	$1180			BCF	INDF, ___ENABLE
$0977	$0180			CLRF	INDF
$0978	$1580			BSF	INDF, ___ENABLE
$0979	$1180			BCF	INDF, ___ENABLE
$097A	$25EC			CALL	_Delay_5500us
$097B	$0180			CLRF	INDF
$097C	$1580			BSF	INDF, ___ENABLE
$097D	$1180			BCF	INDF, ___ENABLE
$097E	$1600			BSF	INDF, ___DB4
$097F	$1580			BSF	INDF, ___ENABLE
$0980	$1180			BCF	INDF, ___ENABLE
$0981	$25EC			CALL	_Delay_5500us
$0982	$0180			CLRF	INDF
$0983	$1580			BSF	INDF, ___ENABLE
$0984	$1180			BCF	INDF, ___ENABLE
$0985	$1600			BSF	INDF, ___DB4
$0986	$1680			BSF	INDF, ___DB5
$0987	$1700			BSF	INDF, ___DB6
$0988	$1780			BSF	INDF, ___DB7
$0989	$1580			BSF	INDF, ___ENABLE
$098A	$1180			BCF	INDF, ___ENABLE
$098B	$25EC			CALL	_Delay_5500us
$098C	$3001			MOVLW	1
$098D	$00A1			MOVWF	LCD_cmd_status
$098E	$0008			RETURN
$0B33	$	_LCD_Out:
$0B33	$2B45			GOTO	L_LCD_Out_17
$0B34	$	L_LCD_Out_19:
$0B34	$3080			MOVLW	128
$0B35	$1303			BCF	STATUS, RP1
$0B36	$1683			BSF	STATUS, RP0
$0B37	$00E5			MOVWF	FARG_LCD_Out+0
$0B38	$2B58			GOTO	L_LCD_Out_18
$0B39	$	L_LCD_Out_20:
$0B39	$30C0			MOVLW	192
$0B3A	$00E5			MOVWF	FARG_LCD_Out+0
$0B3B	$2B58			GOTO	L_LCD_Out_18
$0B3C	$	L_LCD_Out_21:
$0B3C	$3094			MOVLW	148
$0B3D	$00E5			MOVWF	FARG_LCD_Out+0
$0B3E	$2B58			GOTO	L_LCD_Out_18
$0B3F	$	L_LCD_Out_22:
$0B3F	$30D4			MOVLW	212
$0B40	$00E5			MOVWF	FARG_LCD_Out+0
$0B41	$2B58			GOTO	L_LCD_Out_18
$0B42	$	L_LCD_Out_23:
$0B42	$3080			MOVLW	128
$0B43	$00E5			MOVWF	FARG_LCD_Out+0
$0B44	$2B58			GOTO	L_LCD_Out_18
$0B45	$	L_LCD_Out_17:
$0B45	$1303			BCF	STATUS, RP1
$0B46	$1683			BSF	STATUS, RP0
$0B47	$0865			MOVF	FARG_LCD_Out+0, 0
$0B48	$3A01			XORLW	1
$0B49	$1903			BTFSC	STATUS, Z
$0B4A	$2B34			GOTO	L_LCD_Out_19
$0B4B	$0865			MOVF	FARG_LCD_Out+0, 0
$0B4C	$3A02			XORLW	2
$0B4D	$1903			BTFSC	STATUS, Z
$0B4E	$2B39			GOTO	L_LCD_Out_20
$0B4F	$0865			MOVF	FARG_LCD_Out+0, 0
$0B50	$3A03			XORLW	3
$0B51	$1903			BTFSC	STATUS, Z
$0B52	$2B3C			GOTO	L_LCD_Out_21
$0B53	$0865			MOVF	FARG_LCD_Out+0, 0
$0B54	$3A04			XORLW	4
$0B55	$1903			BTFSC	STATUS, Z
$0B56	$2B3F			GOTO	L_LCD_Out_22
$0B57	$2B42			GOTO	L_LCD_Out_23
$0B58	$	L_LCD_Out_18:
$0B58	$0366			DECF	FARG_LCD_Out+1, 0
$0B59	$00F0			MOVWF	STACK_0
$0B5A	$0865			MOVF	FARG_LCD_Out+0, 0
$0B5B	$07F0			ADDWF	STACK_0, 1
$0B5C	$0870			MOVF	STACK_0, 0
$0B5D	$00E5			MOVWF	FARG_LCD_Out+0
$0B5E	$0870			MOVF	STACK_0, 0
$0B5F	$1703			BSF	STATUS, RP1
$0B60	$1283			BCF	STATUS, RP0
$0B61	$0094			MOVWF	FARG_Lcd_Cmd+0
$0B62	$22ED			CALL	_Lcd_Cmd
$0B63	$01A1			CLRF	LCD_cmd_status, 1
$0B64	$1683			BSF	STATUS, RP0
$0B65	$01E8			CLRF	LCD_Out_i_L0, 1
$0B66	$	L_LCD_Out_24:
$0B66	$0868			MOVF	LCD_Out_i_L0, 0
$0B67	$0767			ADDWF	FARG_LCD_Out+2, 0
$0B68	$0084			MOVWF	FSR
$0B69	$0800			MOVF	INDF, 0
$0B6A	$00F0			MOVWF	STACK_0
$0B6B	$0870			MOVF	STACK_0, 0
$0B6C	$1903			BTFSC	STATUS, Z
$0B6D	$2B77			GOTO	L_LCD_Out_25
$0B6E	$0868			MOVF	LCD_Out_i_L0, 0
$0B6F	$0767			ADDWF	FARG_LCD_Out+2, 0
$0B70	$0084			MOVWF	FSR
$0B71	$0800			MOVF	INDF, 0
$0B72	$00EC			MOVWF	FARG_Lcd_Chr_CP+0
$0B73	$25FD			CALL	_Lcd_Chr_CP
$0B74	$1683			BSF	STATUS, RP0
$0B75	$0AE8			INCF	LCD_Out_i_L0, 1
$0B76	$2B66			GOTO	L_LCD_Out_24
$0B77	$	L_LCD_Out_25:
$0B77	$3001			MOVLW	1
$0B78	$1283			BCF	STATUS, RP0
$0B79	$00A1			MOVWF	LCD_cmd_status
$0B7A	$0008			RETURN
$0CD9	$	_CopyConst2Ram:
;MonoBank.c,66 :: 		char * CopyConst2Ram(char * dest, const char * src){
;MonoBank.c,68 :: 		d = dest;
$0CD9	$1303			BCF	STATUS, RP1
$0CDA	$1683			BSF	STATUS, RP0
$0CDB	$0865			MOVF	FARG_CopyConst2Ram+0, 0
$0CDC	$00E8			MOVWF	CopyConst2Ram_d_L0
;MonoBank.c,69 :: 		for(;*dest++ = *src++;)
$0CDD	$	L_CopyConst2Ram_0:
$0CDD	$1303			BCF	STATUS, RP1
$0CDE	$1683			BSF	STATUS, RP0
$0CDF	$0865			MOVF	FARG_CopyConst2Ram+0, 0
$0CE0	$00F2			MOVWF	STACK_2
$0CE1	$0AE5			INCF	FARG_CopyConst2Ram+0, 1
$0CE2	$0866			MOVF	FARG_CopyConst2Ram+1, 0
$0CE3	$00F0			MOVWF	STACK_0
$0CE4	$0867			MOVF	FARG_CopyConst2Ram+2, 0
$0CE5	$00F1			MOVWF	STACK_0+1
$0CE6	$0AE6			INCF	FARG_CopyConst2Ram+1, 1
$0CE7	$1903			BTFSC	STATUS, Z
$0CE8	$0AE7			INCF	FARG_CopyConst2Ram+2, 1
$0CE9	$0870			MOVF	STACK_0, 0
$0CEA	$1283			BCF	STATUS, RP0
$0CEB	$00A4			MOVWF	___DoICPLoAddr
$0CEC	$0871			MOVF	STACK_0+1, 0
$0CED	$00A3			MOVWF	___DoICPHiAddr
$0CEE	$080A			MOVF	PCLATH, 0
$0CEF	$00A2			MOVWF	___DoICPSavePCLATH
$0CF0	$2670			CALL	_____DoICP
$0CF1	$00F0			MOVWF	STACK_0
$0CF2	$0822			MOVF	___DoICPSavePCLATH, 0
$0CF3	$008A			MOVWF	PCLATH
$0CF4	$0872			MOVF	STACK_2, 0
$0CF5	$0084			MOVWF	FSR
$0CF6	$0870			MOVF	STACK_0, 0
$0CF7	$0080			MOVWF	INDF
$0CF8	$0872			MOVF	STACK_2, 0
$0CF9	$0084			MOVWF	FSR
$0CFA	$0800			MOVF	INDF, 0
$0CFB	$00F0			MOVWF	STACK_0
$0CFC	$0870			MOVF	STACK_0, 0
$0CFD	$1903			BTFSC	STATUS, Z
$0CFE	$2D00			GOTO	L_CopyConst2Ram_1
;MonoBank.c,70 :: 		;
$0CFF	$	L_CopyConst2Ram_2:
$0CFF	$2CDD			GOTO	L_CopyConst2Ram_0
$0D00	$	L_CopyConst2Ram_1:
;MonoBank.c,71 :: 		return d;
$0D00	$1683			BSF	STATUS, RP0
$0D01	$0868			MOVF	CopyConst2Ram_d_L0, 0
$0D02	$00F0			MOVWF	STACK_0
;MonoBank.c,72 :: 		}
$0D03	$0008			RETURN
$0B7B	$	_tastiera:
;MonoBank.c,223 :: 		unsigned short tastiera() {
;MonoBank.c,225 :: 		unsigned short i=0;
$0B7B	$1303			BCF	STATUS, RP1
$0B7C	$1683			BSF	STATUS, RP0
$0B7D	$01E5			CLRF	tastiera_i_L0, 1
;MonoBank.c,226 :: 		do {
$0B7E	$	L_tastiera_21:
;MonoBank.c,227 :: 		adcT = Adc_Read(0);
$0B7E	$01EC			CLRF	FARG_Adc_Read+0, 1
$0B7F	$24AB			CALL	_Adc_Read
;MonoBank.c,228 :: 		i=decodifica_tasto(adcT);
$0B80	$0870			MOVF	STACK_0, 0
$0B81	$00EC			MOVWF	FARG_decodifica_tasto+0
$0B82	$0871			MOVF	STACK_0+1, 0
$0B83	$00ED			MOVWF	FARG_decodifica_tasto+1
$0B84	$118A			BCF	PCLATH, 3
$0B85	$26D6			CALL	_decodifica_tasto
$0B86	$158A			BSF	PCLATH, 3
$0B87	$0870			MOVF	STACK_0, 0
$0B88	$1303			BCF	STATUS, RP1
$0B89	$1683			BSF	STATUS, RP0
$0B8A	$00E5			MOVWF	tastiera_i_L0
;MonoBank.c,229 :: 		Delay_ms(5);
$0B8B	$3002			MOVLW	2
$0B8C	$00FB			MOVWF	STACK_11
$0B8D	$30FF			MOVLW	255
$0B8E	$00FA			MOVWF	STACK_10
$0B8F	$0BFB			DECFSZ	STACK_11, F
$0B90	$2B92			GOTO	$+2
$0B91	$2B95			GOTO	$+4
$0B92	$0BFA			DECFSZ	STACK_10, F
$0B93	$2B92			GOTO	$-1
$0B94	$2B8F			GOTO	$-5
$0B95	$309D			MOVLW	157
$0B96	$00FA			MOVWF	STACK_10
$0B97	$0BFA			DECFSZ	STACK_10, F
$0B98	$2B97			GOTO	$-1
$0B99	$0000			NOP
;MonoBank.c,230 :: 		adcT = Adc_Read(0);
$0B9A	$01EC			CLRF	FARG_Adc_Read+0, 1
$0B9B	$24AB			CALL	_Adc_Read
;MonoBank.c,237 :: 		} while (adcT<=1000);
$0B9C	$0871			MOVF	STACK_0+1, 0
$0B9D	$3C03			SUBLW	3
$0B9E	$1D03			BTFSS	STATUS, Z
$0B9F	$2BA2			GOTO	L_tastiera_101
$0BA0	$0870			MOVF	STACK_0, 0
$0BA1	$3CE8			SUBLW	232
$0BA2	$	L_tastiera_101:
$0BA2	$1803			BTFSC	STATUS, C
$0BA3	$2B7E			GOTO	L_tastiera_21
$0BA4	$	L_tastiera_22:
;MonoBank.c,238 :: 		if (i>0) {
$0BA4	$0865			MOVF	tastiera_i_L0, 0
$0BA5	$3C00			SUBLW	0
$0BA6	$1803			BTFSC	STATUS, C
$0BA7	$2BBB			GOTO	L_tastiera_23
;MonoBank.c,239 :: 		buzzer
$0BA8	$1283			BCF	STATUS, RP0
$0BA9	$1785			BSF	PORTA, 7
$0BAA	$3021			MOVLW	33
$0BAB	$00FB			MOVWF	STACK_11
$0BAC	$30FF			MOVLW	255
$0BAD	$00FA			MOVWF	STACK_10
$0BAE	$0BFB			DECFSZ	STACK_11, F
$0BAF	$2BB1			GOTO	$+2
$0BB0	$2BB4			GOTO	$+4
$0BB1	$0BFA			DECFSZ	STACK_10, F
$0BB2	$2BB1			GOTO	$-1
$0BB3	$2BAE			GOTO	$-5
$0BB4	$3060			MOVLW	96
$0BB5	$00FA			MOVWF	STACK_10
$0BB6	$0BFA			DECFSZ	STACK_10, F
$0BB7	$2BB6			GOTO	$-1
$0BB8	$0000			NOP
$0BB9	$0000			NOP
$0BBA	$1385			BCF	PORTA, 7
;MonoBank.c,240 :: 		}
$0BBB	$	L_tastiera_23:
;MonoBank.c,241 :: 		return i;
$0BBB	$1683			BSF	STATUS, RP0
$0BBC	$0865			MOVF	tastiera_i_L0, 0
$0BBD	$00F0			MOVWF	STACK_0
;MonoBank.c,242 :: 		}
$0BBE	$0008			RETURN
$0DA7	$	_salvaImporto:
;MonoBank.c,374 :: 		void salvaImporto(unsigned short id, unsigned int value) {
;MonoBank.c,375 :: 		unsigned short a1=addrcard[id];
$0DA7	$1303			BCF	STATUS, RP1
$0DA8	$1683			BSF	STATUS, RP0
$0DA9	$0865			MOVF	FARG_salvaImporto+0, 0
$0DAA	$3F65			ADDLW	_addrcard
$0DAB	$0084			MOVWF	FSR
$0DAC	$0800			MOVF	INDF, 0
$0DAD	$00EC			MOVWF	FARG_store_int+0
$0DAE	$01ED			CLRF	FARG_store_int+1
;MonoBank.c,376 :: 		store_int(a1,value);
$0DAF	$3000			MOVLW	0
$0DB0	$00ED			MOVWF	FARG_store_int+1
$0DB1	$0866			MOVF	FARG_salvaImporto+1, 0
$0DB2	$00EE			MOVWF	FARG_store_int+2
$0DB3	$0867			MOVF	FARG_salvaImporto+2, 0
$0DB4	$00EF			MOVWF	FARG_store_int+3
$0DB5	$251B			CALL	_store_int
;MonoBank.c,377 :: 		}
$0DB6	$0008			RETURN
$0C45	$	_decodifica_tessera:
;MonoBank.c,73 :: 		unsigned short decodifica_tessera(unsigned int adcValue) {
;MonoBank.c,76 :: 		unsigned short vo=0;
$0C45	$1303			BCF	STATUS, RP1
$0C46	$1683			BSF	STATUS, RP0
$0C47	$01E8			CLRF	decodifica_tessera_vo_L0, 1
;MonoBank.c,78 :: 		if (adcValue>=NOcardConst) return 0;
$0C48	$1283			BCF	STATUS, RP0
$0C49	$086D			MOVF	_NOcardConst+1, 0
$0C4A	$1683			BSF	STATUS, RP0
$0C4B	$0266			SUBWF	FARG_decodifica_tessera+1, 0
$0C4C	$1D03			BTFSS	STATUS, Z
$0C4D	$2C52			GOTO	L_decodifica_tessera_90
$0C4E	$1283			BCF	STATUS, RP0
$0C4F	$086C			MOVF	_NOcardConst, 0
$0C50	$1683			BSF	STATUS, RP0
$0C51	$0265			SUBWF	FARG_decodifica_tessera+0, 0
$0C52	$	L_decodifica_tessera_90:
$0C52	$1C03			BTFSS	STATUS, C
$0C53	$2C56			GOTO	L_decodifica_tessera_3
$0C54	$01F0			CLRF	STACK_0, 1
$0C55	$0008			RETURN
$0C56	$	L_decodifica_tessera_3:
;MonoBank.c,81 :: 		for (  i = 0; i < 6; i++ ) {
$0C56	$01E7			CLRF	decodifica_tessera_i_L0, 1
$0C57	$	L_decodifica_tessera_4:
$0C57	$3006			MOVLW	6
$0C58	$0267			SUBWF	decodifica_tessera_i_L0, 0
$0C59	$1803			BTFSC	STATUS, C
$0C5A	$2C7B			GOTO	L_decodifica_tessera_5
;MonoBank.c,83 :: 		if (adcValue>=cardConst[i]) {
$0C5B	$3001			MOVLW	1
$0C5C	$00F4			MOVWF	STACK_4
$0C5D	$0867			MOVF	decodifica_tessera_i_L0, 0
$0C5E	$00F0			MOVWF	STACK_0
$0C5F	$0874			MOVF	STACK_4, 0
$0C60	$	L_decodifica_tessera_91:
$0C60	$1903			BTFSC	STATUS, Z
$0C61	$2C66			GOTO	L_decodifica_tessera_92
$0C62	$0DF0			RLF	STACK_0, 1
$0C63	$1070			BCF	STACK_0, 0
$0C64	$3FFF			ADDLW	255
$0C65	$2C60			GOTO	L_decodifica_tessera_91
$0C66	$	L_decodifica_tessera_92:
$0C66	$0870			MOVF	STACK_0, 0
$0C67	$3FA0			ADDLW	_cardConst
$0C68	$0084			MOVWF	FSR
$0C69	$0800			MOVF	INDF, 0
$0C6A	$00F1			MOVWF	STACK_1
$0C6B	$0A84			INCF	FSR, 1
$0C6C	$0800			MOVF	INDF, 0
$0C6D	$00F2			MOVWF	STACK_1+1
$0C6E	$0872			MOVF	STACK_1+1, 0
$0C6F	$0266			SUBWF	FARG_decodifica_tessera+1, 0
$0C70	$1D03			BTFSS	STATUS, Z
$0C71	$2C74			GOTO	L_decodifica_tessera_93
$0C72	$0871			MOVF	STACK_1, 0
$0C73	$0265			SUBWF	FARG_decodifica_tessera+0, 0
$0C74	$	L_decodifica_tessera_93:
$0C74	$1C03			BTFSS	STATUS, C
$0C75	$2C79			GOTO	L_decodifica_tessera_7
;MonoBank.c,84 :: 		vo=i+1;
$0C76	$0A67			INCF	decodifica_tessera_i_L0, 0
$0C77	$00E8			MOVWF	decodifica_tessera_vo_L0
;MonoBank.c,85 :: 		break;
$0C78	$2C7B			GOTO	L_decodifica_tessera_5
;MonoBank.c,86 :: 		}
$0C79	$	L_decodifica_tessera_7:
;MonoBank.c,88 :: 		}
$0C79	$	L_decodifica_tessera_6:
;MonoBank.c,81 :: 		for (  i = 0; i < 6; i++ ) {
$0C79	$0AE7			INCF	decodifica_tessera_i_L0, 1
;MonoBank.c,88 :: 		}
$0C7A	$2C57			GOTO	L_decodifica_tessera_4
$0C7B	$	L_decodifica_tessera_5:
;MonoBank.c,90 :: 		return vo;
$0C7B	$0868			MOVF	decodifica_tessera_vo_L0, 0
$0C7C	$00F0			MOVWF	STACK_0
;MonoBank.c,91 :: 		}
$0C7D	$0008			RETURN
$0C09	$	_Lcd_Chr:
$0C09	$2C1B			GOTO	L_Lcd_Chr_8
$0C0A	$	L_Lcd_Chr_10:
$0C0A	$3080			MOVLW	128
$0C0B	$1303			BCF	STATUS, RP1
$0C0C	$1683			BSF	STATUS, RP0
$0C0D	$00E5			MOVWF	FARG_Lcd_Chr+0
$0C0E	$2C2E			GOTO	L_Lcd_Chr_9
$0C0F	$	L_Lcd_Chr_11:
$0C0F	$30C0			MOVLW	192
$0C10	$00E5			MOVWF	FARG_Lcd_Chr+0
$0C11	$2C2E			GOTO	L_Lcd_Chr_9
$0C12	$	L_Lcd_Chr_12:
$0C12	$3094			MOVLW	148
$0C13	$00E5			MOVWF	FARG_Lcd_Chr+0
$0C14	$2C2E			GOTO	L_Lcd_Chr_9
$0C15	$	L_Lcd_Chr_13:
$0C15	$30D4			MOVLW	212
$0C16	$00E5			MOVWF	FARG_Lcd_Chr+0
$0C17	$2C2E			GOTO	L_Lcd_Chr_9
$0C18	$	L_Lcd_Chr_14:
$0C18	$3080			MOVLW	128
$0C19	$00E5			MOVWF	FARG_Lcd_Chr+0
$0C1A	$2C2E			GOTO	L_Lcd_Chr_9
$0C1B	$	L_Lcd_Chr_8:
$0C1B	$1303			BCF	STATUS, RP1
$0C1C	$1683			BSF	STATUS, RP0
$0C1D	$0865			MOVF	FARG_Lcd_Chr+0, 0
$0C1E	$3A01			XORLW	1
$0C1F	$1903			BTFSC	STATUS, Z
$0C20	$2C0A			GOTO	L_Lcd_Chr_10
$0C21	$0865			MOVF	FARG_Lcd_Chr+0, 0
$0C22	$3A02			XORLW	2
$0C23	$1903			BTFSC	STATUS, Z
$0C24	$2C0F			GOTO	L_Lcd_Chr_11
$0C25	$0865			MOVF	FARG_Lcd_Chr+0, 0
$0C26	$3A03			XORLW	3
$0C27	$1903			BTFSC	STATUS, Z
$0C28	$2C12			GOTO	L_Lcd_Chr_12
$0C29	$0865			MOVF	FARG_Lcd_Chr+0, 0
$0C2A	$3A04			XORLW	4
$0C2B	$1903			BTFSC	STATUS, Z
$0C2C	$2C15			GOTO	L_Lcd_Chr_13
$0C2D	$2C18			GOTO	L_Lcd_Chr_14
$0C2E	$	L_Lcd_Chr_9:
$0C2E	$0366			DECF	FARG_Lcd_Chr+1, 0
$0C2F	$00F0			MOVWF	STACK_0
$0C30	$0865			MOVF	FARG_Lcd_Chr+0, 0
$0C31	$07F0			ADDWF	STACK_0, 1
$0C32	$0870			MOVF	STACK_0, 0
$0C33	$00E5			MOVWF	FARG_Lcd_Chr+0
$0C34	$3001			MOVLW	1
$0C35	$1283			BCF	STATUS, RP0
$0C36	$00A1			MOVWF	LCD_cmd_status
$0C37	$0870			MOVF	STACK_0, 0
$0C38	$1703			BSF	STATUS, RP1
$0C39	$0094			MOVWF	FARG_Lcd_Cmd+0
$0C3A	$22ED			CALL	_Lcd_Cmd
$0C3B	$01A1			CLRF	LCD_cmd_status, 1
$0C3C	$1683			BSF	STATUS, RP0
$0C3D	$0867			MOVF	FARG_Lcd_Chr+2, 0
$0C3E	$1703			BSF	STATUS, RP1
$0C3F	$1283			BCF	STATUS, RP0
$0C40	$0094			MOVWF	FARG_Lcd_Cmd+0
$0C41	$22ED			CALL	_Lcd_Cmd
$0C42	$3001			MOVLW	1
$0C43	$00A1			MOVWF	LCD_cmd_status
$0C44	$0008			RETURN
$09F8	$	_atoi:
$09F8	$	___atoi_skipws_atoi:
$09F8	$1303			BCF	STATUS, RP1
$09F9	$1683			BSF	STATUS, RP0
$09FA	$0865			MOVF	FARG_atoi+0, 0
$09FB	$0084			MOVWF	FSR
$09FC	$0800			MOVF	INDF, 0
$09FD	$00F2			MOVWF	STACK_2
$09FE	$0872			MOVF	STACK_2, 0
$09FF	$00E6			MOVWF	atoi_c_L0
$0A00	$0872			MOVF	STACK_2, 0
$0A01	$3A20			XORLW	32
$0A02	$1903			BTFSC	STATUS, Z
$0A03	$2A08			GOTO	L252_ex_L_atoi_55
$0A04	$0866			MOVF	atoi_c_L0, 0
$0A05	$3A09			XORLW	9
$0A06	$1D03			BTFSS	STATUS, Z
$0A07	$2A0A			GOTO	L_atoi_55
$0A08	$	L252_ex_L_atoi_55:
$0A08	$0AE5			INCF	FARG_atoi+0, 1
$0A09	$29F8			GOTO	___atoi_skipws_atoi
$0A0A	$	L_atoi_55:
$0A0A	$01E7			CLRF	atoi_a_L0
$0A0B	$01E8			CLRF	atoi_a_L0+1
$0A0C	$01E9			CLRF	atoi_sign_L0, 1
$0A0D	$0866			MOVF	atoi_c_L0, 0
$0A0E	$3A2D			XORLW	45
$0A0F	$1D03			BTFSS	STATUS, Z
$0A10	$2A14			GOTO	L_atoi_56
$0A11	$0AE9			INCF	atoi_sign_L0, 1
$0A12	$0AE5			INCF	FARG_atoi+0, 1
$0A13	$2A19			GOTO	L_atoi_57
$0A14	$	L_atoi_56:
$0A14	$0866			MOVF	atoi_c_L0, 0
$0A15	$3A2B			XORLW	43
$0A16	$1D03			BTFSS	STATUS, Z
$0A17	$2A19			GOTO	L_atoi_58
$0A18	$0AE5			INCF	FARG_atoi+0, 1
$0A19	$	L_atoi_58:
$0A19	$	L_atoi_57:
$0A19	$	___atoi_conv_atoi:
$0A19	$0865			MOVF	FARG_atoi+0, 0
$0A1A	$0084			MOVWF	FSR
$0A1B	$0800			MOVF	INDF, 0
$0A1C	$00F0			MOVWF	STACK_0
$0A1D	$0870			MOVF	STACK_0, 0
$0A1E	$00E6			MOVWF	atoi_c_L0
$0A1F	$0870			MOVF	STACK_0, 0
$0A20	$00EC			MOVWF	FARG_isdigit+0
$0A21	$2609			CALL	_isdigit
$0A22	$0870			MOVF	STACK_0, 0
$0A23	$1903			BTFSC	STATUS, Z
$0A24	$2A3F			GOTO	L_atoi_59
$0A25	$0867			MOVF	atoi_a_L0, 0
$0A26	$00F0			MOVWF	STACK_0
$0A27	$0868			MOVF	atoi_a_L0+1, 0
$0A28	$00F1			MOVWF	STACK_0+1
$0A29	$300A			MOVLW	10
$0A2A	$00F4			MOVWF	STACK_4
$0A2B	$3000			MOVLW	0
$0A2C	$00F5			MOVWF	STACK_4+1
$0A2D	$23BF			CALL	_mul_16x16_s
$0A2E	$3030			MOVLW	48
$0A2F	$1683			BSF	STATUS, RP0
$0A30	$0266			SUBWF	atoi_c_L0, 0
$0A31	$00F2			MOVWF	STACK_2
$0A32	$01F3			CLRF	STACK_2+1
$0A33	$1C03			BTFSS	STATUS, C
$0A34	$03F3			DECF	STACK_2+1, 1
$0A35	$0872			MOVF	STACK_2, 0
$0A36	$0770			ADDWF	STACK_0, 0
$0A37	$00E7			MOVWF	atoi_a_L0
$0A38	$0871			MOVF	STACK_0+1, 0
$0A39	$1803			BTFSC	STATUS, C
$0A3A	$3F01			ADDLW	1
$0A3B	$0773			ADDWF	STACK_2+1, 0
$0A3C	$00E8			MOVWF	atoi_a_L0+1
$0A3D	$0AE5			INCF	FARG_atoi+0, 1
$0A3E	$2A19			GOTO	___atoi_conv_atoi
$0A3F	$	L_atoi_59:
$0A3F	$0869			MOVF	atoi_sign_L0, 0
$0A40	$1903			BTFSC	STATUS, Z
$0A41	$2A4B			GOTO	L_atoi_60
$0A42	$0867			MOVF	atoi_a_L0, 0
$0A43	$3C00			SUBLW	0
$0A44	$00F0			MOVWF	STACK_0
$0A45	$0868			MOVF	atoi_a_L0+1, 0
$0A46	$1C03			BTFSS	STATUS, C
$0A47	$3F01			ADDLW	1
$0A48	$01F1			CLRF	STACK_0+1
$0A49	$02F1			SUBWF	STACK_0+1, 1
$0A4A	$0008			RETURN
$0A4B	$	L_atoi_60:
$0A4B	$0867			MOVF	atoi_a_L0, 0
$0A4C	$00F0			MOVWF	STACK_0
$0A4D	$0868			MOVF	atoi_a_L0+1, 0
$0A4E	$00F1			MOVWF	STACK_0+1
$0A4F	$0008			RETURN
$0D6B	$	_caricaImporto:
;MonoBank.c,386 :: 		unsigned int caricaImporto(unsigned short id) {
;MonoBank.c,388 :: 		unsigned int adr=addrcard[id];
$0D6B	$1303			BCF	STATUS, RP1
$0D6C	$1683			BSF	STATUS, RP0
$0D6D	$0865			MOVF	FARG_caricaImporto+0, 0
$0D6E	$3F65			ADDLW	_addrcard
$0D6F	$0084			MOVWF	FSR
$0D70	$0800			MOVF	INDF, 0
$0D71	$00E6			MOVWF	caricaImporto_adr_L0
$0D72	$01E7			CLRF	caricaImporto_adr_L0+1
$0D73	$3000			MOVLW	0
$0D74	$00E7			MOVWF	caricaImporto_adr_L0+1
;MonoBank.c,390 :: 		adr=read_int(adr);
$0D75	$0866			MOVF	caricaImporto_adr_L0, 0
$0D76	$00EC			MOVWF	FARG_read_int+0
$0D77	$0867			MOVF	caricaImporto_adr_L0+1, 0
$0D78	$00ED			MOVWF	FARG_read_int+1
$0D79	$2535			CALL	_read_int
$0D7A	$0870			MOVF	STACK_0, 0
$0D7B	$00E6			MOVWF	caricaImporto_adr_L0
$0D7C	$0871			MOVF	STACK_0+1, 0
$0D7D	$00E7			MOVWF	caricaImporto_adr_L0+1
;MonoBank.c,393 :: 		return adr;
;MonoBank.c,394 :: 		}
$0D7E	$0008			RETURN
$0A50	$	_IntToStr:
$0A50	$1303			BCF	STATUS, RP1
$0A51	$1683			BSF	STATUS, RP0
$0A52	$01E9			CLRF	IntToStr_negative_L0, 1
$0A53	$0865			MOVF	FARG_IntToStr+0, 0
$0A54	$00EA			MOVWF	IntToStr_inword_L0
$0A55	$0866			MOVF	FARG_IntToStr+1, 0
$0A56	$00EB			MOVWF	IntToStr_inword_L0+1
$0A57	$3080			MOVLW	128
$0A58	$0666			XORWF	FARG_IntToStr+1, 0
$0A59	$00F0			MOVWF	STACK_0
$0A5A	$3080			MOVLW	128
$0A5B	$0270			SUBWF	STACK_0, 0
$0A5C	$1D03			BTFSS	STATUS, Z
$0A5D	$2A60			GOTO	L_IntToStr_52
$0A5E	$3000			MOVLW	0
$0A5F	$0265			SUBWF	FARG_IntToStr+0, 0
$0A60	$	L_IntToStr_52:
$0A60	$1803			BTFSC	STATUS, C
$0A61	$2A6C			GOTO	L_IntToStr_12
$0A62	$3001			MOVLW	1
$0A63	$00E9			MOVWF	IntToStr_negative_L0
$0A64	$0865			MOVF	FARG_IntToStr+0, 0
$0A65	$3C00			SUBLW	0
$0A66	$00EA			MOVWF	IntToStr_inword_L0
$0A67	$0866			MOVF	FARG_IntToStr+1, 0
$0A68	$1C03			BTFSS	STATUS, C
$0A69	$3F01			ADDLW	1
$0A6A	$01EB			CLRF	IntToStr_inword_L0+1
$0A6B	$02EB			SUBWF	IntToStr_inword_L0+1, 1
$0A6C	$	L_IntToStr_12:
$0A6C	$086A			MOVF	IntToStr_inword_L0, 0
$0A6D	$00EC			MOVWF	FARG_WordToStr+0
$0A6E	$086B			MOVF	IntToStr_inword_L0+1, 0
$0A6F	$00ED			MOVWF	FARG_WordToStr+1
$0A70	$0867			MOVF	FARG_IntToStr+2, 0
$0A71	$00EE			MOVWF	FARG_WordToStr+2
$0A72	$218F			CALL	_WordToStr
$0A73	$3006			MOVLW	6
$0A74	$1303			BCF	STATUS, RP1
$0A75	$1683			BSF	STATUS, RP0
$0A76	$00E8			MOVWF	IntToStr_i_L0
$0A77	$	L_IntToStr_13:
$0A77	$0868			MOVF	IntToStr_i_L0, 0
$0A78	$3C00			SUBLW	0
$0A79	$1803			BTFSC	STATUS, C
$0A7A	$2A8F			GOTO	L_IntToStr_14
$0A7B	$0868			MOVF	IntToStr_i_L0, 0
$0A7C	$0767			ADDWF	FARG_IntToStr+2, 0
$0A7D	$00F2			MOVWF	STACK_2
$0A7E	$3001			MOVLW	1
$0A7F	$0268			SUBWF	IntToStr_i_L0, 0
$0A80	$00F0			MOVWF	STACK_0
$0A81	$01F1			CLRF	STACK_0+1
$0A82	$1C03			BTFSS	STATUS, C
$0A83	$03F1			DECF	STACK_0+1, 1
$0A84	$0870			MOVF	STACK_0, 0
$0A85	$0767			ADDWF	FARG_IntToStr+2, 0
$0A86	$0084			MOVWF	FSR
$0A87	$0800			MOVF	INDF, 0
$0A88	$00F0			MOVWF	STACK_0
$0A89	$0872			MOVF	STACK_2, 0
$0A8A	$0084			MOVWF	FSR
$0A8B	$0870			MOVF	STACK_0, 0
$0A8C	$0080			MOVWF	INDF
$0A8D	$03E8			DECF	IntToStr_i_L0, 1
$0A8E	$2A77			GOTO	L_IntToStr_13
$0A8F	$	L_IntToStr_14:
$0A8F	$0867			MOVF	FARG_IntToStr+2, 0
$0A90	$0084			MOVWF	FSR
$0A91	$3020			MOVLW	32
$0A92	$0080			MOVWF	INDF
$0A93	$0869			MOVF	IntToStr_negative_L0, 0
$0A94	$1903			BTFSC	STATUS, Z
$0A95	$2AA9			GOTO	L_IntToStr_15
$0A96	$	L_IntToStr_16:
$0A96	$0868			MOVF	IntToStr_i_L0, 0
$0A97	$0767			ADDWF	FARG_IntToStr+2, 0
$0A98	$0084			MOVWF	FSR
$0A99	$0800			MOVF	INDF, 0
$0A9A	$00F2			MOVWF	STACK_2
$0A9B	$0872			MOVF	STACK_2, 0
$0A9C	$3A20			XORLW	32
$0A9D	$1D03			BTFSS	STATUS, Z
$0A9E	$2AA1			GOTO	L_IntToStr_17
$0A9F	$0AE8			INCF	IntToStr_i_L0, 1
$0AA0	$2A96			GOTO	L_IntToStr_16
$0AA1	$	L_IntToStr_17:
$0AA1	$03E8			DECF	IntToStr_i_L0, 1
$0AA2	$0868			MOVF	IntToStr_i_L0, 0
$0AA3	$0767			ADDWF	FARG_IntToStr+2, 0
$0AA4	$00F0			MOVWF	STACK_0
$0AA5	$0870			MOVF	STACK_0, 0
$0AA6	$0084			MOVWF	FSR
$0AA7	$302D			MOVLW	45
$0AA8	$0080			MOVWF	INDF
$0AA9	$	L_IntToStr_15:
$0AA9	$0008			RETURN
$0E69	$	_msgAddZeros:
;MonoBank.c,395 :: 		void msgAddZeros() {
;MonoBank.c,396 :: 		msg[6]=' ';
$0E69	$3020			MOVLW	32
$0E6A	$1303			BCF	STATUS, RP1
$0E6B	$1683			BSF	STATUS, RP0
$0E6C	$00B2			MOVWF	_msg+6
;MonoBank.c,397 :: 		msg[7]=' ';
$0E6D	$3020			MOVLW	32
$0E6E	$00B3			MOVWF	_msg+7
;MonoBank.c,402 :: 		}
$0E6F	$0008			RETURN
$0E7C	$	table__lstr_1_MonoBank:
$0E7C	$3420			RETLW	32
$0E7D	$3400			RETLW	0
$0E7E	$0008			RETURN
$0DB7	$	table__lstr_2_MonoBank:
$0DB7	$3420			RETLW	32
$0DB8	$3420			RETLW	32
$0DB9	$3420			RETLW	32
$0DBA	$3420			RETLW	32
$0DBB	$3420			RETLW	32
$0DBC	$3420			RETLW	32
$0DBD	$3420			RETLW	32
$0DBE	$3420			RETLW	32
$0DBF	$3420			RETLW	32
$0DC0	$3420			RETLW	32
$0DC1	$3420			RETLW	32
$0DC2	$3420			RETLW	32
$0DC3	$3420			RETLW	32
$0DC4	$3420			RETLW	32
$0DC5	$3420			RETLW	32
$0DC6	$3420			RETLW	32
$0DC7	$3400			RETLW	0
$0DC8	$0008			RETURN
$0E18	$	table__lstr_3_MonoBank:
$0E18	$344D			RETLW	77
$0E19	$344F			RETLW	79
$0E1A	$344E			RETLW	78
$0E1B	$344F			RETLW	79
$0E1C	$342D			RETLW	45
$0E1D	$3442			RETLW	66
$0E1E	$3441			RETLW	65
$0E1F	$344E			RETLW	78
$0E20	$344B			RETLW	75
$0E21	$3400			RETLW	0
$0E22	$0008			RETURN
$0DDB	$	table__lstr_4_MonoBank:
$0DDB	$3441			RETLW	65
$0DDC	$347A			RETLW	122
$0DDD	$347A			RETLW	122
$0DDE	$3465			RETLW	101
$0DDF	$3472			RETLW	114
$0DE0	$346F			RETLW	111
$0DE1	$3420			RETLW	32
$0DE2	$3449			RETLW	73
$0DE3	$346D			RETLW	109
$0DE4	$3470			RETLW	112
$0DE5	$346F			RETLW	111
$0DE6	$3472			RETLW	114
$0DE7	$3474			RETLW	116
$0DE8	$3469			RETLW	105
$0DE9	$343F			RETLW	63
$0DEA	$3400			RETLW	0
$0DEB	$0008			RETURN
$0DC9	$	table__lstr_5_MonoBank:
$0DC9	$3449			RETLW	73
$0DCA	$346D			RETLW	109
$0DCB	$3470			RETLW	112
$0DCC	$346F			RETLW	111
$0DCD	$3472			RETLW	114
$0DCE	$3474			RETLW	116
$0DCF	$3469			RETLW	105
$0DD0	$3420			RETLW	32
$0DD1	$3461			RETLW	97
$0DD2	$347A			RETLW	122
$0DD3	$347A			RETLW	122
$0DD4	$3465			RETLW	101
$0DD5	$3472			RETLW	114
$0DD6	$3461			RETLW	97
$0DD7	$3474			RETLW	116
$0DD8	$3469			RETLW	105
$0DD9	$3400			RETLW	0
$0DDA	$0008			RETURN
$0E51	$	table__lstr_6_MonoBank:
$0E51	$344D			RETLW	77
$0E52	$3475			RETLW	117
$0E53	$346F			RETLW	111
$0E54	$3476			RETLW	118
$0E55	$346F			RETLW	111
$0E56	$343A			RETLW	58
$0E57	$3400			RETLW	0
$0E58	$0008			RETURN
$0E61	$	table__lstr_7_MonoBank:
$0E61	$3453			RETLW	83
$0E62	$3461			RETLW	97
$0E63	$346C			RETLW	108
$0E64	$3464			RETLW	100
$0E65	$346F			RETLW	111
$0E66	$343A			RETLW	58
$0E67	$3400			RETLW	0
$0E68	$0008			RETURN
$0E40	$	table__lstr_8_MonoBank:
$0E40	$3449			RETLW	73
$0E41	$346E			RETLW	110
$0E42	$3469			RETLW	105
$0E43	$347A			RETLW	122
$0E44	$3469			RETLW	105
$0E45	$346F			RETLW	111
$0E46	$343A			RETLW	58
$0E47	$3400			RETLW	0
$0E48	$0008			RETURN
$0E49	$	table__lstr_9_MonoBank:
$0E49	$3454			RETLW	84
$0E4A	$346F			RETLW	111
$0E4B	$346C			RETLW	108
$0E4C	$3467			RETLW	103
$0E4D	$346F			RETLW	111
$0E4E	$343A			RETLW	58
$0E4F	$3400			RETLW	0
$0E50	$0008			RETURN
$0E59	$	table__lstr_10_MonoBank:
$0E59	$344D			RETLW	77
$0E5A	$3465			RETLW	101
$0E5B	$3474			RETLW	116
$0E5C	$3474			RETLW	116
$0E5D	$346F			RETLW	111
$0E5E	$343A			RETLW	58
$0E5F	$3400			RETLW	0
$0E60	$0008			RETURN
$0C7E	$	_setupMCU:
;MonoBank.c,143 :: 		void setupMCU () {
;MonoBank.c,145 :: 		TRISA=0;
$0C7E	$1303			BCF	STATUS, RP1
$0C7F	$1683			BSF	STATUS, RP0
$0C80	$0185			CLRF	TRISA, 1
;MonoBank.c,146 :: 		INTCON=0;
$0C81	$018B			CLRF	INTCON, 1
;MonoBank.c,147 :: 		TRISB=0;
$0C82	$0186			CLRF	TRISB, 1
;MonoBank.c,148 :: 		CMCON=7;
$0C83	$3007			MOVLW	7
$0C84	$009C			MOVWF	CMCON
;MonoBank.c,149 :: 		ANSEL=0;
$0C85	$019B			CLRF	ANSEL, 1
;MonoBank.c,150 :: 		PORTB=0;
$0C86	$1283			BCF	STATUS, RP0
$0C87	$0186			CLRF	PORTB, 1
;MonoBank.c,151 :: 		PORTA=0;
$0C88	$0185			CLRF	PORTA, 1
;MonoBank.c,165 :: 		OSCCON=0x40;
$0C89	$3040			MOVLW	64
$0C8A	$1683			BSF	STATUS, RP0
$0C8B	$008F			MOVWF	OSCCON
;MonoBank.c,166 :: 		Lcd_Init(&PORTB);
$0C8C	$3006			MOVLW	PORTB
$0C8D	$00E5			MOVWF	FARG_Lcd_Init+0
$0C8E	$2140			CALL	_Lcd_Init
;MonoBank.c,167 :: 		Lcd_Cmd(Lcd_CLEAR);       // Clear display
$0C8F	$3001			MOVLW	1
$0C90	$1703			BSF	STATUS, RP1
$0C91	$0094			MOVWF	FARG_Lcd_Cmd+0
$0C92	$22ED			CALL	_Lcd_Cmd
;MonoBank.c,168 :: 		Lcd_Cmd(Lcd_CURSOR_OFF);  // Turn cursor off
$0C93	$300C			MOVLW	12
$0C94	$1703			BSF	STATUS, RP1
$0C95	$0094			MOVWF	FARG_Lcd_Cmd+0
$0C96	$22ED			CALL	_Lcd_Cmd
;MonoBank.c,169 :: 		TRISA.F0=1;
$0C97	$1683			BSF	STATUS, RP0
$0C98	$1405			BSF	TRISA, 0
;MonoBank.c,170 :: 		TRISA.F1=1;
$0C99	$1485			BSF	TRISA, 1
;MonoBank.c,171 :: 		TRISA.F2=1;
$0C9A	$1505			BSF	TRISA, 2
;MonoBank.c,172 :: 		TRISA.F3=1;
$0C9B	$1585			BSF	TRISA, 3
;MonoBank.c,173 :: 		TRISB.F0=1;
$0C9C	$1406			BSF	TRISB, 0
;MonoBank.c,175 :: 		ANSEL=0x0F;
$0C9D	$300F			MOVLW	15
$0C9E	$009B			MOVWF	ANSEL
;MonoBank.c,176 :: 		ADCON0 = 0x80;  // Configure analog inputs and Vref
$0C9F	$3080			MOVLW	128
$0CA0	$1283			BCF	STATUS, RP0
$0CA1	$009F			MOVWF	ADCON0
;MonoBank.c,177 :: 		ADCON1 = 0x80;  // Configure analog inputs and Vref
$0CA2	$3080			MOVLW	128
$0CA3	$1683			BSF	STATUS, RP0
$0CA4	$009F			MOVWF	ADCON1
;MonoBank.c,178 :: 		INTCON=0;
$0CA5	$018B			CLRF	INTCON, 1
;MonoBank.c,179 :: 		PIE1=0;
$0CA6	$018C			CLRF	PIE1, 1
;MonoBank.c,180 :: 		PIE2=0;
$0CA7	$018D			CLRF	PIE2, 1
;MonoBank.c,181 :: 		CCP1CON=0;
$0CA8	$1283			BCF	STATUS, RP0
$0CA9	$0197			CLRF	CCP1CON, 1
;MonoBank.c,183 :: 		}
$0CAA	$0008			RETURN
$0E77	$	_disabilitaTMR0:
;MonoBank.c,119 :: 		void disabilitaTMR0() {
;MonoBank.c,120 :: 		INTCON.TMR0IE = 0;        // bit5 TMR0 Overflow Interrupt Enable bit...1 = Enables the TMR0 interrupt
$0E77	$128B			BCF	INTCON, 5
;MonoBank.c,121 :: 		INTCON.TMR0IF = 0;        // bit2 clear timer 0 interrupt flag
$0E78	$110B			BCF	INTCON, 2
;MonoBank.c,122 :: 		INTCON.GIE = 0;           // bit7 global interrupt enable
$0E79	$138B			BCF	INTCON, 7
;MonoBank.c,123 :: 		INTCON.PEIE = 0;           // bit7 global interrupt enable
$0E7A	$130B			BCF	INTCON, 6
;MonoBank.c,124 :: 		}
$0E7B	$0008			RETURN
$0AAA	$	_msgbox:
;MonoBank.c,403 :: 		unsigned char msgbox( unsigned short row, unsigned short msgIdx) {
;MonoBank.c,404 :: 		unsigned short current=0;
$0AAA	$1303			BCF	STATUS, RP1
$0AAB	$1683			BSF	STATUS, RP0
$0AAC	$01D7			CLRF	msgbox_current_L0, 1
;MonoBank.c,405 :: 		Lcd_Out(row, 1, CopyConst2Ram(msg,rigavuota));
$0AAD	$30AC			MOVLW	_msg
$0AAE	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0AAF	$1283			BCF	STATUS, RP0
$0AB0	$086E			MOVF	_rigavuota, 0
$0AB1	$1683			BSF	STATUS, RP0
$0AB2	$00E6			MOVWF	FARG_CopyConst2Ram+1
$0AB3	$1283			BCF	STATUS, RP0
$0AB4	$086F			MOVF	_rigavuota+1, 0
$0AB5	$1683			BSF	STATUS, RP0
$0AB6	$00E7			MOVWF	FARG_CopyConst2Ram+2
$0AB7	$24D9			CALL	_CopyConst2Ram
$0AB8	$0870			MOVF	STACK_0, 0
$0AB9	$00E7			MOVWF	FARG_LCD_Out+2
$0ABA	$0855			MOVF	FARG_msgbox+0, 0
$0ABB	$00E5			MOVWF	FARG_LCD_Out+0
$0ABC	$3001			MOVLW	1
$0ABD	$00E6			MOVWF	FARG_LCD_Out+1
$0ABE	$2333			CALL	_LCD_Out
;MonoBank.c,406 :: 		Lcd_Out(row, 1, CopyConst2Ram(msg,msgs[msgIdx]));
$0ABF	$30AC			MOVLW	_msg
$0AC0	$1683			BSF	STATUS, RP0
$0AC1	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0AC2	$3001			MOVLW	1
$0AC3	$00F4			MOVWF	STACK_4
$0AC4	$0856			MOVF	FARG_msgbox+1, 0
$0AC5	$00F0			MOVWF	STACK_0
$0AC6	$0874			MOVF	STACK_4, 0
$0AC7	$	L_msgbox_103:
$0AC7	$1903			BTFSC	STATUS, Z
$0AC8	$2ACD			GOTO	L_msgbox_104
$0AC9	$0DF0			RLF	STACK_0, 1
$0ACA	$1070			BCF	STACK_0, 0
$0ACB	$3FFF			ADDLW	255
$0ACC	$2AC7			GOTO	L_msgbox_103
$0ACD	$	L_msgbox_104:
$0ACD	$0870			MOVF	STACK_0, 0
$0ACE	$3FBB			ADDLW	_msgs
$0ACF	$0084			MOVWF	FSR
$0AD0	$0800			MOVF	INDF, 0
$0AD1	$00E6			MOVWF	FARG_CopyConst2Ram+1
$0AD2	$0A84			INCF	FSR, 1
$0AD3	$0800			MOVF	INDF, 0
$0AD4	$00E7			MOVWF	FARG_CopyConst2Ram+2
$0AD5	$24D9			CALL	_CopyConst2Ram
$0AD6	$0870			MOVF	STACK_0, 0
$0AD7	$00E7			MOVWF	FARG_LCD_Out+2
$0AD8	$0855			MOVF	FARG_msgbox+0, 0
$0AD9	$00E5			MOVWF	FARG_LCD_Out+0
$0ADA	$3001			MOVLW	1
$0ADB	$00E6			MOVWF	FARG_LCD_Out+1
$0ADC	$2333			CALL	_LCD_Out
;MonoBank.c,414 :: 		do  {
$0ADD	$	L_msgbox_56:
;MonoBank.c,415 :: 		current=tastiera();
$0ADD	$1303			BCF	STATUS, RP1
$0ADE	$1283			BCF	STATUS, RP0
$0ADF	$237B			CALL	_tastiera
$0AE0	$0870			MOVF	STACK_0, 0
$0AE1	$00D7			MOVWF	msgbox_current_L0
;MonoBank.c,416 :: 		}   while ((current!=tastoCANCEL) && (current!=tastoOK)) ;
$0AE2	$0870			MOVF	STACK_0, 0
$0AE3	$3A23			XORLW	35
$0AE4	$1903			BTFSC	STATUS, Z
$0AE5	$2AEA			GOTO	L542_ex_L_msgbox_56
$0AE6	$0857			MOVF	msgbox_current_L0, 0
$0AE7	$3A2A			XORLW	42
$0AE8	$1D03			BTFSS	STATUS, Z
$0AE9	$2ADD			GOTO	L_msgbox_56
$0AEA	$	L542_ex_L_msgbox_56:
$0AEA	$	L_msgbox_57:
;MonoBank.c,417 :: 		return current;
$0AEA	$0857			MOVF	msgbox_current_L0, 0
$0AEB	$00F0			MOVWF	STACK_0
;MonoBank.c,419 :: 		}
$0AEC	$0008			RETURN
$0D97	$	_resetImporti:
;MonoBank.c,378 :: 		void resetImporti() {
;MonoBank.c,380 :: 		for (  i = 0; i <= 6; i++ ) {
$0D97	$1303			BCF	STATUS, RP1
$0D98	$1683			BSF	STATUS, RP0
$0D99	$01D5			CLRF	resetImporti_i_L0, 1
$0D9A	$	L_resetImporti_53:
$0D9A	$0855			MOVF	resetImporti_i_L0, 0
$0D9B	$3C06			SUBLW	6
$0D9C	$1C03			BTFSS	STATUS, C
$0D9D	$2DA6			GOTO	L_resetImporti_54
;MonoBank.c,382 :: 		salvaImporto(i,0);
$0D9E	$0855			MOVF	resetImporti_i_L0, 0
$0D9F	$00E5			MOVWF	FARG_salvaImporto+0
$0DA0	$01E6			CLRF	FARG_salvaImporto+1
$0DA1	$01E7			CLRF	FARG_salvaImporto+2
$0DA2	$25A7			CALL	_salvaImporto
;MonoBank.c,383 :: 		}
$0DA3	$	L_resetImporti_55:
;MonoBank.c,380 :: 		for (  i = 0; i <= 6; i++ ) {
$0DA3	$1303			BCF	STATUS, RP1
$0DA4	$0AD5			INCF	resetImporti_i_L0, 1
;MonoBank.c,383 :: 		}
$0DA5	$2D9A			GOTO	L_resetImporti_53
$0DA6	$	L_resetImporti_54:
;MonoBank.c,385 :: 		}
$0DA6	$0008			RETURN
$0D04	$	_leggiTessere:
;MonoBank.c,199 :: 		void leggiTessere() {
;MonoBank.c,201 :: 		cardPiu=decodifica_tessera(Adc_Read(1));
$0D04	$3001			MOVLW	1
$0D05	$1303			BCF	STATUS, RP1
$0D06	$1683			BSF	STATUS, RP0
$0D07	$00EC			MOVWF	FARG_Adc_Read+0
$0D08	$24AB			CALL	_Adc_Read
$0D09	$0870			MOVF	STACK_0, 0
$0D0A	$00E5			MOVWF	FARG_decodifica_tessera+0
$0D0B	$0871			MOVF	STACK_0+1, 0
$0D0C	$00E6			MOVWF	FARG_decodifica_tessera+1
$0D0D	$2445			CALL	_decodifica_tessera
$0D0E	$0870			MOVF	STACK_0, 0
$0D0F	$00CB			MOVWF	_cardPiu
;MonoBank.c,202 :: 		cardMeno=decodifica_tessera(Adc_Read(2));
$0D10	$3002			MOVLW	2
$0D11	$00EC			MOVWF	FARG_Adc_Read+0
$0D12	$24AB			CALL	_Adc_Read
$0D13	$0870			MOVF	STACK_0, 0
$0D14	$00E5			MOVWF	FARG_decodifica_tessera+0
$0D15	$0871			MOVF	STACK_0+1, 0
$0D16	$00E6			MOVWF	FARG_decodifica_tessera+1
$0D17	$2445			CALL	_decodifica_tessera
$0D18	$0870			MOVF	STACK_0, 0
$0D19	$00CC			MOVWF	_cardMeno
;MonoBank.c,204 :: 		}
$0D1A	$0008			RETURN
$08E7	$	_displayTessere:
;MonoBank.c,205 :: 		void displayTessere() {
;MonoBank.c,207 :: 		Lcd_Chr(1,1,' ');
$08E7	$3001			MOVLW	1
$08E8	$1303			BCF	STATUS, RP1
$08E9	$1683			BSF	STATUS, RP0
$08EA	$00E5			MOVWF	FARG_Lcd_Chr+0
$08EB	$3001			MOVLW	1
$08EC	$00E6			MOVWF	FARG_Lcd_Chr+1
$08ED	$3020			MOVLW	32
$08EE	$00E7			MOVWF	FARG_Lcd_Chr+2
$08EF	$2409			CALL	_Lcd_Chr
;MonoBank.c,208 :: 		Lcd_Chr(1,2,'.');
$08F0	$3001			MOVLW	1
$08F1	$1683			BSF	STATUS, RP0
$08F2	$00E5			MOVWF	FARG_Lcd_Chr+0
$08F3	$3002			MOVLW	2
$08F4	$00E6			MOVWF	FARG_Lcd_Chr+1
$08F5	$302E			MOVLW	46
$08F6	$00E7			MOVWF	FARG_Lcd_Chr+2
$08F7	$2409			CALL	_Lcd_Chr
;MonoBank.c,209 :: 		Lcd_Chr(1,15,'.');
$08F8	$3001			MOVLW	1
$08F9	$1683			BSF	STATUS, RP0
$08FA	$00E5			MOVWF	FARG_Lcd_Chr+0
$08FB	$300F			MOVLW	15
$08FC	$00E6			MOVWF	FARG_Lcd_Chr+1
$08FD	$302E			MOVLW	46
$08FE	$00E7			MOVWF	FARG_Lcd_Chr+2
$08FF	$2409			CALL	_Lcd_Chr
;MonoBank.c,210 :: 		Lcd_Chr(1,16,' ');
$0900	$3001			MOVLW	1
$0901	$1683			BSF	STATUS, RP0
$0902	$00E5			MOVWF	FARG_Lcd_Chr+0
$0903	$3010			MOVLW	16
$0904	$00E6			MOVWF	FARG_Lcd_Chr+1
$0905	$3020			MOVLW	32
$0906	$00E7			MOVWF	FARG_Lcd_Chr+2
$0907	$2409			CALL	_Lcd_Chr
;MonoBank.c,211 :: 		if (cardPiu>0) Lcd_Chr(1,2,cardPiu+48) ;
$0908	$1683			BSF	STATUS, RP0
$0909	$084B			MOVF	_cardPiu, 0
$090A	$3C00			SUBLW	0
$090B	$1803			BTFSC	STATUS, C
$090C	$2915			GOTO	L_displayTessere_18
$090D	$3001			MOVLW	1
$090E	$00E5			MOVWF	FARG_Lcd_Chr+0
$090F	$3002			MOVLW	2
$0910	$00E6			MOVWF	FARG_Lcd_Chr+1
$0911	$3030			MOVLW	48
$0912	$074B			ADDWF	_cardPiu, 0
$0913	$00E7			MOVWF	FARG_Lcd_Chr+2
$0914	$2409			CALL	_Lcd_Chr
$0915	$	L_displayTessere_18:
;MonoBank.c,212 :: 		if (cardMeno>0) Lcd_Chr(1,15,cardMeno+48);
$0915	$1683			BSF	STATUS, RP0
$0916	$084C			MOVF	_cardMeno, 0
$0917	$3C00			SUBLW	0
$0918	$1803			BTFSC	STATUS, C
$0919	$2922			GOTO	L_displayTessere_19
$091A	$3001			MOVLW	1
$091B	$00E5			MOVWF	FARG_Lcd_Chr+0
$091C	$300F			MOVLW	15
$091D	$00E6			MOVWF	FARG_Lcd_Chr+1
$091E	$3030			MOVLW	48
$091F	$074C			ADDWF	_cardMeno, 0
$0920	$00E7			MOVWF	FARG_Lcd_Chr+2
$0921	$2409			CALL	_Lcd_Chr
$0922	$	L_displayTessere_19:
;MonoBank.c,215 :: 		temp_resB=Adc_Read(3) ;
$0922	$3003			MOVLW	3
$0923	$1683			BSF	STATUS, RP0
$0924	$00EC			MOVWF	FARG_Adc_Read+0
$0925	$24AB			CALL	_Adc_Read
;MonoBank.c,216 :: 		if (temp_resB<990)   {
$0926	$3003			MOVLW	3
$0927	$0271			SUBWF	STACK_0+1, 0
$0928	$1D03			BTFSS	STATUS, Z
$0929	$292C			GOTO	L_displayTessere_100
$092A	$30DE			MOVLW	222
$092B	$0270			SUBWF	STACK_0, 0
$092C	$	L_displayTessere_100:
$092C	$1803			BTFSC	STATUS, C
$092D	$293D			GOTO	L_displayTessere_20
;MonoBank.c,217 :: 		Lcd_Chr(1,1,'B');
$092E	$3001			MOVLW	1
$092F	$00E5			MOVWF	FARG_Lcd_Chr+0
$0930	$3001			MOVLW	1
$0931	$00E6			MOVWF	FARG_Lcd_Chr+1
$0932	$3042			MOVLW	66
$0933	$00E7			MOVWF	FARG_Lcd_Chr+2
$0934	$2409			CALL	_Lcd_Chr
;MonoBank.c,218 :: 		Lcd_Chr(1,16,'B');
$0935	$3001			MOVLW	1
$0936	$1683			BSF	STATUS, RP0
$0937	$00E5			MOVWF	FARG_Lcd_Chr+0
$0938	$3010			MOVLW	16
$0939	$00E6			MOVWF	FARG_Lcd_Chr+1
$093A	$3042			MOVLW	66
$093B	$00E7			MOVWF	FARG_Lcd_Chr+2
$093C	$2409			CALL	_Lcd_Chr
;MonoBank.c,219 :: 		}
$093D	$	L_displayTessere_20:
;MonoBank.c,220 :: 		}
$093D	$1303			BCF	STATUS, RP1
$093E	$1283			BCF	STATUS, RP0
$093F	$0008			RETURN
$0539	$	_inputNumero:
;MonoBank.c,243 :: 		void inputNumero(unsigned short col,unsigned short row) {
;MonoBank.c,245 :: 		unsigned short xcol=0;
$0539	$1303			BCF	STATUS, RP1
$053A	$1683			BSF	STATUS, RP0
$053B	$01D8			CLRF	inputNumero_xcol_L0, 1
;MonoBank.c,246 :: 		unsigned short current=0;
$053C	$01D9			CLRF	inputNumero_current_L0, 1
;MonoBank.c,248 :: 		unsigned short ciniziale=cardPiu+ cardMeno;
$053D	$084C			MOVF	_cardMeno, 0
$053E	$074B			ADDWF	_cardPiu, 0
$053F	$00F0			MOVWF	STACK_0
$0540	$01F1			CLRF	STACK_0+1
$0541	$1803			BTFSC	STATUS, C
$0542	$0AF1			INCF	STACK_0+1, 1
$0543	$0870			MOVF	STACK_0, 0
$0544	$00E4			MOVWF	inputNumero_ciniziale_L0
;MonoBank.c,249 :: 		for (  iicc = 0; iicc < 10; iicc++ ) digits[iicc]=0;
$0545	$01D7			CLRF	inputNumero_iicc_L0, 1
$0546	$	L_inputNumero_24:
$0546	$300A			MOVLW	10
$0547	$0257			SUBWF	inputNumero_iicc_L0, 0
$0548	$1803			BTFSC	STATUS, C
$0549	$2D52			GOTO	L_inputNumero_25
$054A	$0857			MOVF	inputNumero_iicc_L0, 0
$054B	$3FDA			ADDLW	inputNumero_digits_L0
$054C	$00F0			MOVWF	STACK_0
$054D	$0870			MOVF	STACK_0, 0
$054E	$0084			MOVWF	FSR
$054F	$0180			CLRF	INDF, 1
$0550	$	L_inputNumero_26:
$0550	$0AD7			INCF	inputNumero_iicc_L0, 1
$0551	$2D46			GOTO	L_inputNumero_24
$0552	$	L_inputNumero_25:
;MonoBank.c,250 :: 		inputNumeroValue=0;
$0552	$01CD			CLRF	_inputNumeroValue
$0553	$01CE			CLRF	_inputNumeroValue+1
;MonoBank.c,252 :: 		Lcd_Out(row, 1, CopyConst2Ram(msg,rigavuota));
$0554	$30AC			MOVLW	_msg
$0555	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0556	$1283			BCF	STATUS, RP0
$0557	$086E			MOVF	_rigavuota, 0
$0558	$1683			BSF	STATUS, RP0
$0559	$00E6			MOVWF	FARG_CopyConst2Ram+1
$055A	$1283			BCF	STATUS, RP0
$055B	$086F			MOVF	_rigavuota+1, 0
$055C	$1683			BSF	STATUS, RP0
$055D	$00E7			MOVWF	FARG_CopyConst2Ram+2
$055E	$158A			BSF	PCLATH, 3
$055F	$24D9			CALL	_CopyConst2Ram
$0560	$118A			BCF	PCLATH, 3
$0561	$0870			MOVF	STACK_0, 0
$0562	$00E7			MOVWF	FARG_LCD_Out+2
$0563	$0856			MOVF	FARG_inputNumero+1, 0
$0564	$00E5			MOVWF	FARG_LCD_Out+0
$0565	$3001			MOVLW	1
$0566	$00E6			MOVWF	FARG_LCD_Out+1
$0567	$158A			BSF	PCLATH, 3
$0568	$2333			CALL	_LCD_Out
$0569	$118A			BCF	PCLATH, 3
;MonoBank.c,254 :: 		Lcd_Cmd( LCD_UNDERLINE_ON);
$056A	$300E			MOVLW	14
$056B	$1703			BSF	STATUS, RP1
$056C	$0094			MOVWF	FARG_Lcd_Cmd+0
$056D	$158A			BSF	PCLATH, 3
$056E	$22ED			CALL	_Lcd_Cmd
$056F	$118A			BCF	PCLATH, 3
;MonoBank.c,255 :: 		Lcd_Chr(row,col-1,'$');
$0570	$1683			BSF	STATUS, RP0
$0571	$0856			MOVF	FARG_inputNumero+1, 0
$0572	$00E5			MOVWF	FARG_Lcd_Chr+0
$0573	$0355			DECF	FARG_inputNumero+0, 0
$0574	$00E6			MOVWF	FARG_Lcd_Chr+1
$0575	$3024			MOVLW	36
$0576	$00E7			MOVWF	FARG_Lcd_Chr+2
$0577	$158A			BSF	PCLATH, 3
$0578	$2409			CALL	_Lcd_Chr
$0579	$118A			BCF	PCLATH, 3
;MonoBank.c,260 :: 		do {
$057A	$	L_inputNumero_27:
;MonoBank.c,262 :: 		cardPiu=decodifica_tessera(Adc_Read(1));
$057A	$3001			MOVLW	1
$057B	$1683			BSF	STATUS, RP0
$057C	$00EC			MOVWF	FARG_Adc_Read+0
$057D	$158A			BSF	PCLATH, 3
$057E	$24AB			CALL	_Adc_Read
$057F	$118A			BCF	PCLATH, 3
$0580	$0870			MOVF	STACK_0, 0
$0581	$00E5			MOVWF	FARG_decodifica_tessera+0
$0582	$0871			MOVF	STACK_0+1, 0
$0583	$00E6			MOVWF	FARG_decodifica_tessera+1
$0584	$158A			BSF	PCLATH, 3
$0585	$2445			CALL	_decodifica_tessera
$0586	$118A			BCF	PCLATH, 3
$0587	$0870			MOVF	STACK_0, 0
$0588	$00CB			MOVWF	_cardPiu
;MonoBank.c,263 :: 		cardMeno=decodifica_tessera(Adc_Read(2));
$0589	$3002			MOVLW	2
$058A	$00EC			MOVWF	FARG_Adc_Read+0
$058B	$158A			BSF	PCLATH, 3
$058C	$24AB			CALL	_Adc_Read
$058D	$118A			BCF	PCLATH, 3
$058E	$0870			MOVF	STACK_0, 0
$058F	$00E5			MOVWF	FARG_decodifica_tessera+0
$0590	$0871			MOVF	STACK_0+1, 0
$0591	$00E6			MOVWF	FARG_decodifica_tessera+1
$0592	$158A			BSF	PCLATH, 3
$0593	$2445			CALL	_decodifica_tessera
$0594	$118A			BCF	PCLATH, 3
$0595	$0870			MOVF	STACK_0, 0
$0596	$00CC			MOVWF	_cardMeno
;MonoBank.c,265 :: 		if ( ciniziale!=(cardPiu+cardMeno)) {
$0597	$0870			MOVF	STACK_0, 0
$0598	$074B			ADDWF	_cardPiu, 0
$0599	$00F2			MOVWF	STACK_2
$059A	$01F3			CLRF	STACK_2+1
$059B	$1803			BTFSC	STATUS, C
$059C	$0AF3			INCF	STACK_2+1, 1
$059D	$3000			MOVLW	0
$059E	$0673			XORWF	STACK_2+1, 0
$059F	$1D03			BTFSS	STATUS, Z
$05A0	$2DA3			GOTO	L_inputNumero_102
$05A1	$0872			MOVF	STACK_2, 0
$05A2	$0664			XORWF	inputNumero_ciniziale_L0, 0
$05A3	$	L_inputNumero_102:
$05A3	$1903			BTFSC	STATUS, Z
$05A4	$2DF5			GOTO	L_inputNumero_29
;MonoBank.c,266 :: 		Lcd_Chr(1,1,' ');
$05A5	$3001			MOVLW	1
$05A6	$00E5			MOVWF	FARG_Lcd_Chr+0
$05A7	$3001			MOVLW	1
$05A8	$00E6			MOVWF	FARG_Lcd_Chr+1
$05A9	$3020			MOVLW	32
$05AA	$00E7			MOVWF	FARG_Lcd_Chr+2
$05AB	$158A			BSF	PCLATH, 3
$05AC	$2409			CALL	_Lcd_Chr
$05AD	$118A			BCF	PCLATH, 3
;MonoBank.c,267 :: 		Lcd_Chr(1,2,'.');
$05AE	$3001			MOVLW	1
$05AF	$1683			BSF	STATUS, RP0
$05B0	$00E5			MOVWF	FARG_Lcd_Chr+0
$05B1	$3002			MOVLW	2
$05B2	$00E6			MOVWF	FARG_Lcd_Chr+1
$05B3	$302E			MOVLW	46
$05B4	$00E7			MOVWF	FARG_Lcd_Chr+2
$05B5	$158A			BSF	PCLATH, 3
$05B6	$2409			CALL	_Lcd_Chr
$05B7	$118A			BCF	PCLATH, 3
;MonoBank.c,268 :: 		Lcd_Chr(1,15,'.');
$05B8	$3001			MOVLW	1
$05B9	$1683			BSF	STATUS, RP0
$05BA	$00E5			MOVWF	FARG_Lcd_Chr+0
$05BB	$300F			MOVLW	15
$05BC	$00E6			MOVWF	FARG_Lcd_Chr+1
$05BD	$302E			MOVLW	46
$05BE	$00E7			MOVWF	FARG_Lcd_Chr+2
$05BF	$158A			BSF	PCLATH, 3
$05C0	$2409			CALL	_Lcd_Chr
$05C1	$118A			BCF	PCLATH, 3
;MonoBank.c,269 :: 		Lcd_Chr(1,16,' ');
$05C2	$3001			MOVLW	1
$05C3	$1683			BSF	STATUS, RP0
$05C4	$00E5			MOVWF	FARG_Lcd_Chr+0
$05C5	$3010			MOVLW	16
$05C6	$00E6			MOVWF	FARG_Lcd_Chr+1
$05C7	$3020			MOVLW	32
$05C8	$00E7			MOVWF	FARG_Lcd_Chr+2
$05C9	$158A			BSF	PCLATH, 3
$05CA	$2409			CALL	_Lcd_Chr
$05CB	$118A			BCF	PCLATH, 3
;MonoBank.c,270 :: 		if (cardPiu>0) Lcd_Chr(1,2,cardPiu+48) ;
$05CC	$1683			BSF	STATUS, RP0
$05CD	$084B			MOVF	_cardPiu, 0
$05CE	$3C00			SUBLW	0
$05CF	$1803			BTFSC	STATUS, C
$05D0	$2DDB			GOTO	L_inputNumero_30
$05D1	$3001			MOVLW	1
$05D2	$00E5			MOVWF	FARG_Lcd_Chr+0
$05D3	$3002			MOVLW	2
$05D4	$00E6			MOVWF	FARG_Lcd_Chr+1
$05D5	$3030			MOVLW	48
$05D6	$074B			ADDWF	_cardPiu, 0
$05D7	$00E7			MOVWF	FARG_Lcd_Chr+2
$05D8	$158A			BSF	PCLATH, 3
$05D9	$2409			CALL	_Lcd_Chr
$05DA	$118A			BCF	PCLATH, 3
$05DB	$	L_inputNumero_30:
;MonoBank.c,271 :: 		if (cardMeno>0) Lcd_Chr(1,15,cardMeno+48);
$05DB	$1683			BSF	STATUS, RP0
$05DC	$084C			MOVF	_cardMeno, 0
$05DD	$3C00			SUBLW	0
$05DE	$1803			BTFSC	STATUS, C
$05DF	$2DEA			GOTO	L_inputNumero_31
$05E0	$3001			MOVLW	1
$05E1	$00E5			MOVWF	FARG_Lcd_Chr+0
$05E2	$300F			MOVLW	15
$05E3	$00E6			MOVWF	FARG_Lcd_Chr+1
$05E4	$3030			MOVLW	48
$05E5	$074C			ADDWF	_cardMeno, 0
$05E6	$00E7			MOVWF	FARG_Lcd_Chr+2
$05E7	$158A			BSF	PCLATH, 3
$05E8	$2409			CALL	_Lcd_Chr
$05E9	$118A			BCF	PCLATH, 3
$05EA	$	L_inputNumero_31:
;MonoBank.c,272 :: 		ciniziale=cardPiu+ cardMeno;
$05EA	$1683			BSF	STATUS, RP0
$05EB	$084C			MOVF	_cardMeno, 0
$05EC	$074B			ADDWF	_cardPiu, 0
$05ED	$00E4			MOVWF	inputNumero_ciniziale_L0
;MonoBank.c,273 :: 		Lcd_Cmd( LCD_CURSOR_OFF);
$05EE	$300C			MOVLW	12
$05EF	$1703			BSF	STATUS, RP1
$05F0	$1283			BCF	STATUS, RP0
$05F1	$0094			MOVWF	FARG_Lcd_Cmd+0
$05F2	$158A			BSF	PCLATH, 3
$05F3	$22ED			CALL	_Lcd_Cmd
$05F4	$118A			BCF	PCLATH, 3
;MonoBank.c,274 :: 		}  ;
$05F5	$	L_inputNumero_29:
;MonoBank.c,276 :: 		if ((cardPiu==0) &&   (cardMeno==0)) {
$05F5	$1683			BSF	STATUS, RP0
$05F6	$084B			MOVF	_cardPiu, 0
$05F7	$3A00			XORLW	0
$05F8	$1D03			BTFSS	STATUS, Z
$05F9	$2E1D			GOTO	L_inputNumero_34
$05FA	$084C			MOVF	_cardMeno, 0
$05FB	$3A00			XORLW	0
$05FC	$1D03			BTFSS	STATUS, Z
$05FD	$2E1D			GOTO	L_inputNumero_34
$05FE	$	L337_ex_L_inputNumero_34:
;MonoBank.c,277 :: 		inputNumeroValue=0;
$05FE	$01CD			CLRF	_inputNumeroValue
$05FF	$01CE			CLRF	_inputNumeroValue+1
;MonoBank.c,279 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,rigavuota));
$0600	$30AC			MOVLW	_msg
$0601	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0602	$1283			BCF	STATUS, RP0
$0603	$086E			MOVF	_rigavuota, 0
$0604	$1683			BSF	STATUS, RP0
$0605	$00E6			MOVWF	FARG_CopyConst2Ram+1
$0606	$1283			BCF	STATUS, RP0
$0607	$086F			MOVF	_rigavuota+1, 0
$0608	$1683			BSF	STATUS, RP0
$0609	$00E7			MOVWF	FARG_CopyConst2Ram+2
$060A	$158A			BSF	PCLATH, 3
$060B	$24D9			CALL	_CopyConst2Ram
$060C	$118A			BCF	PCLATH, 3
$060D	$0870			MOVF	STACK_0, 0
$060E	$00E7			MOVWF	FARG_LCD_Out+2
$060F	$3002			MOVLW	2
$0610	$00E5			MOVWF	FARG_LCD_Out+0
$0611	$3001			MOVLW	1
$0612	$00E6			MOVWF	FARG_LCD_Out+1
$0613	$158A			BSF	PCLATH, 3
$0614	$2333			CALL	_LCD_Out
$0615	$118A			BCF	PCLATH, 3
;MonoBank.c,280 :: 		Lcd_Cmd( LCD_CURSOR_OFF);
$0616	$300C			MOVLW	12
$0617	$1703			BSF	STATUS, RP1
$0618	$0094			MOVWF	FARG_Lcd_Cmd+0
$0619	$158A			BSF	PCLATH, 3
$061A	$22ED			CALL	_Lcd_Cmd
$061B	$118A			BCF	PCLATH, 3
;MonoBank.c,281 :: 		return;
$061C	$0008			RETURN
;MonoBank.c,282 :: 		}
$061D	$	L_inputNumero_34:
;MonoBank.c,283 :: 		else current=tastiera();
$061D	$1303			BCF	STATUS, RP1
$061E	$1283			BCF	STATUS, RP0
$061F	$158A			BSF	PCLATH, 3
$0620	$237B			CALL	_tastiera
$0621	$118A			BCF	PCLATH, 3
$0622	$0870			MOVF	STACK_0, 0
$0623	$00D9			MOVWF	inputNumero_current_L0
$0624	$	L_inputNumero_35:
;MonoBank.c,286 :: 		if (current==tastoCANCEL) {
$0624	$0859			MOVF	inputNumero_current_L0, 0
$0625	$3A23			XORLW	35
$0626	$1D03			BTFSS	STATUS, Z
$0627	$2E4B			GOTO	L_inputNumero_36
;MonoBank.c,288 :: 		if (xcol>0) {
$0628	$0858			MOVF	inputNumero_xcol_L0, 0
$0629	$3C00			SUBLW	0
$062A	$1803			BTFSC	STATUS, C
$062B	$2E4B			GOTO	L_inputNumero_37
;MonoBank.c,289 :: 		xcol=xcol-1;
$062C	$0358			DECF	inputNumero_xcol_L0, 0
$062D	$00F0			MOVWF	STACK_0
$062E	$0870			MOVF	STACK_0, 0
$062F	$00D8			MOVWF	inputNumero_xcol_L0
;MonoBank.c,290 :: 		Lcd_Chr(row,col+xcol,' ');
$0630	$0856			MOVF	FARG_inputNumero+1, 0
$0631	$00E5			MOVWF	FARG_Lcd_Chr+0
$0632	$0870			MOVF	STACK_0, 0
$0633	$0755			ADDWF	FARG_inputNumero+0, 0
$0634	$00E6			MOVWF	FARG_Lcd_Chr+1
$0635	$3020			MOVLW	32
$0636	$00E7			MOVWF	FARG_Lcd_Chr+2
$0637	$158A			BSF	PCLATH, 3
$0638	$2409			CALL	_Lcd_Chr
$0639	$118A			BCF	PCLATH, 3
;MonoBank.c,291 :: 		digits[xcol]=' ';
$063A	$1683			BSF	STATUS, RP0
$063B	$0858			MOVF	inputNumero_xcol_L0, 0
$063C	$3FDA			ADDLW	inputNumero_digits_L0
$063D	$00F0			MOVWF	STACK_0
$063E	$0870			MOVF	STACK_0, 0
$063F	$0084			MOVWF	FSR
$0640	$3020			MOVLW	32
$0641	$0080			MOVWF	INDF
;MonoBank.c,292 :: 		Lcd_Cmd( LCD_MOVE_CURSOR_LEFT);
$0642	$3010			MOVLW	16
$0643	$1703			BSF	STATUS, RP1
$0644	$1283			BCF	STATUS, RP0
$0645	$0094			MOVWF	FARG_Lcd_Cmd+0
$0646	$158A			BSF	PCLATH, 3
$0647	$22ED			CALL	_Lcd_Cmd
$0648	$118A			BCF	PCLATH, 3
;MonoBank.c,293 :: 		current=0;
$0649	$1683			BSF	STATUS, RP0
$064A	$01D9			CLRF	inputNumero_current_L0, 1
;MonoBank.c,294 :: 		}
$064B	$	L_inputNumero_37:
;MonoBank.c,298 :: 		}
$064B	$	L_inputNumero_36:
;MonoBank.c,301 :: 		if ((current>0) && (current<=57) && (xcol<9) && (current!=tastoCANCEL) && (current!=tastoOK) ){
$064B	$0859			MOVF	inputNumero_current_L0, 0
$064C	$3C00			SUBLW	0
$064D	$1803			BTFSC	STATUS, C
$064E	$2E73			GOTO	L_inputNumero_40
$064F	$0859			MOVF	inputNumero_current_L0, 0
$0650	$3C39			SUBLW	57
$0651	$1C03			BTFSS	STATUS, C
$0652	$2E73			GOTO	L_inputNumero_40
$0653	$3009			MOVLW	9
$0654	$0258			SUBWF	inputNumero_xcol_L0, 0
$0655	$1803			BTFSC	STATUS, C
$0656	$2E73			GOTO	L_inputNumero_40
$0657	$0859			MOVF	inputNumero_current_L0, 0
$0658	$3A23			XORLW	35
$0659	$1903			BTFSC	STATUS, Z
$065A	$2E73			GOTO	L_inputNumero_40
$065B	$0859			MOVF	inputNumero_current_L0, 0
$065C	$3A2A			XORLW	42
$065D	$1903			BTFSC	STATUS, Z
$065E	$2E73			GOTO	L_inputNumero_40
$065F	$	L387_ex_L_inputNumero_40:
;MonoBank.c,302 :: 		digits[xcol]=current;
$065F	$0858			MOVF	inputNumero_xcol_L0, 0
$0660	$3FDA			ADDLW	inputNumero_digits_L0
$0661	$00F0			MOVWF	STACK_0
$0662	$0870			MOVF	STACK_0, 0
$0663	$0084			MOVWF	FSR
$0664	$0859			MOVF	inputNumero_current_L0, 0
$0665	$0080			MOVWF	INDF
;MonoBank.c,303 :: 		Lcd_Chr(row,col+xcol,current);
$0666	$0856			MOVF	FARG_inputNumero+1, 0
$0667	$00E5			MOVWF	FARG_Lcd_Chr+0
$0668	$0858			MOVF	inputNumero_xcol_L0, 0
$0669	$0755			ADDWF	FARG_inputNumero+0, 0
$066A	$00E6			MOVWF	FARG_Lcd_Chr+1
$066B	$0859			MOVF	inputNumero_current_L0, 0
$066C	$00E7			MOVWF	FARG_Lcd_Chr+2
$066D	$158A			BSF	PCLATH, 3
$066E	$2409			CALL	_Lcd_Chr
$066F	$118A			BCF	PCLATH, 3
;MonoBank.c,304 :: 		xcol=xcol+1;
$0670	$1683			BSF	STATUS, RP0
$0671	$0AD8			INCF	inputNumero_xcol_L0, 1
;MonoBank.c,305 :: 		current=0;
$0672	$01D9			CLRF	inputNumero_current_L0, 1
;MonoBank.c,306 :: 		}
$0673	$	L_inputNumero_40:
;MonoBank.c,310 :: 		} while ((current!=tastoOK ) && (current!=tastoCANCEL ) && (current<=57));
$0673	$0859			MOVF	inputNumero_current_L0, 0
$0674	$3A2A			XORLW	42
$0675	$1903			BTFSC	STATUS, Z
$0676	$2E7F			GOTO	L411_ex_L_inputNumero_27
$0677	$0859			MOVF	inputNumero_current_L0, 0
$0678	$3A23			XORLW	35
$0679	$1903			BTFSC	STATUS, Z
$067A	$2E7F			GOTO	L411_ex_L_inputNumero_27
$067B	$0859			MOVF	inputNumero_current_L0, 0
$067C	$3C39			SUBLW	57
$067D	$1803			BTFSC	STATUS, C
$067E	$2D7A			GOTO	L_inputNumero_27
$067F	$	L411_ex_L_inputNumero_27:
$067F	$	L_inputNumero_28:
;MonoBank.c,313 :: 		if (current>57) {
$067F	$0859			MOVF	inputNumero_current_L0, 0
$0680	$3C39			SUBLW	57
$0681	$1803			BTFSC	STATUS, C
$0682	$2EA2			GOTO	L_inputNumero_43
;MonoBank.c,314 :: 		if (current==65) inputNumeroValue=200;
$0683	$0859			MOVF	inputNumero_current_L0, 0
$0684	$3A41			XORLW	65
$0685	$1D03			BTFSS	STATUS, Z
$0686	$2E8A			GOTO	L_inputNumero_44
$0687	$30C8			MOVLW	200
$0688	$00CD			MOVWF	_inputNumeroValue
$0689	$01CE			CLRF	_inputNumeroValue+1
$068A	$	L_inputNumero_44:
;MonoBank.c,315 :: 		if (current==66) inputNumeroValue=150;
$068A	$0859			MOVF	inputNumero_current_L0, 0
$068B	$3A42			XORLW	66
$068C	$1D03			BTFSS	STATUS, Z
$068D	$2E91			GOTO	L_inputNumero_45
$068E	$3096			MOVLW	150
$068F	$00CD			MOVWF	_inputNumeroValue
$0690	$01CE			CLRF	_inputNumeroValue+1
$0691	$	L_inputNumero_45:
;MonoBank.c,316 :: 		if (current==67) inputNumeroValue=100;
$0691	$0859			MOVF	inputNumero_current_L0, 0
$0692	$3A43			XORLW	67
$0693	$1D03			BTFSS	STATUS, Z
$0694	$2E99			GOTO	L_inputNumero_46
$0695	$3064			MOVLW	100
$0696	$00CD			MOVWF	_inputNumeroValue
$0697	$3000			MOVLW	0
$0698	$00CE			MOVWF	_inputNumeroValue+1
$0699	$	L_inputNumero_46:
;MonoBank.c,317 :: 		if (current==68) inputNumeroValue=50;
$0699	$0859			MOVF	inputNumero_current_L0, 0
$069A	$3A44			XORLW	68
$069B	$1D03			BTFSS	STATUS, Z
$069C	$2EA1			GOTO	L_inputNumero_47
$069D	$3032			MOVLW	50
$069E	$00CD			MOVWF	_inputNumeroValue
$069F	$3000			MOVLW	0
$06A0	$00CE			MOVWF	_inputNumeroValue+1
$06A1	$	L_inputNumero_47:
;MonoBank.c,319 :: 		}
$06A1	$2EB9			GOTO	L_inputNumero_48
$06A2	$	L_inputNumero_43:
;MonoBank.c,322 :: 		if (current== tastoOK){
$06A2	$0859			MOVF	inputNumero_current_L0, 0
$06A3	$3A2A			XORLW	42
$06A4	$1D03			BTFSS	STATUS, Z
$06A5	$2EB7			GOTO	L_inputNumero_49
;MonoBank.c,323 :: 		if (xcol>=1) {
$06A6	$3001			MOVLW	1
$06A7	$0258			SUBWF	inputNumero_xcol_L0, 0
$06A8	$1C03			BTFSS	STATUS, C
$06A9	$2EB4			GOTO	L_inputNumero_50
;MonoBank.c,327 :: 		inputNumeroValue=atoi(digits);
$06AA	$30DA			MOVLW	inputNumero_digits_L0
$06AB	$00E5			MOVWF	FARG_atoi+0
$06AC	$158A			BSF	PCLATH, 3
$06AD	$21F8			CALL	_atoi
$06AE	$118A			BCF	PCLATH, 3
$06AF	$0870			MOVF	STACK_0, 0
$06B0	$00CD			MOVWF	_inputNumeroValue
$06B1	$0871			MOVF	STACK_0+1, 0
$06B2	$00CE			MOVWF	_inputNumeroValue+1
;MonoBank.c,329 :: 		}
$06B3	$2EB6			GOTO	L_inputNumero_51
$06B4	$	L_inputNumero_50:
;MonoBank.c,331 :: 		inputNumeroValue=0;
$06B4	$01CD			CLRF	_inputNumeroValue
$06B5	$01CE			CLRF	_inputNumeroValue+1
;MonoBank.c,332 :: 		}
$06B6	$	L_inputNumero_51:
;MonoBank.c,335 :: 		}
$06B6	$2EB9			GOTO	L_inputNumero_52
$06B7	$	L_inputNumero_49:
;MonoBank.c,336 :: 		else inputNumeroValue=0;
$06B7	$01CD			CLRF	_inputNumeroValue
$06B8	$01CE			CLRF	_inputNumeroValue+1
$06B9	$	L_inputNumero_52:
;MonoBank.c,339 :: 		}
$06B9	$	L_inputNumero_48:
;MonoBank.c,343 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,rigavuota));
$06B9	$30AC			MOVLW	_msg
$06BA	$00E5			MOVWF	FARG_CopyConst2Ram+0
$06BB	$1283			BCF	STATUS, RP0
$06BC	$086E			MOVF	_rigavuota, 0
$06BD	$1683			BSF	STATUS, RP0
$06BE	$00E6			MOVWF	FARG_CopyConst2Ram+1
$06BF	$1283			BCF	STATUS, RP0
$06C0	$086F			MOVF	_rigavuota+1, 0
$06C1	$1683			BSF	STATUS, RP0
$06C2	$00E7			MOVWF	FARG_CopyConst2Ram+2
$06C3	$158A			BSF	PCLATH, 3
$06C4	$24D9			CALL	_CopyConst2Ram
$06C5	$118A			BCF	PCLATH, 3
$06C6	$0870			MOVF	STACK_0, 0
$06C7	$00E7			MOVWF	FARG_LCD_Out+2
$06C8	$3002			MOVLW	2
$06C9	$00E5			MOVWF	FARG_LCD_Out+0
$06CA	$3001			MOVLW	1
$06CB	$00E6			MOVWF	FARG_LCD_Out+1
$06CC	$158A			BSF	PCLATH, 3
$06CD	$2333			CALL	_LCD_Out
$06CE	$118A			BCF	PCLATH, 3
;MonoBank.c,344 :: 		Lcd_Cmd( LCD_CURSOR_OFF);
$06CF	$300C			MOVLW	12
$06D0	$1703			BSF	STATUS, RP1
$06D1	$0094			MOVWF	FARG_Lcd_Cmd+0
$06D2	$158A			BSF	PCLATH, 3
$06D3	$22ED			CALL	_Lcd_Cmd
$06D4	$118A			BCF	PCLATH, 3
;MonoBank.c,346 :: 		}
$06D5	$0008			RETURN
$0004	$	_movimentaCarta:
;MonoBank.c,420 :: 		void movimentaCarta(unsigned short idCarta, unsigned short PoM) {
;MonoBank.c,424 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,rigavuota));
$0004	$30AC			MOVLW	_msg
$0005	$1303			BCF	STATUS, RP1
$0006	$1683			BSF	STATUS, RP0
$0007	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0008	$1283			BCF	STATUS, RP0
$0009	$086E			MOVF	_rigavuota, 0
$000A	$1683			BSF	STATUS, RP0
$000B	$00E6			MOVWF	FARG_CopyConst2Ram+1
$000C	$1283			BCF	STATUS, RP0
$000D	$086F			MOVF	_rigavuota+1, 0
$000E	$1683			BSF	STATUS, RP0
$000F	$00E7			MOVWF	FARG_CopyConst2Ram+2
$0010	$158A			BSF	PCLATH, 3
$0011	$24D9			CALL	_CopyConst2Ram
$0012	$118A			BCF	PCLATH, 3
$0013	$0870			MOVF	STACK_0, 0
$0014	$00E7			MOVWF	FARG_LCD_Out+2
$0015	$3002			MOVLW	2
$0016	$00E5			MOVWF	FARG_LCD_Out+0
$0017	$3001			MOVLW	1
$0018	$00E6			MOVWF	FARG_LCD_Out+1
$0019	$158A			BSF	PCLATH, 3
$001A	$2333			CALL	_LCD_Out
$001B	$118A			BCF	PCLATH, 3
;MonoBank.c,426 :: 		if (PoM==1) {
$001C	$1683			BSF	STATUS, RP0
$001D	$0856			MOVF	FARG_movimentaCarta+1, 0
$001E	$3A01			XORLW	1
$001F	$1D03			BTFSS	STATUS, Z
$0020	$282E			GOTO	L_movimentaCarta_60
;MonoBank.c,427 :: 		Lcd_Chr(1,1,'+') ;
$0021	$3001			MOVLW	1
$0022	$00E5			MOVWF	FARG_Lcd_Chr+0
$0023	$3001			MOVLW	1
$0024	$00E6			MOVWF	FARG_Lcd_Chr+1
$0025	$302B			MOVLW	43
$0026	$00E7			MOVWF	FARG_Lcd_Chr+2
$0027	$158A			BSF	PCLATH, 3
$0028	$2409			CALL	_Lcd_Chr
$0029	$118A			BCF	PCLATH, 3
;MonoBank.c,428 :: 		idm=7;
$002A	$3007			MOVLW	7
$002B	$1683			BSF	STATUS, RP0
$002C	$00D7			MOVWF	movimentaCarta_idm_L0
;MonoBank.c,429 :: 		}
$002D	$2839			GOTO	L_movimentaCarta_61
$002E	$	L_movimentaCarta_60:
;MonoBank.c,431 :: 		idm=6;
$002E	$3006			MOVLW	6
$002F	$00D7			MOVWF	movimentaCarta_idm_L0
;MonoBank.c,432 :: 		Lcd_Chr(1,16,'-');
$0030	$3001			MOVLW	1
$0031	$00E5			MOVWF	FARG_Lcd_Chr+0
$0032	$3010			MOVLW	16
$0033	$00E6			MOVWF	FARG_Lcd_Chr+1
$0034	$302D			MOVLW	45
$0035	$00E7			MOVWF	FARG_Lcd_Chr+2
$0036	$158A			BSF	PCLATH, 3
$0037	$2409			CALL	_Lcd_Chr
$0038	$118A			BCF	PCLATH, 3
;MonoBank.c,433 :: 		};
$0039	$	L_movimentaCarta_61:
;MonoBank.c,434 :: 		tmpCardImporto=caricaImporto(idCarta);
$0039	$1683			BSF	STATUS, RP0
$003A	$0855			MOVF	FARG_movimentaCarta+0, 0
$003B	$00E5			MOVWF	FARG_caricaImporto+0
$003C	$158A			BSF	PCLATH, 3
$003D	$256B			CALL	_caricaImporto
$003E	$118A			BCF	PCLATH, 3
$003F	$0870			MOVF	STACK_0, 0
$0040	$00CF			MOVWF	_tmpCardImporto
$0041	$0871			MOVF	STACK_0+1, 0
$0042	$00D0			MOVWF	_tmpCardImporto+1
;MonoBank.c,439 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,msgs[5]));
$0043	$30AC			MOVLW	_msg
$0044	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0045	$0845			MOVF	_msgs+10, 0
$0046	$00E6			MOVWF	FARG_CopyConst2Ram+1
$0047	$0846			MOVF	_msgs+11, 0
$0048	$00E7			MOVWF	FARG_CopyConst2Ram+2
$0049	$158A			BSF	PCLATH, 3
$004A	$24D9			CALL	_CopyConst2Ram
$004B	$118A			BCF	PCLATH, 3
$004C	$0870			MOVF	STACK_0, 0
$004D	$00E7			MOVWF	FARG_LCD_Out+2
$004E	$3002			MOVLW	2
$004F	$00E5			MOVWF	FARG_LCD_Out+0
$0050	$3001			MOVLW	1
$0051	$00E6			MOVWF	FARG_LCD_Out+1
$0052	$158A			BSF	PCLATH, 3
$0053	$2333			CALL	_LCD_Out
$0054	$118A			BCF	PCLATH, 3
;MonoBank.c,440 :: 		IntToStr(tmpCardImporto, msg);
$0055	$1683			BSF	STATUS, RP0
$0056	$084F			MOVF	_tmpCardImporto, 0
$0057	$00E5			MOVWF	FARG_IntToStr+0
$0058	$0850			MOVF	_tmpCardImporto+1, 0
$0059	$00E6			MOVWF	FARG_IntToStr+1
$005A	$30AC			MOVLW	_msg
$005B	$00E7			MOVWF	FARG_IntToStr+2
$005C	$158A			BSF	PCLATH, 3
$005D	$2250			CALL	_IntToStr
$005E	$118A			BCF	PCLATH, 3
;MonoBank.c,441 :: 		msgAddZeros();
$005F	$158A			BSF	PCLATH, 3
$0060	$2669			CALL	_msgAddZeros
$0061	$118A			BCF	PCLATH, 3
;MonoBank.c,442 :: 		Lcd_Out(2, 9, msg);
$0062	$3002			MOVLW	2
$0063	$00E5			MOVWF	FARG_LCD_Out+0
$0064	$3009			MOVLW	9
$0065	$00E6			MOVWF	FARG_LCD_Out+1
$0066	$30AC			MOVLW	_msg
$0067	$00E7			MOVWF	FARG_LCD_Out+2
$0068	$158A			BSF	PCLATH, 3
$0069	$2333			CALL	_LCD_Out
$006A	$118A			BCF	PCLATH, 3
;MonoBank.c,443 :: 		delayMaster ;
$006B	$3002			MOVLW	2
$006C	$00FC			MOVWF	STACK_12
$006D	$30FF			MOVLW	255
$006E	$00FB			MOVWF	STACK_11
$006F	$30FF			MOVLW	255
$0070	$00FA			MOVWF	STACK_10
$0071	$0BFC			DECFSZ	STACK_12, F
$0072	$2874			GOTO	$+2
$0073	$287B			GOTO	$+8
$0074	$0BFB			DECFSZ	STACK_11, F
$0075	$2877			GOTO	$+2
$0076	$287A			GOTO	$+4
$0077	$0BFA			DECFSZ	STACK_10, F
$0078	$2877			GOTO	$-1
$0079	$2874			GOTO	$-5
$007A	$2871			GOTO	$-9
$007B	$3046			MOVLW	70
$007C	$00FB			MOVWF	STACK_11
$007D	$30FF			MOVLW	255
$007E	$00FA			MOVWF	STACK_10
$007F	$0BFB			DECFSZ	STACK_11, F
$0080	$2882			GOTO	$+2
$0081	$2885			GOTO	$+4
$0082	$0BFA			DECFSZ	STACK_10, F
$0083	$2882			GOTO	$-1
$0084	$287F			GOTO	$-5
$0085	$30CF			MOVLW	207
$0086	$00FA			MOVWF	STACK_10
$0087	$0BFA			DECFSZ	STACK_10, F
$0088	$2887			GOTO	$-1
$0089	$0000			NOP
;MonoBank.c,444 :: 		delayMaster ;
$008A	$3002			MOVLW	2
$008B	$00FC			MOVWF	STACK_12
$008C	$30FF			MOVLW	255
$008D	$00FB			MOVWF	STACK_11
$008E	$30FF			MOVLW	255
$008F	$00FA			MOVWF	STACK_10
$0090	$0BFC			DECFSZ	STACK_12, F
$0091	$2893			GOTO	$+2
$0092	$289A			GOTO	$+8
$0093	$0BFB			DECFSZ	STACK_11, F
$0094	$2896			GOTO	$+2
$0095	$2899			GOTO	$+4
$0096	$0BFA			DECFSZ	STACK_10, F
$0097	$2896			GOTO	$-1
$0098	$2893			GOTO	$-5
$0099	$2890			GOTO	$-9
$009A	$3046			MOVLW	70
$009B	$00FB			MOVWF	STACK_11
$009C	$30FF			MOVLW	255
$009D	$00FA			MOVWF	STACK_10
$009E	$0BFB			DECFSZ	STACK_11, F
$009F	$28A1			GOTO	$+2
$00A0	$28A4			GOTO	$+4
$00A1	$0BFA			DECFSZ	STACK_10, F
$00A2	$28A1			GOTO	$-1
$00A3	$289E			GOTO	$-5
$00A4	$30CF			MOVLW	207
$00A5	$00FA			MOVWF	STACK_10
$00A6	$0BFA			DECFSZ	STACK_10, F
$00A7	$28A6			GOTO	$-1
$00A8	$0000			NOP
;MonoBank.c,445 :: 		delayMaster ;
$00A9	$3002			MOVLW	2
$00AA	$00FC			MOVWF	STACK_12
$00AB	$30FF			MOVLW	255
$00AC	$00FB			MOVWF	STACK_11
$00AD	$30FF			MOVLW	255
$00AE	$00FA			MOVWF	STACK_10
$00AF	$0BFC			DECFSZ	STACK_12, F
$00B0	$28B2			GOTO	$+2
$00B1	$28B9			GOTO	$+8
$00B2	$0BFB			DECFSZ	STACK_11, F
$00B3	$28B5			GOTO	$+2
$00B4	$28B8			GOTO	$+4
$00B5	$0BFA			DECFSZ	STACK_10, F
$00B6	$28B5			GOTO	$-1
$00B7	$28B2			GOTO	$-5
$00B8	$28AF			GOTO	$-9
$00B9	$3046			MOVLW	70
$00BA	$00FB			MOVWF	STACK_11
$00BB	$30FF			MOVLW	255
$00BC	$00FA			MOVWF	STACK_10
$00BD	$0BFB			DECFSZ	STACK_11, F
$00BE	$28C0			GOTO	$+2
$00BF	$28C3			GOTO	$+4
$00C0	$0BFA			DECFSZ	STACK_10, F
$00C1	$28C0			GOTO	$-1
$00C2	$28BD			GOTO	$-5
$00C3	$30CF			MOVLW	207
$00C4	$00FA			MOVWF	STACK_10
$00C5	$0BFA			DECFSZ	STACK_10, F
$00C6	$28C5			GOTO	$-1
$00C7	$0000			NOP
;MonoBank.c,447 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,rigavuota));
$00C8	$30AC			MOVLW	_msg
$00C9	$1683			BSF	STATUS, RP0
$00CA	$00E5			MOVWF	FARG_CopyConst2Ram+0
$00CB	$1283			BCF	STATUS, RP0
$00CC	$086E			MOVF	_rigavuota, 0
$00CD	$1683			BSF	STATUS, RP0
$00CE	$00E6			MOVWF	FARG_CopyConst2Ram+1
$00CF	$1283			BCF	STATUS, RP0
$00D0	$086F			MOVF	_rigavuota+1, 0
$00D1	$1683			BSF	STATUS, RP0
$00D2	$00E7			MOVWF	FARG_CopyConst2Ram+2
$00D3	$158A			BSF	PCLATH, 3
$00D4	$24D9			CALL	_CopyConst2Ram
$00D5	$118A			BCF	PCLATH, 3
$00D6	$0870			MOVF	STACK_0, 0
$00D7	$00E7			MOVWF	FARG_LCD_Out+2
$00D8	$3002			MOVLW	2
$00D9	$00E5			MOVWF	FARG_LCD_Out+0
$00DA	$3001			MOVLW	1
$00DB	$00E6			MOVWF	FARG_LCD_Out+1
$00DC	$158A			BSF	PCLATH, 3
$00DD	$2333			CALL	_LCD_Out
$00DE	$118A			BCF	PCLATH, 3
;MonoBank.c,448 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,msgs[idm]));
$00DF	$30AC			MOVLW	_msg
$00E0	$1683			BSF	STATUS, RP0
$00E1	$00E5			MOVWF	FARG_CopyConst2Ram+0
$00E2	$3001			MOVLW	1
$00E3	$00F4			MOVWF	STACK_4
$00E4	$0857			MOVF	movimentaCarta_idm_L0, 0
$00E5	$00F0			MOVWF	STACK_0
$00E6	$0874			MOVF	STACK_4, 0
$00E7	$	L_movimentaCarta_105:
$00E7	$1903			BTFSC	STATUS, Z
$00E8	$28ED			GOTO	L_movimentaCarta_106
$00E9	$0DF0			RLF	STACK_0, 1
$00EA	$1070			BCF	STACK_0, 0
$00EB	$3FFF			ADDLW	255
$00EC	$28E7			GOTO	L_movimentaCarta_105
$00ED	$	L_movimentaCarta_106:
$00ED	$0870			MOVF	STACK_0, 0
$00EE	$3FBB			ADDLW	_msgs
$00EF	$0084			MOVWF	FSR
$00F0	$0800			MOVF	INDF, 0
$00F1	$00E6			MOVWF	FARG_CopyConst2Ram+1
$00F2	$0A84			INCF	FSR, 1
$00F3	$0800			MOVF	INDF, 0
$00F4	$00E7			MOVWF	FARG_CopyConst2Ram+2
$00F5	$158A			BSF	PCLATH, 3
$00F6	$24D9			CALL	_CopyConst2Ram
$00F7	$118A			BCF	PCLATH, 3
$00F8	$0870			MOVF	STACK_0, 0
$00F9	$00E7			MOVWF	FARG_LCD_Out+2
$00FA	$3002			MOVLW	2
$00FB	$00E5			MOVWF	FARG_LCD_Out+0
$00FC	$3001			MOVLW	1
$00FD	$00E6			MOVWF	FARG_LCD_Out+1
$00FE	$158A			BSF	PCLATH, 3
$00FF	$2333			CALL	_LCD_Out
$0100	$118A			BCF	PCLATH, 3
;MonoBank.c,449 :: 		IntToStr(inputNumeroValue, msg);
$0101	$1683			BSF	STATUS, RP0
$0102	$084D			MOVF	_inputNumeroValue, 0
$0103	$00E5			MOVWF	FARG_IntToStr+0
$0104	$084E			MOVF	_inputNumeroValue+1, 0
$0105	$00E6			MOVWF	FARG_IntToStr+1
$0106	$30AC			MOVLW	_msg
$0107	$00E7			MOVWF	FARG_IntToStr+2
$0108	$158A			BSF	PCLATH, 3
$0109	$2250			CALL	_IntToStr
$010A	$118A			BCF	PCLATH, 3
;MonoBank.c,450 :: 		msgAddZeros();
$010B	$158A			BSF	PCLATH, 3
$010C	$2669			CALL	_msgAddZeros
$010D	$118A			BCF	PCLATH, 3
;MonoBank.c,451 :: 		Lcd_Out(2, 9, msg);
$010E	$3002			MOVLW	2
$010F	$00E5			MOVWF	FARG_LCD_Out+0
$0110	$3009			MOVLW	9
$0111	$00E6			MOVWF	FARG_LCD_Out+1
$0112	$30AC			MOVLW	_msg
$0113	$00E7			MOVWF	FARG_LCD_Out+2
$0114	$158A			BSF	PCLATH, 3
$0115	$2333			CALL	_LCD_Out
$0116	$118A			BCF	PCLATH, 3
;MonoBank.c,452 :: 		delayMaster ;
$0117	$3002			MOVLW	2
$0118	$00FC			MOVWF	STACK_12
$0119	$30FF			MOVLW	255
$011A	$00FB			MOVWF	STACK_11
$011B	$30FF			MOVLW	255
$011C	$00FA			MOVWF	STACK_10
$011D	$0BFC			DECFSZ	STACK_12, F
$011E	$2920			GOTO	$+2
$011F	$2927			GOTO	$+8
$0120	$0BFB			DECFSZ	STACK_11, F
$0121	$2923			GOTO	$+2
$0122	$2926			GOTO	$+4
$0123	$0BFA			DECFSZ	STACK_10, F
$0124	$2923			GOTO	$-1
$0125	$2920			GOTO	$-5
$0126	$291D			GOTO	$-9
$0127	$3046			MOVLW	70
$0128	$00FB			MOVWF	STACK_11
$0129	$30FF			MOVLW	255
$012A	$00FA			MOVWF	STACK_10
$012B	$0BFB			DECFSZ	STACK_11, F
$012C	$292E			GOTO	$+2
$012D	$2931			GOTO	$+4
$012E	$0BFA			DECFSZ	STACK_10, F
$012F	$292E			GOTO	$-1
$0130	$292B			GOTO	$-5
$0131	$30CF			MOVLW	207
$0132	$00FA			MOVWF	STACK_10
$0133	$0BFA			DECFSZ	STACK_10, F
$0134	$2933			GOTO	$-1
$0135	$0000			NOP
;MonoBank.c,453 :: 		delayMaster ;
$0136	$3002			MOVLW	2
$0137	$00FC			MOVWF	STACK_12
$0138	$30FF			MOVLW	255
$0139	$00FB			MOVWF	STACK_11
$013A	$30FF			MOVLW	255
$013B	$00FA			MOVWF	STACK_10
$013C	$0BFC			DECFSZ	STACK_12, F
$013D	$293F			GOTO	$+2
$013E	$2946			GOTO	$+8
$013F	$0BFB			DECFSZ	STACK_11, F
$0140	$2942			GOTO	$+2
$0141	$2945			GOTO	$+4
$0142	$0BFA			DECFSZ	STACK_10, F
$0143	$2942			GOTO	$-1
$0144	$293F			GOTO	$-5
$0145	$293C			GOTO	$-9
$0146	$3046			MOVLW	70
$0147	$00FB			MOVWF	STACK_11
$0148	$30FF			MOVLW	255
$0149	$00FA			MOVWF	STACK_10
$014A	$0BFB			DECFSZ	STACK_11, F
$014B	$294D			GOTO	$+2
$014C	$2950			GOTO	$+4
$014D	$0BFA			DECFSZ	STACK_10, F
$014E	$294D			GOTO	$-1
$014F	$294A			GOTO	$-5
$0150	$30CF			MOVLW	207
$0151	$00FA			MOVWF	STACK_10
$0152	$0BFA			DECFSZ	STACK_10, F
$0153	$2952			GOTO	$-1
$0154	$0000			NOP
;MonoBank.c,454 :: 		delayMaster ;
$0155	$3002			MOVLW	2
$0156	$00FC			MOVWF	STACK_12
$0157	$30FF			MOVLW	255
$0158	$00FB			MOVWF	STACK_11
$0159	$30FF			MOVLW	255
$015A	$00FA			MOVWF	STACK_10
$015B	$0BFC			DECFSZ	STACK_12, F
$015C	$295E			GOTO	$+2
$015D	$2965			GOTO	$+8
$015E	$0BFB			DECFSZ	STACK_11, F
$015F	$2961			GOTO	$+2
$0160	$2964			GOTO	$+4
$0161	$0BFA			DECFSZ	STACK_10, F
$0162	$2961			GOTO	$-1
$0163	$295E			GOTO	$-5
$0164	$295B			GOTO	$-9
$0165	$3046			MOVLW	70
$0166	$00FB			MOVWF	STACK_11
$0167	$30FF			MOVLW	255
$0168	$00FA			MOVWF	STACK_10
$0169	$0BFB			DECFSZ	STACK_11, F
$016A	$296C			GOTO	$+2
$016B	$296F			GOTO	$+4
$016C	$0BFA			DECFSZ	STACK_10, F
$016D	$296C			GOTO	$-1
$016E	$2969			GOTO	$-5
$016F	$30CF			MOVLW	207
$0170	$00FA			MOVWF	STACK_10
$0171	$0BFA			DECFSZ	STACK_10, F
$0172	$2971			GOTO	$-1
$0173	$0000			NOP
;MonoBank.c,456 :: 		if (PoM==1) {
$0174	$1683			BSF	STATUS, RP0
$0175	$0856			MOVF	FARG_movimentaCarta+1, 0
$0176	$3A01			XORLW	1
$0177	$1D03			BTFSS	STATUS, Z
$0178	$2980			GOTO	L_movimentaCarta_62
;MonoBank.c,457 :: 		tmpCardImporto=tmpCardImporto+inputNumeroValue;
$0179	$084D			MOVF	_inputNumeroValue, 0
$017A	$07CF			ADDWF	_tmpCardImporto, 1
$017B	$084E			MOVF	_inputNumeroValue+1, 0
$017C	$1803			BTFSC	STATUS, C
$017D	$3F01			ADDLW	1
$017E	$07D0			ADDWF	_tmpCardImporto+1, 1
;MonoBank.c,459 :: 		}
$017F	$2991			GOTO	L_movimentaCarta_63
$0180	$	L_movimentaCarta_62:
;MonoBank.c,461 :: 		if (inputNumeroValue> tmpCardImporto) tmpCardImporto=0;
$0180	$084E			MOVF	_inputNumeroValue+1, 0
$0181	$0250			SUBWF	_tmpCardImporto+1, 0
$0182	$1D03			BTFSS	STATUS, Z
$0183	$2986			GOTO	L_movimentaCarta_107
$0184	$084D			MOVF	_inputNumeroValue, 0
$0185	$024F			SUBWF	_tmpCardImporto, 0
$0186	$	L_movimentaCarta_107:
$0186	$1803			BTFSC	STATUS, C
$0187	$298B			GOTO	L_movimentaCarta_64
$0188	$01CF			CLRF	_tmpCardImporto
$0189	$01D0			CLRF	_tmpCardImporto+1
$018A	$2991			GOTO	L_movimentaCarta_65
$018B	$	L_movimentaCarta_64:
;MonoBank.c,462 :: 		else  tmpCardImporto=tmpCardImporto-inputNumeroValue;
$018B	$084D			MOVF	_inputNumeroValue, 0
$018C	$02CF			SUBWF	_tmpCardImporto, 1
$018D	$1C03			BTFSS	STATUS, C
$018E	$03D0			DECF	_tmpCardImporto+1, 1
$018F	$084E			MOVF	_inputNumeroValue+1, 0
$0190	$02D0			SUBWF	_tmpCardImporto+1, 1
$0191	$	L_movimentaCarta_65:
;MonoBank.c,463 :: 		}
$0191	$	L_movimentaCarta_63:
;MonoBank.c,465 :: 		salvaImporto(idCarta, tmpCardImporto);
$0191	$0855			MOVF	FARG_movimentaCarta+0, 0
$0192	$00E5			MOVWF	FARG_salvaImporto+0
$0193	$084F			MOVF	_tmpCardImporto, 0
$0194	$00E6			MOVWF	FARG_salvaImporto+1
$0195	$0850			MOVF	_tmpCardImporto+1, 0
$0196	$00E7			MOVWF	FARG_salvaImporto+2
$0197	$158A			BSF	PCLATH, 3
$0198	$25A7			CALL	_salvaImporto
$0199	$118A			BCF	PCLATH, 3
;MonoBank.c,467 :: 		for (  i = 7; i >0; i-- ) {
$019A	$3007			MOVLW	7
$019B	$1303			BCF	STATUS, RP1
$019C	$00D1			MOVWF	_i
$019D	$	L_movimentaCarta_66:
$019D	$0851			MOVF	_i, 0
$019E	$3C00			SUBLW	0
$019F	$1803			BTFSC	STATUS, C
$01A0	$29D0			GOTO	L_movimentaCarta_67
;MonoBank.c,468 :: 		Lcd_Chr(2,9+i,'-');
$01A1	$3002			MOVLW	2
$01A2	$00E5			MOVWF	FARG_Lcd_Chr+0
$01A3	$0851			MOVF	_i, 0
$01A4	$3F09			ADDLW	9
$01A5	$00E6			MOVWF	FARG_Lcd_Chr+1
$01A6	$302D			MOVLW	45
$01A7	$00E7			MOVWF	FARG_Lcd_Chr+2
$01A8	$158A			BSF	PCLATH, 3
$01A9	$2409			CALL	_Lcd_Chr
$01AA	$118A			BCF	PCLATH, 3
;MonoBank.c,469 :: 		teletype
$01AB	$1785			BSF	PORTA, 7
$01AC	$3012			MOVLW	18
$01AD	$00FB			MOVWF	STACK_11
$01AE	$30FF			MOVLW	255
$01AF	$00FA			MOVWF	STACK_10
$01B0	$0BFB			DECFSZ	STACK_11, F
$01B1	$29B3			GOTO	$+2
$01B2	$29B6			GOTO	$+4
$01B3	$0BFA			DECFSZ	STACK_10, F
$01B4	$29B3			GOTO	$-1
$01B5	$29B0			GOTO	$-5
$01B6	$30CE			MOVLW	206
$01B7	$00FA			MOVWF	STACK_10
$01B8	$0BFA			DECFSZ	STACK_10, F
$01B9	$29B8			GOTO	$-1
$01BA	$0000			NOP
$01BB	$0000			NOP
$01BC	$1385			BCF	PORTA, 7
;MonoBank.c,470 :: 		Delay_ms(55);
$01BD	$3012			MOVLW	18
$01BE	$00FB			MOVWF	STACK_11
$01BF	$30FF			MOVLW	255
$01C0	$00FA			MOVWF	STACK_10
$01C1	$0BFB			DECFSZ	STACK_11, F
$01C2	$29C4			GOTO	$+2
$01C3	$29C7			GOTO	$+4
$01C4	$0BFA			DECFSZ	STACK_10, F
$01C5	$29C4			GOTO	$-1
$01C6	$29C1			GOTO	$-5
$01C7	$30CE			MOVLW	206
$01C8	$00FA			MOVWF	STACK_10
$01C9	$0BFA			DECFSZ	STACK_10, F
$01CA	$29C9			GOTO	$-1
$01CB	$0000			NOP
$01CC	$0000			NOP
;MonoBank.c,471 :: 		}
$01CD	$	L_movimentaCarta_68:
;MonoBank.c,467 :: 		for (  i = 7; i >0; i-- ) {
$01CD	$1683			BSF	STATUS, RP0
$01CE	$03D1			DECF	_i, 1
;MonoBank.c,471 :: 		}
$01CF	$299D			GOTO	L_movimentaCarta_66
$01D0	$	L_movimentaCarta_67:
;MonoBank.c,473 :: 		mostraSaldo
$01D0	$30AC			MOVLW	_msg
$01D1	$00E5			MOVWF	FARG_CopyConst2Ram+0
$01D2	$1283			BCF	STATUS, RP0
$01D3	$086E			MOVF	_rigavuota, 0
$01D4	$1683			BSF	STATUS, RP0
$01D5	$00E6			MOVWF	FARG_CopyConst2Ram+1
$01D6	$1283			BCF	STATUS, RP0
$01D7	$086F			MOVF	_rigavuota+1, 0
$01D8	$1683			BSF	STATUS, RP0
$01D9	$00E7			MOVWF	FARG_CopyConst2Ram+2
$01DA	$158A			BSF	PCLATH, 3
$01DB	$24D9			CALL	_CopyConst2Ram
$01DC	$118A			BCF	PCLATH, 3
$01DD	$0870			MOVF	STACK_0, 0
$01DE	$00E7			MOVWF	FARG_LCD_Out+2
$01DF	$3002			MOVLW	2
$01E0	$00E5			MOVWF	FARG_LCD_Out+0
$01E1	$3001			MOVLW	1
$01E2	$00E6			MOVWF	FARG_LCD_Out+1
$01E3	$158A			BSF	PCLATH, 3
$01E4	$2333			CALL	_LCD_Out
$01E5	$118A			BCF	PCLATH, 3
$01E6	$30AC			MOVLW	_msg
$01E7	$1683			BSF	STATUS, RP0
$01E8	$00E5			MOVWF	FARG_CopyConst2Ram+0
$01E9	$0843			MOVF	_msgs+8, 0
$01EA	$00E6			MOVWF	FARG_CopyConst2Ram+1
$01EB	$0844			MOVF	_msgs+9, 0
$01EC	$00E7			MOVWF	FARG_CopyConst2Ram+2
$01ED	$158A			BSF	PCLATH, 3
$01EE	$24D9			CALL	_CopyConst2Ram
$01EF	$118A			BCF	PCLATH, 3
$01F0	$0870			MOVF	STACK_0, 0
$01F1	$00E7			MOVWF	FARG_LCD_Out+2
$01F2	$3002			MOVLW	2
$01F3	$00E5			MOVWF	FARG_LCD_Out+0
$01F4	$3001			MOVLW	1
$01F5	$00E6			MOVWF	FARG_LCD_Out+1
$01F6	$158A			BSF	PCLATH, 3
$01F7	$2333			CALL	_LCD_Out
$01F8	$118A			BCF	PCLATH, 3
$01F9	$1683			BSF	STATUS, RP0
$01FA	$084F			MOVF	_tmpCardImporto, 0
$01FB	$00E5			MOVWF	FARG_IntToStr+0
$01FC	$0850			MOVF	_tmpCardImporto+1, 0
$01FD	$00E6			MOVWF	FARG_IntToStr+1
$01FE	$30AC			MOVLW	_msg
$01FF	$00E7			MOVWF	FARG_IntToStr+2
$0200	$158A			BSF	PCLATH, 3
$0201	$2250			CALL	_IntToStr
$0202	$118A			BCF	PCLATH, 3
$0203	$158A			BSF	PCLATH, 3
$0204	$2669			CALL	_msgAddZeros
$0205	$118A			BCF	PCLATH, 3
$0206	$3007			MOVLW	7
$0207	$00D1			MOVWF	_i
$0208	$	L_movimentaCarta_69:
$0208	$0851			MOVF	_i, 0
$0209	$3C00			SUBLW	0
$020A	$1803			BTFSC	STATUS, C
$020B	$2A3E			GOTO	L_movimentaCarta_70
$020C	$3002			MOVLW	2
$020D	$00E5			MOVWF	FARG_Lcd_Chr+0
$020E	$0851			MOVF	_i, 0
$020F	$3F09			ADDLW	9
$0210	$00E6			MOVWF	FARG_Lcd_Chr+1
$0211	$0851			MOVF	_i, 0
$0212	$3FAC			ADDLW	_msg
$0213	$0084			MOVWF	FSR
$0214	$0800			MOVF	INDF, 0
$0215	$00E7			MOVWF	FARG_Lcd_Chr+2
$0216	$158A			BSF	PCLATH, 3
$0217	$2409			CALL	_Lcd_Chr
$0218	$118A			BCF	PCLATH, 3
$0219	$3012			MOVLW	18
$021A	$00FB			MOVWF	STACK_11
$021B	$30FF			MOVLW	255
$021C	$00FA			MOVWF	STACK_10
$021D	$0BFB			DECFSZ	STACK_11, F
$021E	$2A20			GOTO	$+2
$021F	$2A23			GOTO	$+4
$0220	$0BFA			DECFSZ	STACK_10, F
$0221	$2A20			GOTO	$-1
$0222	$2A1D			GOTO	$-5
$0223	$30CE			MOVLW	206
$0224	$00FA			MOVWF	STACK_10
$0225	$0BFA			DECFSZ	STACK_10, F
$0226	$2A25			GOTO	$-1
$0227	$0000			NOP
$0228	$0000			NOP
$0229	$1785			BSF	PORTA, 7
$022A	$3012			MOVLW	18
$022B	$00FB			MOVWF	STACK_11
$022C	$30FF			MOVLW	255
$022D	$00FA			MOVWF	STACK_10
$022E	$0BFB			DECFSZ	STACK_11, F
$022F	$2A31			GOTO	$+2
$0230	$2A34			GOTO	$+4
$0231	$0BFA			DECFSZ	STACK_10, F
$0232	$2A31			GOTO	$-1
$0233	$2A2E			GOTO	$-5
$0234	$30CE			MOVLW	206
$0235	$00FA			MOVWF	STACK_10
$0236	$0BFA			DECFSZ	STACK_10, F
$0237	$2A36			GOTO	$-1
$0238	$0000			NOP
$0239	$0000			NOP
$023A	$1385			BCF	PORTA, 7
$023B	$	L_movimentaCarta_71:
$023B	$1683			BSF	STATUS, RP0
$023C	$03D1			DECF	_i, 1
$023D	$2A08			GOTO	L_movimentaCarta_69
$023E	$	L_movimentaCarta_70:
$023E	$3002			MOVLW	2
$023F	$00FC			MOVWF	STACK_12
$0240	$30FF			MOVLW	255
$0241	$00FB			MOVWF	STACK_11
$0242	$30FF			MOVLW	255
$0243	$00FA			MOVWF	STACK_10
$0244	$0BFC			DECFSZ	STACK_12, F
$0245	$2A47			GOTO	$+2
$0246	$2A4E			GOTO	$+8
$0247	$0BFB			DECFSZ	STACK_11, F
$0248	$2A4A			GOTO	$+2
$0249	$2A4D			GOTO	$+4
$024A	$0BFA			DECFSZ	STACK_10, F
$024B	$2A4A			GOTO	$-1
$024C	$2A47			GOTO	$-5
$024D	$2A44			GOTO	$-9
$024E	$3046			MOVLW	70
$024F	$00FB			MOVWF	STACK_11
$0250	$30FF			MOVLW	255
$0251	$00FA			MOVWF	STACK_10
$0252	$0BFB			DECFSZ	STACK_11, F
$0253	$2A55			GOTO	$+2
$0254	$2A58			GOTO	$+4
$0255	$0BFA			DECFSZ	STACK_10, F
$0256	$2A55			GOTO	$-1
$0257	$2A52			GOTO	$-5
$0258	$30CF			MOVLW	207
$0259	$00FA			MOVWF	STACK_10
$025A	$0BFA			DECFSZ	STACK_10, F
$025B	$2A5A			GOTO	$-1
$025C	$0000			NOP
$025D	$3002			MOVLW	2
$025E	$00FC			MOVWF	STACK_12
$025F	$30FF			MOVLW	255
$0260	$00FB			MOVWF	STACK_11
$0261	$30FF			MOVLW	255
$0262	$00FA			MOVWF	STACK_10
$0263	$0BFC			DECFSZ	STACK_12, F
$0264	$2A66			GOTO	$+2
$0265	$2A6D			GOTO	$+8
$0266	$0BFB			DECFSZ	STACK_11, F
$0267	$2A69			GOTO	$+2
$0268	$2A6C			GOTO	$+4
$0269	$0BFA			DECFSZ	STACK_10, F
$026A	$2A69			GOTO	$-1
$026B	$2A66			GOTO	$-5
$026C	$2A63			GOTO	$-9
$026D	$3046			MOVLW	70
$026E	$00FB			MOVWF	STACK_11
$026F	$30FF			MOVLW	255
$0270	$00FA			MOVWF	STACK_10
$0271	$0BFB			DECFSZ	STACK_11, F
$0272	$2A74			GOTO	$+2
$0273	$2A77			GOTO	$+4
$0274	$0BFA			DECFSZ	STACK_10, F
$0275	$2A74			GOTO	$-1
$0276	$2A71			GOTO	$-5
$0277	$30CF			MOVLW	207
$0278	$00FA			MOVWF	STACK_10
$0279	$0BFA			DECFSZ	STACK_10, F
$027A	$2A79			GOTO	$-1
$027B	$0000			NOP
$027C	$3002			MOVLW	2
$027D	$00FC			MOVWF	STACK_12
$027E	$30FF			MOVLW	255
$027F	$00FB			MOVWF	STACK_11
$0280	$30FF			MOVLW	255
$0281	$00FA			MOVWF	STACK_10
$0282	$0BFC			DECFSZ	STACK_12, F
$0283	$2A85			GOTO	$+2
$0284	$2A8C			GOTO	$+8
$0285	$0BFB			DECFSZ	STACK_11, F
$0286	$2A88			GOTO	$+2
$0287	$2A8B			GOTO	$+4
$0288	$0BFA			DECFSZ	STACK_10, F
$0289	$2A88			GOTO	$-1
$028A	$2A85			GOTO	$-5
$028B	$2A82			GOTO	$-9
$028C	$3046			MOVLW	70
$028D	$00FB			MOVWF	STACK_11
$028E	$30FF			MOVLW	255
$028F	$00FA			MOVWF	STACK_10
$0290	$0BFB			DECFSZ	STACK_11, F
$0291	$2A93			GOTO	$+2
$0292	$2A96			GOTO	$+4
$0293	$0BFA			DECFSZ	STACK_10, F
$0294	$2A93			GOTO	$-1
$0295	$2A90			GOTO	$-5
$0296	$30CF			MOVLW	207
$0297	$00FA			MOVWF	STACK_10
$0298	$0BFA			DECFSZ	STACK_10, F
$0299	$2A98			GOTO	$-1
$029A	$0000			NOP
$029B	$30AC			MOVLW	_msg
$029C	$00E5			MOVWF	FARG_CopyConst2Ram+0
$029D	$1283			BCF	STATUS, RP0
$029E	$086E			MOVF	_rigavuota, 0
$029F	$1683			BSF	STATUS, RP0
$02A0	$00E6			MOVWF	FARG_CopyConst2Ram+1
$02A1	$1283			BCF	STATUS, RP0
$02A2	$086F			MOVF	_rigavuota+1, 0
$02A3	$1683			BSF	STATUS, RP0
$02A4	$00E7			MOVWF	FARG_CopyConst2Ram+2
$02A5	$158A			BSF	PCLATH, 3
$02A6	$24D9			CALL	_CopyConst2Ram
$02A7	$118A			BCF	PCLATH, 3
$02A8	$0870			MOVF	STACK_0, 0
$02A9	$00E7			MOVWF	FARG_LCD_Out+2
$02AA	$3002			MOVLW	2
$02AB	$00E5			MOVWF	FARG_LCD_Out+0
$02AC	$3001			MOVLW	1
$02AD	$00E6			MOVWF	FARG_LCD_Out+1
$02AE	$158A			BSF	PCLATH, 3
$02AF	$2333			CALL	_LCD_Out
$02B0	$118A			BCF	PCLATH, 3
;MonoBank.c,491 :: 		}
$02B1	$0008			RETURN
$0800	$	GlobalIniMonoBank:
$0800	$3000			MOVLW	0
$0801	$1303			BCF	STATUS, RP1
$0802	$1683			BSF	STATUS, RP0
$0803	$00CF			MOVWF	_tmpCardImporto+0
$0804	$3000			MOVLW	0
$0805	$00D0			MOVWF	_tmpCardImporto+1
$0806	$3000			MOVLW	0
$0807	$00CD			MOVWF	_inputNumeroValue+0
$0808	$3000			MOVLW	0
$0809	$00CE			MOVWF	_inputNumeroValue+1
$080A	$307C			MOVLW	#lstr_1_MonoBank
$080B	$00D2			MOVWF	_spazio+0
$080C	$300E			MOVLW	@#lstr_1_MonoBank
$080D	$00D3			MOVWF	_spazio+1
$080E	$30B7			MOVLW	#lstr_2_MonoBank
$080F	$1283			BCF	STATUS, RP0
$0810	$00EE			MOVWF	_rigavuota+0
$0811	$300D			MOVLW	@#lstr_2_MonoBank
$0812	$00EF			MOVWF	_rigavuota+1
$0813	$3018			MOVLW	#lstr_3_MonoBank
$0814	$1683			BSF	STATUS, RP0
$0815	$00BB			MOVWF	_msgs+0
$0816	$300E			MOVLW	@#lstr_3_MonoBank
$0817	$00BC			MOVWF	_msgs+1
$0818	$30DB			MOVLW	#lstr_4_MonoBank
$0819	$00BD			MOVWF	_msgs+2
$081A	$300D			MOVLW	@#lstr_4_MonoBank
$081B	$00BE			MOVWF	_msgs+3
$081C	$30C9			MOVLW	#lstr_5_MonoBank
$081D	$00BF			MOVWF	_msgs+4
$081E	$300D			MOVLW	@#lstr_5_MonoBank
$081F	$00C0			MOVWF	_msgs+5
$0820	$3051			MOVLW	#lstr_6_MonoBank
$0821	$00C1			MOVWF	_msgs+6
$0822	$300E			MOVLW	@#lstr_6_MonoBank
$0823	$00C2			MOVWF	_msgs+7
$0824	$3061			MOVLW	#lstr_7_MonoBank
$0825	$00C3			MOVWF	_msgs+8
$0826	$300E			MOVLW	@#lstr_7_MonoBank
$0827	$00C4			MOVWF	_msgs+9
$0828	$3040			MOVLW	#lstr_8_MonoBank
$0829	$00C5			MOVWF	_msgs+10
$082A	$300E			MOVLW	@#lstr_8_MonoBank
$082B	$00C6			MOVWF	_msgs+11
$082C	$3049			MOVLW	#lstr_9_MonoBank
$082D	$00C7			MOVWF	_msgs+12
$082E	$300E			MOVLW	@#lstr_9_MonoBank
$082F	$00C8			MOVWF	_msgs+13
$0830	$3059			MOVLW	#lstr_10_MonoBank
$0831	$00C9			MOVWF	_msgs+14
$0832	$300E			MOVLW	@#lstr_10_MonoBank
$0833	$00CA			MOVWF	_msgs+15
$0834	$3095			MOVLW	149
$0835	$1283			BCF	STATUS, RP0
$0836	$00A5			MOVWF	_keyPadConst+0
$0837	$3000			MOVLW	0
$0838	$00A6			MOVWF	_keyPadConst+1
$0839	$3030			MOVLW	48
$083A	$00A7			MOVWF	_keyPadConst+2
$083B	$3000			MOVLW	0
$083C	$00A8			MOVWF	_keyPadConst+3
$083D	$302F			MOVLW	47
$083E	$00A9			MOVWF	_keyPadConst+4
$083F	$3002			MOVLW	2
$0840	$00AA			MOVWF	_keyPadConst+5
$0841	$3031			MOVLW	49
$0842	$00AB			MOVWF	_keyPadConst+6
$0843	$3000			MOVLW	0
$0844	$00AC			MOVWF	_keyPadConst+7
$0845	$301E			MOVLW	30
$0846	$00AD			MOVWF	_keyPadConst+8
$0847	$3002			MOVLW	2
$0848	$00AE			MOVWF	_keyPadConst+9
$0849	$3032			MOVLW	50
$084A	$00AF			MOVWF	_keyPadConst+10
$084B	$3000			MOVLW	0
$084C	$00B0			MOVWF	_keyPadConst+11
$084D	$300D			MOVLW	13
$084E	$00B1			MOVWF	_keyPadConst+12
$084F	$3002			MOVLW	2
$0850	$00B2			MOVWF	_keyPadConst+13
$0851	$3033			MOVLW	51
$0852	$00B3			MOVWF	_keyPadConst+14
$0853	$3000			MOVLW	0
$0854	$00B4			MOVWF	_keyPadConst+15
$0855	$30E0			MOVLW	224
$0856	$00B5			MOVWF	_keyPadConst+16
$0857	$3001			MOVLW	1
$0858	$00B6			MOVWF	_keyPadConst+17
$0859	$3034			MOVLW	52
$085A	$00B7			MOVWF	_keyPadConst+18
$085B	$3000			MOVLW	0
$085C	$00B8			MOVWF	_keyPadConst+19
$085D	$30C9			MOVLW	201
$085E	$00B9			MOVWF	_keyPadConst+20
$085F	$3001			MOVLW	1
$0860	$00BA			MOVWF	_keyPadConst+21
$0861	$3035			MOVLW	53
$0862	$00BB			MOVWF	_keyPadConst+22
$0863	$3000			MOVLW	0
$0864	$00BC			MOVWF	_keyPadConst+23
$0865	$30B1			MOVLW	177
$0866	$00BD			MOVWF	_keyPadConst+24
$0867	$3001			MOVLW	1
$0868	$00BE			MOVWF	_keyPadConst+25
$0869	$3036			MOVLW	54
$086A	$00BF			MOVWF	_keyPadConst+26
$086B	$3000			MOVLW	0
$086C	$00C0			MOVWF	_keyPadConst+27
$086D	$3072			MOVLW	114
$086E	$00C1			MOVWF	_keyPadConst+28
$086F	$3001			MOVLW	1
$0870	$00C2			MOVWF	_keyPadConst+29
$0871	$3037			MOVLW	55
$0872	$00C3			MOVWF	_keyPadConst+30
$0873	$3000			MOVLW	0
$0874	$00C4			MOVWF	_keyPadConst+31
$0875	$3050			MOVLW	80
$0876	$00C5			MOVWF	_keyPadConst+32
$0877	$3001			MOVLW	1
$0878	$00C6			MOVWF	_keyPadConst+33
$0879	$3038			MOVLW	56
$087A	$00C7			MOVWF	_keyPadConst+34
$087B	$3000			MOVLW	0
$087C	$00C8			MOVWF	_keyPadConst+35
$087D	$302C			MOVLW	44
$087E	$00C9			MOVWF	_keyPadConst+36
$087F	$3001			MOVLW	1
$0880	$00CA			MOVWF	_keyPadConst+37
$0881	$3039			MOVLW	57
$0882	$00CB			MOVWF	_keyPadConst+38
$0883	$3000			MOVLW	0
$0884	$00CC			MOVWF	_keyPadConst+39
$0885	$30C8			MOVLW	200
$0886	$00CD			MOVWF	_keyPadConst+40
$0887	$3000			MOVLW	0
$0888	$00CE			MOVWF	_keyPadConst+41
$0889	$302A			MOVLW	42
$088A	$00CF			MOVWF	_keyPadConst+42
$088B	$3000			MOVLW	0
$088C	$00D0			MOVWF	_keyPadConst+43
$088D	$3050			MOVLW	80
$088E	$00D1			MOVWF	_keyPadConst+44
$088F	$3000			MOVLW	0
$0890	$00D2			MOVWF	_keyPadConst+45
$0891	$3023			MOVLW	35
$0892	$00D3			MOVWF	_keyPadConst+46
$0893	$3000			MOVLW	0
$0894	$00D4			MOVWF	_keyPadConst+47
$0895	$30FC			MOVLW	252
$0896	$00D5			MOVWF	_keyPadConst+48
$0897	$3001			MOVLW	1
$0898	$00D6			MOVWF	_keyPadConst+49
$0899	$3041			MOVLW	65
$089A	$00D7			MOVWF	_keyPadConst+50
$089B	$3000			MOVLW	0
$089C	$00D8			MOVWF	_keyPadConst+51
$089D	$309A			MOVLW	154
$089E	$00D9			MOVWF	_keyPadConst+52
$089F	$3001			MOVLW	1
$08A0	$00DA			MOVWF	_keyPadConst+53
$08A1	$3042			MOVLW	66
$08A2	$00DB			MOVWF	_keyPadConst+54
$08A3	$3000			MOVLW	0
$08A4	$00DC			MOVWF	_keyPadConst+55
$08A5	$3008			MOVLW	8
$08A6	$00DD			MOVWF	_keyPadConst+56
$08A7	$3001			MOVLW	1
$08A8	$00DE			MOVWF	_keyPadConst+57
$08A9	$3043			MOVLW	67
$08AA	$00DF			MOVWF	_keyPadConst+58
$08AB	$3000			MOVLW	0
$08AC	$00E0			MOVWF	_keyPadConst+59
$08AD	$3018			MOVLW	24
$08AE	$00E1			MOVWF	_keyPadConst+60
$08AF	$3000			MOVLW	0
$08B0	$00E2			MOVWF	_keyPadConst+61
$08B1	$3044			MOVLW	68
$08B2	$00E3			MOVWF	_keyPadConst+62
$08B3	$3000			MOVLW	0
$08B4	$00E4			MOVWF	_keyPadConst+63
$08B5	$309E			MOVLW	158
$08B6	$00EC			MOVWF	_NOcardConst+0
$08B7	$3002			MOVLW	2
$08B8	$00ED			MOVWF	_NOcardConst+1
$08B9	$3026			MOVLW	38
$08BA	$1683			BSF	STATUS, RP0
$08BB	$00A0			MOVWF	_cardConst+0
$08BC	$3002			MOVLW	2
$08BD	$00A1			MOVWF	_cardConst+1
$08BE	$30C2			MOVLW	194
$08BF	$00A2			MOVWF	_cardConst+2
$08C0	$3001			MOVLW	1
$08C1	$00A3			MOVWF	_cardConst+3
$08C2	$304A			MOVLW	74
$08C3	$00A4			MOVWF	_cardConst+4
$08C4	$3001			MOVLW	1
$08C5	$00A5			MOVWF	_cardConst+5
$08C6	$30C8			MOVLW	200
$08C7	$00A6			MOVWF	_cardConst+6
$08C8	$3000			MOVLW	0
$08C9	$00A7			MOVWF	_cardConst+7
$08CA	$3096			MOVLW	150
$08CB	$00A8			MOVWF	_cardConst+8
$08CC	$3000			MOVLW	0
$08CD	$00A9			MOVWF	_cardConst+9
$08CE	$3050			MOVLW	80
$08CF	$00AA			MOVWF	_cardConst+10
$08D0	$3000			MOVLW	0
$08D1	$00AB			MOVWF	_cardConst+11
$08D2	$3000			MOVLW	0
$08D3	$1283			BCF	STATUS, RP0
$08D4	$00E5			MOVWF	_addrcard+0
$08D5	$3004			MOVLW	4
$08D6	$00E6			MOVWF	_addrcard+1
$08D7	$3008			MOVLW	8
$08D8	$00E7			MOVWF	_addrcard+2
$08D9	$300C			MOVLW	12
$08DA	$00E8			MOVWF	_addrcard+3
$08DB	$3010			MOVLW	16
$08DC	$00E9			MOVWF	_addrcard+4
$08DD	$3014			MOVLW	20
$08DE	$00EA			MOVWF	_addrcard+5
$08DF	$3018			MOVLW	24
$08E0	$00EB			MOVWF	_addrcard+6
$08E1	$3000			MOVLW	0
$08E2	$1683			BSF	STATUS, RP0
$08E3	$00CB			MOVWF	_cardPiu+0
$08E4	$3000			MOVLW	0
$08E5	$00CC			MOVWF	_cardMeno+0
$08E6	$0008			RETURN
$02B2	$	_main:
;MonoBank.c,492 :: 		void main () {
;MonoBank.c,495 :: 		setupMCU();
$02B2	$158A			BSF	PCLATH, 3
$02B3	$2000			CALL	GlobalIniMonoBank
$02B4	$118A			BCF	PCLATH, 3
$02B5	$158A			BSF	PCLATH, 3
$02B6	$247E			CALL	_setupMCU
$02B7	$118A			BCF	PCLATH, 3
;MonoBank.c,496 :: 		disabilitaTMR0();
$02B8	$158A			BSF	PCLATH, 3
$02B9	$2677			CALL	_disabilitaTMR0
$02BA	$118A			BCF	PCLATH, 3
;MonoBank.c,497 :: 		buzzer
$02BB	$1303			BCF	STATUS, RP1
$02BC	$1283			BCF	STATUS, RP0
$02BD	$1785			BSF	PORTA, 7
$02BE	$3021			MOVLW	33
$02BF	$00FB			MOVWF	STACK_11
$02C0	$30FF			MOVLW	255
$02C1	$00FA			MOVWF	STACK_10
$02C2	$0BFB			DECFSZ	STACK_11, F
$02C3	$2AC5			GOTO	$+2
$02C4	$2AC8			GOTO	$+4
$02C5	$0BFA			DECFSZ	STACK_10, F
$02C6	$2AC5			GOTO	$-1
$02C7	$2AC2			GOTO	$-5
$02C8	$3060			MOVLW	96
$02C9	$00FA			MOVWF	STACK_10
$02CA	$0BFA			DECFSZ	STACK_10, F
$02CB	$2ACA			GOTO	$-1
$02CC	$0000			NOP
$02CD	$0000			NOP
$02CE	$1385			BCF	PORTA, 7
;MonoBank.c,498 :: 		Lcd_Cmd(Lcd_CLEAR);       // Clear display
$02CF	$3001			MOVLW	1
$02D0	$1703			BSF	STATUS, RP1
$02D1	$0094			MOVWF	FARG_Lcd_Cmd+0
$02D2	$158A			BSF	PCLATH, 3
$02D3	$22ED			CALL	_Lcd_Cmd
$02D4	$118A			BCF	PCLATH, 3
;MonoBank.c,499 :: 		Lcd_Cmd(Lcd_CURSOR_OFF);  // Turn cursor off
$02D5	$300C			MOVLW	12
$02D6	$1703			BSF	STATUS, RP1
$02D7	$0094			MOVWF	FARG_Lcd_Cmd+0
$02D8	$158A			BSF	PCLATH, 3
$02D9	$22ED			CALL	_Lcd_Cmd
$02DA	$118A			BCF	PCLATH, 3
;MonoBank.c,503 :: 		Lcd_Out(1, 4, CopyConst2Ram(msg,msgs[0]));
$02DB	$30AC			MOVLW	_msg
$02DC	$1683			BSF	STATUS, RP0
$02DD	$00E5			MOVWF	FARG_CopyConst2Ram+0
$02DE	$083B			MOVF	_msgs, 0
$02DF	$00E6			MOVWF	FARG_CopyConst2Ram+1
$02E0	$083C			MOVF	_msgs+1, 0
$02E1	$00E7			MOVWF	FARG_CopyConst2Ram+2
$02E2	$158A			BSF	PCLATH, 3
$02E3	$24D9			CALL	_CopyConst2Ram
$02E4	$118A			BCF	PCLATH, 3
$02E5	$0870			MOVF	STACK_0, 0
$02E6	$00E7			MOVWF	FARG_LCD_Out+2
$02E7	$3001			MOVLW	1
$02E8	$00E5			MOVWF	FARG_LCD_Out+0
$02E9	$3004			MOVLW	4
$02EA	$00E6			MOVWF	FARG_LCD_Out+1
$02EB	$158A			BSF	PCLATH, 3
$02EC	$2333			CALL	_LCD_Out
$02ED	$118A			BCF	PCLATH, 3
;MonoBank.c,505 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,rigavuota));
$02EE	$30AC			MOVLW	_msg
$02EF	$1683			BSF	STATUS, RP0
$02F0	$00E5			MOVWF	FARG_CopyConst2Ram+0
$02F1	$1283			BCF	STATUS, RP0
$02F2	$086E			MOVF	_rigavuota, 0
$02F3	$1683			BSF	STATUS, RP0
$02F4	$00E6			MOVWF	FARG_CopyConst2Ram+1
$02F5	$1283			BCF	STATUS, RP0
$02F6	$086F			MOVF	_rigavuota+1, 0
$02F7	$1683			BSF	STATUS, RP0
$02F8	$00E7			MOVWF	FARG_CopyConst2Ram+2
$02F9	$158A			BSF	PCLATH, 3
$02FA	$24D9			CALL	_CopyConst2Ram
$02FB	$118A			BCF	PCLATH, 3
$02FC	$0870			MOVF	STACK_0, 0
$02FD	$00E7			MOVWF	FARG_LCD_Out+2
$02FE	$3002			MOVLW	2
$02FF	$00E5			MOVWF	FARG_LCD_Out+0
$0300	$3001			MOVLW	1
$0301	$00E6			MOVWF	FARG_LCD_Out+1
$0302	$158A			BSF	PCLATH, 3
$0303	$2333			CALL	_LCD_Out
$0304	$118A			BCF	PCLATH, 3
;MonoBank.c,507 :: 		inputNumeroValue=0;
$0305	$1683			BSF	STATUS, RP0
$0306	$01CD			CLRF	_inputNumeroValue
$0307	$01CE			CLRF	_inputNumeroValue+1
;MonoBank.c,508 :: 		rec1=0;
$0308	$01D4			CLRF	_rec1, 1
;MonoBank.c,530 :: 		do {
$0309	$	L_main_72:
;MonoBank.c,531 :: 		rec1=tastiera();
$0309	$1303			BCF	STATUS, RP1
$030A	$1683			BSF	STATUS, RP0
$030B	$158A			BSF	PCLATH, 3
$030C	$237B			CALL	_tastiera
$030D	$118A			BCF	PCLATH, 3
$030E	$0870			MOVF	STACK_0, 0
$030F	$00D4			MOVWF	_rec1
;MonoBank.c,532 :: 		if (rec1==tastoZERO)
$0310	$0870			MOVF	STACK_0, 0
$0311	$3A30			XORLW	48
$0312	$1D03			BTFSS	STATUS, Z
$0313	$2B9E			GOTO	L_main_74
;MonoBank.c,535 :: 		BACKLIGHT_ON
$0314	$1283			BCF	STATUS, RP0
$0315	$1486			BSF	PORTB, 1
;MonoBank.c,536 :: 		rec1=msgbox(2,1);
$0316	$3002			MOVLW	2
$0317	$1683			BSF	STATUS, RP0
$0318	$00D5			MOVWF	FARG_msgbox+0
$0319	$3001			MOVLW	1
$031A	$00D6			MOVWF	FARG_msgbox+1
$031B	$158A			BSF	PCLATH, 3
$031C	$22AA			CALL	_msgbox
$031D	$118A			BCF	PCLATH, 3
$031E	$0870			MOVF	STACK_0, 0
$031F	$00D4			MOVWF	_rec1
;MonoBank.c,538 :: 		if (rec1==tastoOK)  {
$0320	$0870			MOVF	STACK_0, 0
$0321	$3A2A			XORLW	42
$0322	$1D03			BTFSS	STATUS, Z
$0323	$2B86			GOTO	L_main_75
;MonoBank.c,539 :: 		resetImporti();
$0324	$158A			BSF	PCLATH, 3
$0325	$2597			CALL	_resetImporti
$0326	$118A			BCF	PCLATH, 3
;MonoBank.c,540 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,rigavuota));
$0327	$30AC			MOVLW	_msg
$0328	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0329	$1283			BCF	STATUS, RP0
$032A	$086E			MOVF	_rigavuota, 0
$032B	$1683			BSF	STATUS, RP0
$032C	$00E6			MOVWF	FARG_CopyConst2Ram+1
$032D	$1283			BCF	STATUS, RP0
$032E	$086F			MOVF	_rigavuota+1, 0
$032F	$1683			BSF	STATUS, RP0
$0330	$00E7			MOVWF	FARG_CopyConst2Ram+2
$0331	$158A			BSF	PCLATH, 3
$0332	$24D9			CALL	_CopyConst2Ram
$0333	$118A			BCF	PCLATH, 3
$0334	$0870			MOVF	STACK_0, 0
$0335	$00E7			MOVWF	FARG_LCD_Out+2
$0336	$3002			MOVLW	2
$0337	$00E5			MOVWF	FARG_LCD_Out+0
$0338	$3001			MOVLW	1
$0339	$00E6			MOVWF	FARG_LCD_Out+1
$033A	$158A			BSF	PCLATH, 3
$033B	$2333			CALL	_LCD_Out
$033C	$118A			BCF	PCLATH, 3
;MonoBank.c,541 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,msgs[2]));
$033D	$30AC			MOVLW	_msg
$033E	$1683			BSF	STATUS, RP0
$033F	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0340	$083F			MOVF	_msgs+4, 0
$0341	$00E6			MOVWF	FARG_CopyConst2Ram+1
$0342	$0840			MOVF	_msgs+5, 0
$0343	$00E7			MOVWF	FARG_CopyConst2Ram+2
$0344	$158A			BSF	PCLATH, 3
$0345	$24D9			CALL	_CopyConst2Ram
$0346	$118A			BCF	PCLATH, 3
$0347	$0870			MOVF	STACK_0, 0
$0348	$00E7			MOVWF	FARG_LCD_Out+2
$0349	$3002			MOVLW	2
$034A	$00E5			MOVWF	FARG_LCD_Out+0
$034B	$3001			MOVLW	1
$034C	$00E6			MOVWF	FARG_LCD_Out+1
$034D	$158A			BSF	PCLATH, 3
$034E	$2333			CALL	_LCD_Out
$034F	$118A			BCF	PCLATH, 3
;MonoBank.c,542 :: 		delayMaster;
$0350	$3002			MOVLW	2
$0351	$00FC			MOVWF	STACK_12
$0352	$30FF			MOVLW	255
$0353	$00FB			MOVWF	STACK_11
$0354	$30FF			MOVLW	255
$0355	$00FA			MOVWF	STACK_10
$0356	$0BFC			DECFSZ	STACK_12, F
$0357	$2B59			GOTO	$+2
$0358	$2B60			GOTO	$+8
$0359	$0BFB			DECFSZ	STACK_11, F
$035A	$2B5C			GOTO	$+2
$035B	$2B5F			GOTO	$+4
$035C	$0BFA			DECFSZ	STACK_10, F
$035D	$2B5C			GOTO	$-1
$035E	$2B59			GOTO	$-5
$035F	$2B56			GOTO	$-9
$0360	$3046			MOVLW	70
$0361	$00FB			MOVWF	STACK_11
$0362	$30FF			MOVLW	255
$0363	$00FA			MOVWF	STACK_10
$0364	$0BFB			DECFSZ	STACK_11, F
$0365	$2B67			GOTO	$+2
$0366	$2B6A			GOTO	$+4
$0367	$0BFA			DECFSZ	STACK_10, F
$0368	$2B67			GOTO	$-1
$0369	$2B64			GOTO	$-5
$036A	$30CF			MOVLW	207
$036B	$00FA			MOVWF	STACK_10
$036C	$0BFA			DECFSZ	STACK_10, F
$036D	$2B6C			GOTO	$-1
$036E	$0000			NOP
;MonoBank.c,543 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,rigavuota));
$036F	$30AC			MOVLW	_msg
$0370	$1683			BSF	STATUS, RP0
$0371	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0372	$1283			BCF	STATUS, RP0
$0373	$086E			MOVF	_rigavuota, 0
$0374	$1683			BSF	STATUS, RP0
$0375	$00E6			MOVWF	FARG_CopyConst2Ram+1
$0376	$1283			BCF	STATUS, RP0
$0377	$086F			MOVF	_rigavuota+1, 0
$0378	$1683			BSF	STATUS, RP0
$0379	$00E7			MOVWF	FARG_CopyConst2Ram+2
$037A	$158A			BSF	PCLATH, 3
$037B	$24D9			CALL	_CopyConst2Ram
$037C	$118A			BCF	PCLATH, 3
$037D	$0870			MOVF	STACK_0, 0
$037E	$00E7			MOVWF	FARG_LCD_Out+2
$037F	$3002			MOVLW	2
$0380	$00E5			MOVWF	FARG_LCD_Out+0
$0381	$3001			MOVLW	1
$0382	$00E6			MOVWF	FARG_LCD_Out+1
$0383	$158A			BSF	PCLATH, 3
$0384	$2333			CALL	_LCD_Out
$0385	$118A			BCF	PCLATH, 3
;MonoBank.c,544 :: 		}
$0386	$	L_main_75:
;MonoBank.c,545 :: 		Lcd_Out(2, 1, CopyConst2Ram(msg,rigavuota));
$0386	$30AC			MOVLW	_msg
$0387	$1683			BSF	STATUS, RP0
$0388	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0389	$1283			BCF	STATUS, RP0
$038A	$086E			MOVF	_rigavuota, 0
$038B	$1683			BSF	STATUS, RP0
$038C	$00E6			MOVWF	FARG_CopyConst2Ram+1
$038D	$1283			BCF	STATUS, RP0
$038E	$086F			MOVF	_rigavuota+1, 0
$038F	$1683			BSF	STATUS, RP0
$0390	$00E7			MOVWF	FARG_CopyConst2Ram+2
$0391	$158A			BSF	PCLATH, 3
$0392	$24D9			CALL	_CopyConst2Ram
$0393	$118A			BCF	PCLATH, 3
$0394	$0870			MOVF	STACK_0, 0
$0395	$00E7			MOVWF	FARG_LCD_Out+2
$0396	$3002			MOVLW	2
$0397	$00E5			MOVWF	FARG_LCD_Out+0
$0398	$3001			MOVLW	1
$0399	$00E6			MOVWF	FARG_LCD_Out+1
$039A	$158A			BSF	PCLATH, 3
$039B	$2333			CALL	_LCD_Out
$039C	$118A			BCF	PCLATH, 3
;MonoBank.c,546 :: 		BACKLIGHT_OFF
$039D	$1086			BCF	PORTB, 1
;MonoBank.c,547 :: 		}
$039E	$	L_main_74:
;MonoBank.c,551 :: 		leggiTessere();
$039E	$158A			BSF	PCLATH, 3
$039F	$2504			CALL	_leggiTessere
$03A0	$118A			BCF	PCLATH, 3
;MonoBank.c,552 :: 		displayTessere();
$03A1	$158A			BSF	PCLATH, 3
$03A2	$20E7			CALL	_displayTessere
$03A3	$118A			BCF	PCLATH, 3
;MonoBank.c,554 :: 		if ((cardPiu!=0) || (cardMeno!=0))  {
$03A4	$1683			BSF	STATUS, RP0
$03A5	$084B			MOVF	_cardPiu, 0
$03A6	$3A00			XORLW	0
$03A7	$1D03			BTFSS	STATUS, Z
$03A8	$2BAD			GOTO	L1149_ex_L_main_78
$03A9	$084C			MOVF	_cardMeno, 0
$03AA	$3A00			XORLW	0
$03AB	$1903			BTFSC	STATUS, Z
$03AC	$2D35			GOTO	L_main_78
$03AD	$	L1149_ex_L_main_78:
;MonoBank.c,555 :: 		BACKLIGHT_ON
$03AD	$1283			BCF	STATUS, RP0
$03AE	$1486			BSF	PORTB, 1
;MonoBank.c,556 :: 		if (cardPiu!=0)   tmpCardImporto=caricaImporto(cardPiu) ;
$03AF	$1683			BSF	STATUS, RP0
$03B0	$084B			MOVF	_cardPiu, 0
$03B1	$3A00			XORLW	0
$03B2	$1903			BTFSC	STATUS, Z
$03B3	$2BBE			GOTO	L_main_79
$03B4	$084B			MOVF	_cardPiu, 0
$03B5	$00E5			MOVWF	FARG_caricaImporto+0
$03B6	$158A			BSF	PCLATH, 3
$03B7	$256B			CALL	_caricaImporto
$03B8	$118A			BCF	PCLATH, 3
$03B9	$0870			MOVF	STACK_0, 0
$03BA	$00CF			MOVWF	_tmpCardImporto
$03BB	$0871			MOVF	STACK_0+1, 0
$03BC	$00D0			MOVWF	_tmpCardImporto+1
$03BD	$2BC7			GOTO	L_main_80
$03BE	$	L_main_79:
;MonoBank.c,557 :: 		else   tmpCardImporto=caricaImporto(cardMeno);
$03BE	$084C			MOVF	_cardMeno, 0
$03BF	$00E5			MOVWF	FARG_caricaImporto+0
$03C0	$158A			BSF	PCLATH, 3
$03C1	$256B			CALL	_caricaImporto
$03C2	$118A			BCF	PCLATH, 3
$03C3	$0870			MOVF	STACK_0, 0
$03C4	$00CF			MOVWF	_tmpCardImporto
$03C5	$0871			MOVF	STACK_0+1, 0
$03C6	$00D0			MOVWF	_tmpCardImporto+1
$03C7	$	L_main_80:
;MonoBank.c,558 :: 		mostraSaldo
$03C7	$30AC			MOVLW	_msg
$03C8	$00E5			MOVWF	FARG_CopyConst2Ram+0
$03C9	$1283			BCF	STATUS, RP0
$03CA	$086E			MOVF	_rigavuota, 0
$03CB	$1683			BSF	STATUS, RP0
$03CC	$00E6			MOVWF	FARG_CopyConst2Ram+1
$03CD	$1283			BCF	STATUS, RP0
$03CE	$086F			MOVF	_rigavuota+1, 0
$03CF	$1683			BSF	STATUS, RP0
$03D0	$00E7			MOVWF	FARG_CopyConst2Ram+2
$03D1	$158A			BSF	PCLATH, 3
$03D2	$24D9			CALL	_CopyConst2Ram
$03D3	$118A			BCF	PCLATH, 3
$03D4	$0870			MOVF	STACK_0, 0
$03D5	$00E7			MOVWF	FARG_LCD_Out+2
$03D6	$3002			MOVLW	2
$03D7	$00E5			MOVWF	FARG_LCD_Out+0
$03D8	$3001			MOVLW	1
$03D9	$00E6			MOVWF	FARG_LCD_Out+1
$03DA	$158A			BSF	PCLATH, 3
$03DB	$2333			CALL	_LCD_Out
$03DC	$118A			BCF	PCLATH, 3
$03DD	$30AC			MOVLW	_msg
$03DE	$1683			BSF	STATUS, RP0
$03DF	$00E5			MOVWF	FARG_CopyConst2Ram+0
$03E0	$0843			MOVF	_msgs+8, 0
$03E1	$00E6			MOVWF	FARG_CopyConst2Ram+1
$03E2	$0844			MOVF	_msgs+9, 0
$03E3	$00E7			MOVWF	FARG_CopyConst2Ram+2
$03E4	$158A			BSF	PCLATH, 3
$03E5	$24D9			CALL	_CopyConst2Ram
$03E6	$118A			BCF	PCLATH, 3
$03E7	$0870			MOVF	STACK_0, 0
$03E8	$00E7			MOVWF	FARG_LCD_Out+2
$03E9	$3002			MOVLW	2
$03EA	$00E5			MOVWF	FARG_LCD_Out+0
$03EB	$3001			MOVLW	1
$03EC	$00E6			MOVWF	FARG_LCD_Out+1
$03ED	$158A			BSF	PCLATH, 3
$03EE	$2333			CALL	_LCD_Out
$03EF	$118A			BCF	PCLATH, 3
$03F0	$1683			BSF	STATUS, RP0
$03F1	$084F			MOVF	_tmpCardImporto, 0
$03F2	$00E5			MOVWF	FARG_IntToStr+0
$03F3	$0850			MOVF	_tmpCardImporto+1, 0
$03F4	$00E6			MOVWF	FARG_IntToStr+1
$03F5	$30AC			MOVLW	_msg
$03F6	$00E7			MOVWF	FARG_IntToStr+2
$03F7	$158A			BSF	PCLATH, 3
$03F8	$2250			CALL	_IntToStr
$03F9	$118A			BCF	PCLATH, 3
$03FA	$158A			BSF	PCLATH, 3
$03FB	$2669			CALL	_msgAddZeros
$03FC	$118A			BCF	PCLATH, 3
$03FD	$3007			MOVLW	7
$03FE	$00D1			MOVWF	_i
$03FF	$	L_main_81:
$03FF	$0851			MOVF	_i, 0
$0400	$3C00			SUBLW	0
$0401	$1803			BTFSC	STATUS, C
$0402	$2C35			GOTO	L_main_82
$0403	$3002			MOVLW	2
$0404	$00E5			MOVWF	FARG_Lcd_Chr+0
$0405	$0851			MOVF	_i, 0
$0406	$3F09			ADDLW	9
$0407	$00E6			MOVWF	FARG_Lcd_Chr+1
$0408	$0851			MOVF	_i, 0
$0409	$3FAC			ADDLW	_msg
$040A	$0084			MOVWF	FSR
$040B	$0800			MOVF	INDF, 0
$040C	$00E7			MOVWF	FARG_Lcd_Chr+2
$040D	$158A			BSF	PCLATH, 3
$040E	$2409			CALL	_Lcd_Chr
$040F	$118A			BCF	PCLATH, 3
$0410	$3012			MOVLW	18
$0411	$00FB			MOVWF	STACK_11
$0412	$30FF			MOVLW	255
$0413	$00FA			MOVWF	STACK_10
$0414	$0BFB			DECFSZ	STACK_11, F
$0415	$2C17			GOTO	$+2
$0416	$2C1A			GOTO	$+4
$0417	$0BFA			DECFSZ	STACK_10, F
$0418	$2C17			GOTO	$-1
$0419	$2C14			GOTO	$-5
$041A	$30CE			MOVLW	206
$041B	$00FA			MOVWF	STACK_10
$041C	$0BFA			DECFSZ	STACK_10, F
$041D	$2C1C			GOTO	$-1
$041E	$0000			NOP
$041F	$0000			NOP
$0420	$1785			BSF	PORTA, 7
$0421	$3012			MOVLW	18
$0422	$00FB			MOVWF	STACK_11
$0423	$30FF			MOVLW	255
$0424	$00FA			MOVWF	STACK_10
$0425	$0BFB			DECFSZ	STACK_11, F
$0426	$2C28			GOTO	$+2
$0427	$2C2B			GOTO	$+4
$0428	$0BFA			DECFSZ	STACK_10, F
$0429	$2C28			GOTO	$-1
$042A	$2C25			GOTO	$-5
$042B	$30CE			MOVLW	206
$042C	$00FA			MOVWF	STACK_10
$042D	$0BFA			DECFSZ	STACK_10, F
$042E	$2C2D			GOTO	$-1
$042F	$0000			NOP
$0430	$0000			NOP
$0431	$1385			BCF	PORTA, 7
$0432	$	L_main_83:
$0432	$1683			BSF	STATUS, RP0
$0433	$03D1			DECF	_i, 1
$0434	$2BFF			GOTO	L_main_81
$0435	$	L_main_82:
$0435	$3002			MOVLW	2
$0436	$00FC			MOVWF	STACK_12
$0437	$30FF			MOVLW	255
$0438	$00FB			MOVWF	STACK_11
$0439	$30FF			MOVLW	255
$043A	$00FA			MOVWF	STACK_10
$043B	$0BFC			DECFSZ	STACK_12, F
$043C	$2C3E			GOTO	$+2
$043D	$2C45			GOTO	$+8
$043E	$0BFB			DECFSZ	STACK_11, F
$043F	$2C41			GOTO	$+2
$0440	$2C44			GOTO	$+4
$0441	$0BFA			DECFSZ	STACK_10, F
$0442	$2C41			GOTO	$-1
$0443	$2C3E			GOTO	$-5
$0444	$2C3B			GOTO	$-9
$0445	$3046			MOVLW	70
$0446	$00FB			MOVWF	STACK_11
$0447	$30FF			MOVLW	255
$0448	$00FA			MOVWF	STACK_10
$0449	$0BFB			DECFSZ	STACK_11, F
$044A	$2C4C			GOTO	$+2
$044B	$2C4F			GOTO	$+4
$044C	$0BFA			DECFSZ	STACK_10, F
$044D	$2C4C			GOTO	$-1
$044E	$2C49			GOTO	$-5
$044F	$30CF			MOVLW	207
$0450	$00FA			MOVWF	STACK_10
$0451	$0BFA			DECFSZ	STACK_10, F
$0452	$2C51			GOTO	$-1
$0453	$0000			NOP
$0454	$3002			MOVLW	2
$0455	$00FC			MOVWF	STACK_12
$0456	$30FF			MOVLW	255
$0457	$00FB			MOVWF	STACK_11
$0458	$30FF			MOVLW	255
$0459	$00FA			MOVWF	STACK_10
$045A	$0BFC			DECFSZ	STACK_12, F
$045B	$2C5D			GOTO	$+2
$045C	$2C64			GOTO	$+8
$045D	$0BFB			DECFSZ	STACK_11, F
$045E	$2C60			GOTO	$+2
$045F	$2C63			GOTO	$+4
$0460	$0BFA			DECFSZ	STACK_10, F
$0461	$2C60			GOTO	$-1
$0462	$2C5D			GOTO	$-5
$0463	$2C5A			GOTO	$-9
$0464	$3046			MOVLW	70
$0465	$00FB			MOVWF	STACK_11
$0466	$30FF			MOVLW	255
$0467	$00FA			MOVWF	STACK_10
$0468	$0BFB			DECFSZ	STACK_11, F
$0469	$2C6B			GOTO	$+2
$046A	$2C6E			GOTO	$+4
$046B	$0BFA			DECFSZ	STACK_10, F
$046C	$2C6B			GOTO	$-1
$046D	$2C68			GOTO	$-5
$046E	$30CF			MOVLW	207
$046F	$00FA			MOVWF	STACK_10
$0470	$0BFA			DECFSZ	STACK_10, F
$0471	$2C70			GOTO	$-1
$0472	$0000			NOP
$0473	$3002			MOVLW	2
$0474	$00FC			MOVWF	STACK_12
$0475	$30FF			MOVLW	255
$0476	$00FB			MOVWF	STACK_11
$0477	$30FF			MOVLW	255
$0478	$00FA			MOVWF	STACK_10
$0479	$0BFC			DECFSZ	STACK_12, F
$047A	$2C7C			GOTO	$+2
$047B	$2C83			GOTO	$+8
$047C	$0BFB			DECFSZ	STACK_11, F
$047D	$2C7F			GOTO	$+2
$047E	$2C82			GOTO	$+4
$047F	$0BFA			DECFSZ	STACK_10, F
$0480	$2C7F			GOTO	$-1
$0481	$2C7C			GOTO	$-5
$0482	$2C79			GOTO	$-9
$0483	$3046			MOVLW	70
$0484	$00FB			MOVWF	STACK_11
$0485	$30FF			MOVLW	255
$0486	$00FA			MOVWF	STACK_10
$0487	$0BFB			DECFSZ	STACK_11, F
$0488	$2C8A			GOTO	$+2
$0489	$2C8D			GOTO	$+4
$048A	$0BFA			DECFSZ	STACK_10, F
$048B	$2C8A			GOTO	$-1
$048C	$2C87			GOTO	$-5
$048D	$30CF			MOVLW	207
$048E	$00FA			MOVWF	STACK_10
$048F	$0BFA			DECFSZ	STACK_10, F
$0490	$2C8F			GOTO	$-1
$0491	$0000			NOP
$0492	$30AC			MOVLW	_msg
$0493	$00E5			MOVWF	FARG_CopyConst2Ram+0
$0494	$1283			BCF	STATUS, RP0
$0495	$086E			MOVF	_rigavuota, 0
$0496	$1683			BSF	STATUS, RP0
$0497	$00E6			MOVWF	FARG_CopyConst2Ram+1
$0498	$1283			BCF	STATUS, RP0
$0499	$086F			MOVF	_rigavuota+1, 0
$049A	$1683			BSF	STATUS, RP0
$049B	$00E7			MOVWF	FARG_CopyConst2Ram+2
$049C	$158A			BSF	PCLATH, 3
$049D	$24D9			CALL	_CopyConst2Ram
$049E	$118A			BCF	PCLATH, 3
$049F	$0870			MOVF	STACK_0, 0
$04A0	$00E7			MOVWF	FARG_LCD_Out+2
$04A1	$3002			MOVLW	2
$04A2	$00E5			MOVWF	FARG_LCD_Out+0
$04A3	$3001			MOVLW	1
$04A4	$00E6			MOVWF	FARG_LCD_Out+1
$04A5	$158A			BSF	PCLATH, 3
$04A6	$2333			CALL	_LCD_Out
$04A7	$118A			BCF	PCLATH, 3
;MonoBank.c,560 :: 		inputNumero(3,2);
$04A8	$3003			MOVLW	3
$04A9	$1683			BSF	STATUS, RP0
$04AA	$00D5			MOVWF	FARG_inputNumero+0
$04AB	$3002			MOVLW	2
$04AC	$00D6			MOVWF	FARG_inputNumero+1
$04AD	$2539			CALL	_inputNumero
;MonoBank.c,561 :: 		leggiTessere();
$04AE	$158A			BSF	PCLATH, 3
$04AF	$2504			CALL	_leggiTessere
$04B0	$118A			BCF	PCLATH, 3
;MonoBank.c,562 :: 		displayTessere();
$04B1	$158A			BSF	PCLATH, 3
$04B2	$20E7			CALL	_displayTessere
$04B3	$118A			BCF	PCLATH, 3
;MonoBank.c,563 :: 		if ((cardPiu!=0) || (cardMeno!=0))  {
$04B4	$1683			BSF	STATUS, RP0
$04B5	$084B			MOVF	_cardPiu, 0
$04B6	$3A00			XORLW	0
$04B7	$1D03			BTFSS	STATUS, Z
$04B8	$2CBD			GOTO	L1345_ex_L_main_86
$04B9	$084C			MOVF	_cardMeno, 0
$04BA	$3A00			XORLW	0
$04BB	$1903			BTFSC	STATUS, Z
$04BC	$2D2E			GOTO	L_main_86
$04BD	$	L1345_ex_L_main_86:
;MonoBank.c,564 :: 		if (inputNumeroValue>0) {
$04BD	$084E			MOVF	_inputNumeroValue+1, 0
$04BE	$3C00			SUBLW	0
$04BF	$1D03			BTFSS	STATUS, Z
$04C0	$2CC3			GOTO	L_main_108
$04C1	$084D			MOVF	_inputNumeroValue, 0
$04C2	$3C00			SUBLW	0
$04C3	$	L_main_108:
$04C3	$1803			BTFSC	STATUS, C
$04C4	$2D2E			GOTO	L_main_87
;MonoBank.c,565 :: 		IntToStr(inputNumeroValue, msg);
$04C5	$084D			MOVF	_inputNumeroValue, 0
$04C6	$00E5			MOVWF	FARG_IntToStr+0
$04C7	$084E			MOVF	_inputNumeroValue+1, 0
$04C8	$00E6			MOVWF	FARG_IntToStr+1
$04C9	$30AC			MOVLW	_msg
$04CA	$00E7			MOVWF	FARG_IntToStr+2
$04CB	$158A			BSF	PCLATH, 3
$04CC	$2250			CALL	_IntToStr
$04CD	$118A			BCF	PCLATH, 3
;MonoBank.c,566 :: 		msgAddZeros();
$04CE	$158A			BSF	PCLATH, 3
$04CF	$2669			CALL	_msgAddZeros
$04D0	$118A			BCF	PCLATH, 3
;MonoBank.c,567 :: 		Lcd_Out(2, 9, msg);
$04D1	$3002			MOVLW	2
$04D2	$00E5			MOVWF	FARG_LCD_Out+0
$04D3	$3009			MOVLW	9
$04D4	$00E6			MOVWF	FARG_LCD_Out+1
$04D5	$30AC			MOVLW	_msg
$04D6	$00E7			MOVWF	FARG_LCD_Out+2
$04D7	$158A			BSF	PCLATH, 3
$04D8	$2333			CALL	_LCD_Out
$04D9	$118A			BCF	PCLATH, 3
;MonoBank.c,568 :: 		delayMaster;
$04DA	$3002			MOVLW	2
$04DB	$00FC			MOVWF	STACK_12
$04DC	$30FF			MOVLW	255
$04DD	$00FB			MOVWF	STACK_11
$04DE	$30FF			MOVLW	255
$04DF	$00FA			MOVWF	STACK_10
$04E0	$0BFC			DECFSZ	STACK_12, F
$04E1	$2CE3			GOTO	$+2
$04E2	$2CEA			GOTO	$+8
$04E3	$0BFB			DECFSZ	STACK_11, F
$04E4	$2CE6			GOTO	$+2
$04E5	$2CE9			GOTO	$+4
$04E6	$0BFA			DECFSZ	STACK_10, F
$04E7	$2CE6			GOTO	$-1
$04E8	$2CE3			GOTO	$-5
$04E9	$2CE0			GOTO	$-9
$04EA	$3046			MOVLW	70
$04EB	$00FB			MOVWF	STACK_11
$04EC	$30FF			MOVLW	255
$04ED	$00FA			MOVWF	STACK_10
$04EE	$0BFB			DECFSZ	STACK_11, F
$04EF	$2CF1			GOTO	$+2
$04F0	$2CF4			GOTO	$+4
$04F1	$0BFA			DECFSZ	STACK_10, F
$04F2	$2CF1			GOTO	$-1
$04F3	$2CEE			GOTO	$-5
$04F4	$30CF			MOVLW	207
$04F5	$00FA			MOVWF	STACK_10
$04F6	$0BFA			DECFSZ	STACK_10, F
$04F7	$2CF6			GOTO	$-1
$04F8	$0000			NOP
;MonoBank.c,569 :: 		delayMaster;
$04F9	$3002			MOVLW	2
$04FA	$00FC			MOVWF	STACK_12
$04FB	$30FF			MOVLW	255
$04FC	$00FB			MOVWF	STACK_11
$04FD	$30FF			MOVLW	255
$04FE	$00FA			MOVWF	STACK_10
$04FF	$0BFC			DECFSZ	STACK_12, F
$0500	$2D02			GOTO	$+2
$0501	$2D09			GOTO	$+8
$0502	$0BFB			DECFSZ	STACK_11, F
$0503	$2D05			GOTO	$+2
$0504	$2D08			GOTO	$+4
$0505	$0BFA			DECFSZ	STACK_10, F
$0506	$2D05			GOTO	$-1
$0507	$2D02			GOTO	$-5
$0508	$2CFF			GOTO	$-9
$0509	$3046			MOVLW	70
$050A	$00FB			MOVWF	STACK_11
$050B	$30FF			MOVLW	255
$050C	$00FA			MOVWF	STACK_10
$050D	$0BFB			DECFSZ	STACK_11, F
$050E	$2D10			GOTO	$+2
$050F	$2D13			GOTO	$+4
$0510	$0BFA			DECFSZ	STACK_10, F
$0511	$2D10			GOTO	$-1
$0512	$2D0D			GOTO	$-5
$0513	$30CF			MOVLW	207
$0514	$00FA			MOVWF	STACK_10
$0515	$0BFA			DECFSZ	STACK_10, F
$0516	$2D15			GOTO	$-1
$0517	$0000			NOP
;MonoBank.c,570 :: 		if (cardPiu!=0) movimentaCarta(cardPiu,1);
$0518	$1683			BSF	STATUS, RP0
$0519	$084B			MOVF	_cardPiu, 0
$051A	$3A00			XORLW	0
$051B	$1903			BTFSC	STATUS, Z
$051C	$2D22			GOTO	L_main_88
$051D	$084B			MOVF	_cardPiu, 0
$051E	$00D5			MOVWF	FARG_movimentaCarta+0
$051F	$3001			MOVLW	1
$0520	$00D6			MOVWF	FARG_movimentaCarta+1
$0521	$2004			CALL	_movimentaCarta
$0522	$	L_main_88:
;MonoBank.c,571 :: 		displayTessere();
$0522	$158A			BSF	PCLATH, 3
$0523	$20E7			CALL	_displayTessere
$0524	$118A			BCF	PCLATH, 3
;MonoBank.c,572 :: 		if (cardMeno!=0) movimentaCarta(cardMeno,0);
$0525	$1683			BSF	STATUS, RP0
$0526	$084C			MOVF	_cardMeno, 0
$0527	$3A00			XORLW	0
$0528	$1903			BTFSC	STATUS, Z
$0529	$2D2E			GOTO	L_main_89
$052A	$084C			MOVF	_cardMeno, 0
$052B	$00D5			MOVWF	FARG_movimentaCarta+0
$052C	$01D6			CLRF	FARG_movimentaCarta+1, 1
$052D	$2004			CALL	_movimentaCarta
$052E	$	L_main_89:
;MonoBank.c,574 :: 		}
$052E	$	L_main_87:
;MonoBank.c,575 :: 		}
$052E	$	L_main_86:
;MonoBank.c,576 :: 		BACKLIGHT_OFF
$052E	$1303			BCF	STATUS, RP1
$052F	$1283			BCF	STATUS, RP0
$0530	$1303			BCF	STATUS, RP1
$0531	$1283			BCF	STATUS, RP0
$0532	$1303			BCF	STATUS, RP1
$0533	$1283			BCF	STATUS, RP0
$0534	$1086			BCF	PORTB, 1
;MonoBank.c,577 :: 		}
$0535	$	L_main_78:
;MonoBank.c,580 :: 		} while (1);                    // endless loop (as this condition is always satisfied)
$0535	$1303			BCF	STATUS, RP1
$0536	$1283			BCF	STATUS, RP0
$0537	$2B09			GOTO	L_main_72
;MonoBank.c,583 :: 		}
$0538	$2D38			GOTO	$


//** Procedures locations **
//ADDRESS		PROCEDURE
//----------------------------------------------
$0004		movimentaCarta
$02B2		main
$0539		inputNumero
$06D6		decodifica_tasto
$0738		Delay_1us
$0800		GlobalIniMonoBank
$08E7		displayTessere
$0940		Lcd_Init
$098F		WordToStr
$09F8		atoi
$0A50		IntToStr
$0AAA		msgbox
$0AED		Lcd_Cmd
$0B33		LCD_Out
$0B7B		tastiera
$0BBF		Mul_16x16_S
$0C09		Lcd_Chr
$0C45		decodifica_tessera
$0C7E		setupMCU
$0CAB		Adc_Read
$0CD9		CopyConst2Ram
$0D04		leggiTessere
$0D1B		store_int
$0D35		read_int
$0D4E		Div_16x16_U
$0D6B		caricaImporto
$0D7F		EEprom_write
$0D97		resetImporti
$0DA7		salvaImporto
$0DB7		?table__lstr_2_MonoBank
$0DC9		?table__lstr_5_MonoBank
$0DDB		?table__lstr_4_MonoBank
$0DEC		Delay_5500us
$0DFD		Lcd_Chr_CP
$0E09		isdigit
$0E18		?table__lstr_3_MonoBank
$0E23		EEprom_read
$0E2E		Delay_22us
$0E37		Delay_50us
$0E40		?table__lstr_8_MonoBank
$0E49		?table__lstr_9_MonoBank
$0E51		?table__lstr_6_MonoBank
$0E59		?table__lstr_10_MonoBank
$0E61		?table__lstr_7_MonoBank
$0E69		msgAddZeros
$0E70		____DoICP
$0E77		disabilitaTMR0
$0E7C		?table__lstr_1_MonoBank


//** Labels locations **
//ADDRESS		LABEL
//----------------------------------------------
$0004		_movimentaCarta:
$002E		L_movimentaCarta_60:
$0039		L_movimentaCarta_61:
$00E7		L_movimentaCarta_105:
$00ED		L_movimentaCarta_106:
$0180		L_movimentaCarta_62:
$0186		L_movimentaCarta_107:
$018B		L_movimentaCarta_64:
$0191		L_movimentaCarta_63:
$0191		L_movimentaCarta_65:
$019D		L_movimentaCarta_66:
$01CD		L_movimentaCarta_68:
$01D0		L_movimentaCarta_67:
$0208		L_movimentaCarta_69:
$023B		L_movimentaCarta_71:
$023E		L_movimentaCarta_70:
$02B2		_main:
$0309		L_main_72:
$0386		L_main_75:
$039E		L_main_74:
$03AD		L1149_ex_L_main_78:
$03BE		L_main_79:
$03C7		L_main_80:
$03FF		L_main_81:
$0432		L_main_83:
$0435		L_main_82:
$04BD		L1345_ex_L_main_86:
$04C3		L_main_108:
$0522		L_main_88:
$052E		L_main_86:
$052E		L_main_87:
$052E		L_main_89:
$0535		L_main_78:
$0539		_inputNumero:
$0546		L_inputNumero_24:
$0550		L_inputNumero_26:
$0552		L_inputNumero_25:
$057A		L_inputNumero_27:
$05A3		L_inputNumero_102:
$05DB		L_inputNumero_30:
$05EA		L_inputNumero_31:
$05F5		L_inputNumero_29:
$05FE		L337_ex_L_inputNumero_34:
$061D		L_inputNumero_34:
$0624		L_inputNumero_35:
$064B		L_inputNumero_36:
$064B		L_inputNumero_37:
$065F		L387_ex_L_inputNumero_40:
$0673		L_inputNumero_40:
$067F		L_inputNumero_28:
$067F		L411_ex_L_inputNumero_27:
$068A		L_inputNumero_44:
$0691		L_inputNumero_45:
$0699		L_inputNumero_46:
$06A1		L_inputNumero_47:
$06A2		L_inputNumero_43:
$06B4		L_inputNumero_50:
$06B6		L_inputNumero_51:
$06B7		L_inputNumero_49:
$06B9		L_inputNumero_48:
$06B9		L_inputNumero_52:
$06D6		_decodifica_tasto:
$06DA		L_decodifica_tasto_8:
$06E3		L_decodifica_tasto_94:
$06E9		L_decodifica_tasto_95:
$070E		L_decodifica_tasto_96:
$071C		L_decodifica_tasto_97:
$071E		L66_ex_L_decodifica_tasto_13:
$0723		L_decodifica_tasto_98:
$0729		L_decodifica_tasto_99:
$0731		L_decodifica_tasto_10:
$0731		L_decodifica_tasto_13:
$0735		L_decodifica_tasto_9:
$0738		_Delay_1us:
$0800		GlobalIniMonoBank:
$08E7		_displayTessere:
$0915		L_displayTessere_18:
$0922		L_displayTessere_19:
$092C		L_displayTessere_100:
$093D		L_displayTessere_20:
$0940		_Lcd_Init:
$098F		_WordToStr:
$09BA		L_WordToStr_4:
$09C2		L_WordToStr_51:
$09F5		L_WordToStr_5:
$09F8		___atoi_skipws_atoi:
$09F8		_atoi:
$0A08		L252_ex_L_atoi_55:
$0A0A		L_atoi_55:
$0A14		L_atoi_56:
$0A19		___atoi_conv_atoi:
$0A19		L_atoi_57:
$0A19		L_atoi_58:
$0A3F		L_atoi_59:
$0A4B		L_atoi_60:
$0A50		_IntToStr:
$0A60		L_IntToStr_52:
$0A6C		L_IntToStr_12:
$0A77		L_IntToStr_13:
$0A8F		L_IntToStr_14:
$0A96		L_IntToStr_16:
$0AA1		L_IntToStr_17:
$0AA9		L_IntToStr_15:
$0AAA		_msgbox:
$0AC7		L_msgbox_103:
$0ACD		L_msgbox_104:
$0ADD		L_msgbox_56:
$0AEA		L_msgbox_57:
$0AEA		L542_ex_L_msgbox_56:
$0AED		_Lcd_Cmd:
$0AF5		L_Lcd_Cmd_0:
$0B09		L_Lcd_Cmd_1:
$0B0A		L_Lcd_Cmd_2:
$0B12		L_Lcd_Cmd_3:
$0B26		L_Lcd_Cmd_4:
$0B27		L_Lcd_Cmd_5:
$0B31		L_Lcd_Cmd_6:
$0B32		L_Lcd_Cmd_7:
$0B33		_LCD_Out:
$0B34		L_LCD_Out_19:
$0B39		L_LCD_Out_20:
$0B3C		L_LCD_Out_21:
$0B3F		L_LCD_Out_22:
$0B42		L_LCD_Out_23:
$0B45		L_LCD_Out_17:
$0B58		L_LCD_Out_18:
$0B66		L_LCD_Out_24:
$0B77		L_LCD_Out_25:
$0B7B		_tastiera:
$0B7E		L_tastiera_21:
$0BA2		L_tastiera_101:
$0BA4		L_tastiera_22:
$0BBB		L_tastiera_23:
$0BBF		_Mul_16x16_S:
$0C09		_Lcd_Chr:
$0C0A		L_Lcd_Chr_10:
$0C0F		L_Lcd_Chr_11:
$0C12		L_Lcd_Chr_12:
$0C15		L_Lcd_Chr_13:
$0C18		L_Lcd_Chr_14:
$0C1B		L_Lcd_Chr_8:
$0C2E		L_Lcd_Chr_9:
$0C45		_decodifica_tessera:
$0C52		L_decodifica_tessera_90:
$0C56		L_decodifica_tessera_3:
$0C57		L_decodifica_tessera_4:
$0C60		L_decodifica_tessera_91:
$0C66		L_decodifica_tessera_92:
$0C74		L_decodifica_tessera_93:
$0C79		L_decodifica_tessera_6:
$0C79		L_decodifica_tessera_7:
$0C7B		L_decodifica_tessera_5:
$0C7E		_setupMCU:
$0CAB		_Adc_Read:
$0CC1		L_Adc_Read_0:
$0CC5		L_Adc_Read_1:
$0CCC		L_Adc_Read_2:
$0CD3		L_Adc_Read_3:
$0CD9		_CopyConst2Ram:
$0CDD		L_CopyConst2Ram_0:
$0CFF		L_CopyConst2Ram_2:
$0D00		L_CopyConst2Ram_1:
$0D04		_leggiTessere:
$0D1B		_store_int:
$0D35		_read_int:
$0D4E		_Div_16x16_U:
$0D6B		_caricaImporto:
$0D7F		_EEprom_write:
$0D80		L_EEprom_write_0:
$0D86		L_EEprom_write_1:
$0D97		_resetImporti:
$0D9A		L_resetImporti_53:
$0DA3		L_resetImporti_55:
$0DA6		L_resetImporti_54:
$0DA7		_salvaImporto:
$0DB7		table__lstr_2_MonoBank:
$0DC9		table__lstr_5_MonoBank:
$0DDB		table__lstr_4_MonoBank:
$0DEC		_Delay_5500us:
$0DFD		_Lcd_Chr_CP:
$0E09		_isdigit:
$0E16		L_isdigit_9:
$0E17		L_isdigit_8:
$0E18		table__lstr_3_MonoBank:
$0E23		_EEprom_read:
$0E2E		_Delay_22us:
$0E37		_Delay_50us:
$0E40		table__lstr_8_MonoBank:
$0E49		table__lstr_9_MonoBank:
$0E51		table__lstr_6_MonoBank:
$0E59		table__lstr_10_MonoBank:
$0E61		table__lstr_7_MonoBank:
$0E69		_msgAddZeros:
$0E70		_____DoICP:
$0E77		_disabilitaTMR0:
$0E7C		table__lstr_1_MonoBank:


//** Variables locations **
//ADDRESS		VARIABLE
//----------------------------------------------
$0000		INDF
$0002		PCL
$0003		STATUS
$0004		FSR
$0005		PORTA
$0006		PORTB
$000A		PCLATH
$000B		INTCON
$0017		CCP1CON
$001E		ADRESH
$001F		ADCON0
$0020		LCD_port_address
$0021		LCD_cmd_status
$0022		___DoICPSavePCLATH
$0023		___DoICPHiAddr
$0024		___DoICPLoAddr
$0025		_keyPadConst
$0065		_addrcard
$006C		_NOcardConst
$006E		_rigavuota
$0070		STACK_0
$0071		STACK_1
$0072		STACK_2
$0073		STACK_3
$0074		STACK_4
$0075		STACK_5
$0076		STACK_6
$0077		STACK_7
$0078		STACK_8
$0079		STACK_9
$007A		STACK_10
$007B		STACK_11
$007C		STACK_12
$007D		STACK_13
$007E		STACK_14
$007F		STACK_15
$0085		TRISA
$0086		TRISB
$008C		PIE1
$008D		PIE2
$008F		OSCCON
$009B		ANSEL
$009C		CMCON
$009E		ADRESL
$009F		ADCON1
$00A0		_cardConst
$00AC		_msg
$00BB		_msgs
$00CB		_cardPiu
$00CC		_cardMeno
$00CD		_inputNumeroValue
$00CF		_tmpCardImporto
$00D1		_i
$00D2		_spazio
$00D4		_rec1
$00D5		FARG_inputNumero+0
$00D5		FARG_movimentaCarta+0
$00D5		FARG_msgbox+0
$00D5		resetImporti_i_L0
$00D6		FARG_inputNumero+1
$00D6		FARG_movimentaCarta+1
$00D6		FARG_msgbox+1
$00D7		inputNumero_iicc_L0
$00D7		movimentaCarta_idm_L0
$00D7		msgbox_current_L0
$00D8		inputNumero_xcol_L0
$00D9		inputNumero_current_L0
$00DA		inputNumero_digits_L0
$00E4		inputNumero_ciniziale_L0
$00E5		FARG_atoi+0
$00E5		FARG_caricaImporto+0
$00E5		FARG_CopyConst2Ram+0
$00E5		FARG_decodifica_tessera+0
$00E5		FARG_IntToStr+0
$00E5		FARG_Lcd_Chr+0
$00E5		FARG_Lcd_Init+0
$00E5		FARG_LCD_Out+0
$00E5		FARG_salvaImporto+0
$00E5		tastiera_i_L0
$00E6		atoi_c_L0
$00E6		caricaImporto_adr_L0
$00E6		FARG_CopyConst2Ram+1
$00E6		FARG_Lcd_Chr+1
$00E6		FARG_LCD_Out+1
$00E6		FARG_salvaImporto+1
$00E7		atoi_a_L0
$00E7		decodifica_tessera_i_L0
$00E7		FARG_IntToStr+2
$00E7		FARG_Lcd_Chr+2
$00E7		FARG_LCD_Out+2
$00E8		CopyConst2Ram_d_L0
$00E8		decodifica_tessera_vo_L0
$00E8		IntToStr_i_L0
$00E8		LCD_Out_i_L0
$00E9		atoi_sign_L0
$00E9		IntToStr_negative_L0
$00EA		IntToStr_inword_L0
$00EC		FARG_Adc_Read+0
$00EC		FARG_decodifica_tasto+0
$00EC		FARG_isdigit+0
$00EC		FARG_Lcd_Chr_CP+0
$00EC		FARG_read_int+0
$00EC		FARG_store_int+0
$00EC		FARG_WordToStr+0
$00EE		FARG_store_int+2
$00EE		FARG_WordToStr+2
$00EE		read_int_th_L0
$010C		EEDATA
$010D		EEADR
$0110		decodifica_tasto_i_L0
$0110		WordToStr_pos_L0
$0111		
$0111		decodifica_tasto_max_L0
$0113		decodifica_tasto_vo_L0
$0114		FARG_EEprom_read+0
$0114		FARG_EEprom_write+0
$0114		FARG_Lcd_Cmd+0
$0115		FARG_EEprom_write+1
$018C		EECON1
$018D		EECON2


